<?xml version="1.0"?>
<?xml-stylesheet type="text/css" href="http://luciddb.org/wiki/skins/common/feed.css?303"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
		<id>http://luciddb.org/wiki/api.php?action=feedcontributions&amp;user=Smoodoo&amp;feedformat=atom</id>
		<title>LucidDB Wiki - User contributions [en]</title>
		<link rel="self" type="application/atom+xml" href="http://luciddb.org/wiki/api.php?action=feedcontributions&amp;user=Smoodoo&amp;feedformat=atom"/>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/Special:Contributions/Smoodoo"/>
		<updated>2014-04-14T19:52:24Z</updated>
		<subtitle>User contributions</subtitle>
		<generator>MediaWiki 1.18.1</generator>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbDocs</id>
		<title>LucidDbDocs</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbDocs"/>
				<updated>2013-04-09T22:33:08Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* Commercial Support */ Updated the link to the source code&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;This is the main index page for documentation about the [[LucidDB]] open-source project, a DBMS optimized for business intelligence.  LucidDB is part of [http://www.eigenbase.org The Eigenbase Project].&amp;lt;br&amp;gt;&lt;br /&gt;
[[Image:Lucid db logo PMS 2010.png|400px|right]] __TOC__&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
= LucidDB User Documentation =&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Getting Started ==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''LucidDB Server''' [[Image:AdminUI 11-4-2011 1-07-28 PM.jpg|[[http://pub.eigenbase.org/wiki/DynamoBIAdminUI AdminUI v1.0]]|thumb|200px]]&lt;br /&gt;
* [[LucidDbGettingStarted | Getting Started - An Installation Guide]]&lt;br /&gt;
* [[LucidDbUserFaq | Frequently Asked Questions]]&lt;br /&gt;
* [[DynamoBIAdminUI | LucidDB AdminUI - Web Based Server Management Tool]] &lt;br /&gt;
: A graphical browser-based frontend from DynamoBI specifically built for LucidDB&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''External Software'''[[Image:Squirrel SQL 11-4-2011 1-24-26 PM.jpg|Squirrel SQL client running on Windows 7|thumb|200px]]&lt;br /&gt;
* [[LucidDbSquirrel | Squirrel SQL Client]] &lt;br /&gt;
: A graphical SQL client for accessing many database platforms, including LucidDB&lt;br /&gt;
* [[LucidDbPowerArchitect | Power Architect]]&lt;br /&gt;
: A data modeling tool&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== User Guides ==&lt;br /&gt;
* [[LucidDbUdfHowto | User Defined Functions (UDF) Howto]]&lt;br /&gt;
* [[LucidDbUdfJavaHowto | User Defined Functions (UDF) Java Howto]]&lt;br /&gt;
* [[LucidDbUdxJavaHowto | User Defined Transformation (UDX) Java Howto]]&lt;br /&gt;
* [[LucidDbEtlTutorial | Extract, Transform and Load (ETL) Tutorial]]&lt;br /&gt;
* [[LucidDbOlap| Online Analytical Processing (OLAP)]]&lt;br /&gt;
** [[LucidDbMondrianReplication | Using Pentaho Mondrian Replication]]&lt;br /&gt;
** [[LucidDbAggregateDesigner | Using Pentaho Aggregate Designer for Mondrian]]&lt;br /&gt;
* [[LucidDbConcurrencyControl | Concurrency Control]]&lt;br /&gt;
* [[LucidDbDataStorageAndAccess | Data Storage And Access]]&lt;br /&gt;
* [[LucidDbErrorHandling | Error Handling]]&lt;br /&gt;
* [[LucidDbIndexAccess | Index Access]]&lt;br /&gt;
* [[LucidDbJoinOptimization | Join Optimization]]&lt;br /&gt;
* [[LucidDbJoinImplementation | Join Implementation]]&lt;br /&gt;
* [[LucidDbSlowQueryDiagnosis | Slow Query Diagnosis]]:  Diagnosing slow queries using EXPLAIN PLAN and other tools&lt;br /&gt;
* [[LucidDbSubqueries | Subqueries]]&lt;br /&gt;
* [[LucidDbWarehouseLabels | Warehouse Labels]]&lt;br /&gt;
:  Labels allow users to have read-only query access to a snapshot of the database at an earlier point in time. Snapshots are accessible regardless of  concurrent activities on other connections, like ETL, preparing new data.&lt;br /&gt;
* [[LucidDbQueryExecution | Query Execution]]&lt;br /&gt;
* [[LucidDbServerContainer | Server Container]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Administrator Guides ==&lt;br /&gt;
&lt;br /&gt;
LucidDB is designed to require as little administration as possible, so we hope this section can remain short :)&lt;br /&gt;
* [[Best_Practices | Beginner Best Practices]]&lt;br /&gt;
* [[LucidDbMemoryManagement | Memory Management]]&lt;br /&gt;
** [[LucidDbBufferPoolSizing | Buffer Pool Sizing]] &amp;lt;br&amp;gt;You should also increase the buffer pool sizing to increase the amount of memory that LucidDB uses to &amp;quot;run queries&amp;quot; &amp;lt;br&amp;gt;(the Java adjustments will only increase the catalog/parsing/optimizer memory settings but not the actual execution engine).&lt;br /&gt;
* [[LucidDbSystemProcedures | System Procedures]]&lt;br /&gt;
: Useful for: Backup/Restore, Generating DDL for tables and other objects, managing sessions.&lt;br /&gt;
* [[LucidDbSystemParameters | System Parameters]]&lt;br /&gt;
: Useful information about tweaking: Memory usage, network settings, execution, and storage functionality.&lt;br /&gt;
* [[LucidDbSessionParameters| Session Parameters]]&lt;br /&gt;
* [[LucidDbSystemViews | System Views]]&lt;br /&gt;
: The DBA views defined by LucidDB provide a global picture of the contents of the system catalog (tables, columns, etc) and the volatile state of the system (sessions, cache utilization, etc).&lt;br /&gt;
* [[LucidDbPerformanceTuning | Performance Tuning]]&lt;br /&gt;
** [[LucidDbPerformanceCounters | Performance Counters]]&lt;br /&gt;
** [[LucidDbMonitor | Monitor]] Active monitoring&lt;br /&gt;
* [[LucidDbTracing | Tracing]] Debug Logs in LucidDB&lt;br /&gt;
* [[LucidDbBackupRestore | Performing Backups and Restores]]&lt;br /&gt;
* [[LucidDbUpgrade | How to upgrade to each new release.]]&lt;br /&gt;
* [[LucidDbAsDaemonService | Running LucidDB as a Service / Daemon]]&lt;br /&gt;
* [[LucidDbAsManagedBean | Running LucidDB as a Managed Java Bean]]&lt;br /&gt;
* [[LucidDbMoveCatalog | Moving the LucidDB Database Catalog]]&lt;br /&gt;
* [[LucidDbScriptingLucidUsingBASH | Scripting LucidDB using BASH shell scripts]]&lt;br /&gt;
&lt;br /&gt;
== Function and SQL Language Reference Guides ==&lt;br /&gt;
* [[AppLib]] - Description of the utility function library in LucidDB&lt;br /&gt;
* [[LucidDbDataTypes | Supported Data Types]]&lt;br /&gt;
* [[LucidDbSqlConformance | SQL Standard Conformance]]&lt;br /&gt;
* [[LucidDbSqlReference | SQL Language Reference]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Connectors to External Data Sources (SQL/MED) ([http://farrago.sourceforge.net/design/sqlmed.html Management of External Data])==&lt;br /&gt;
[[Image:Connectors.jpg|thumb|200px|right|See more general information about connectors here [[http://www.dynamobi.com/c/products/luciddb/connectors http://www.dynamobi.com]].]]&lt;br /&gt;
These connectors wrap up external datasources and allow them to present their data as foreign tables inside of LucidDB.  Connectors are an adapters that generally allow normal SQL queries to be run against datasources that may not support the SQL language directly.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbFlatFileWrapper | Flat File Wrapper]] - Connector enabling read-only SQL accesses to text files&lt;br /&gt;
* [[FarragoMedJdbcPlugin | JDBC Data Wrapper]] - Connector enabling presentation of external database tables in LucidDB&lt;br /&gt;
* [[FarragoMedSalesforcePlugin|Salesforce Data Wrapper]] - Connector for presenting Salesforce tables in LucidDB&lt;br /&gt;
* CouchDB connections:&lt;br /&gt;
** Blog: [http://www.nicholasgoodman.com/bt/blog/2011/06/08/sql-access-to-couchdb-views/ SQL access to couchdb views]&lt;br /&gt;
** Blog: [http://www.nicholasgoodman.com/bt/blog/2011/06/22/sql-access-to-couchdb-views-easy-reporting/ SQL access to CouchDB views : Easy Reporting]&lt;br /&gt;
** Forum: Installing the CouchDB connector [http://www.luciddb.org/forums/discussion/comment/1313#Comment_1313]&lt;br /&gt;
** Download the connector from [http://www.dynamobi.com/c/downloads/stable/]&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Benchmark Studies ==&lt;br /&gt;
* [[LucidDbTpch|TPCH Benchmarks]]&lt;br /&gt;
* [[LucidDbSqbm | SQBM]]&lt;br /&gt;
* [[LucidDbOtp| OTP Benchmark using Bureau of Transportation Statistics]], [http://www.mysqlperformanceblog.com/2010/01/07/star-schema-bechmark-infobright-infinidb-and-luciddb SSB Benchmark]&lt;br /&gt;
* [[LucidDbBenchmarkCandidates| Benchmark Candidates]] - Published benchmarks and applications which could serve as good showcases for LucidDB's architecture&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
== Commercial Support ==&lt;br /&gt;
&lt;br /&gt;
'''Commercial support is no longer being offered.  LucidDB is now fully out in the open and community supported.'''&amp;lt;br&amp;gt;&lt;br /&gt;
'''Source on github https://github.com/LucidDB/luciddb'''&lt;br /&gt;
'''-- Monday, July 23, 2012'''&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
Quick, reliable service and support is available to you from DynamoBI, the commercial sponsor of LucidDB.&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''DynamoBI Global Headquarters'''[[Image:Dynamobi logo large2.png|right|200px]]&amp;lt;br&amp;gt;&lt;br /&gt;
42nd Floor&amp;lt;br&amp;gt;&lt;br /&gt;
601 Union Street&amp;lt;br&amp;gt;&lt;br /&gt;
Two Union Square&amp;lt;br&amp;gt;&lt;br /&gt;
Seattle, WA 98101 USA&amp;lt;br&amp;gt;&lt;br /&gt;
Tel. +1 888 LucidDB (582-4332)&amp;lt;br&amp;gt;&lt;br /&gt;
Time Zone: PDT&amp;lt;br&amp;gt;&lt;br /&gt;
Business Hours: 8-6 PDT&amp;lt;br&amp;gt;&lt;br /&gt;
[[http://www.dynamobi.com/c/company/contact-us Contact us!]]&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Community Involvement ==&lt;br /&gt;
LucidDB is one of the best databases in the world because of the people, not just the technology.&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Community Support Forum'''&lt;br /&gt;
: Please visit, ask questions and help others &lt;br /&gt;
: [[http://www.luciddb.org/forums/ http://www.luciddb.org/forums/]]&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Chat with us online'''&lt;br /&gt;
: Many LucidDB users hang out on an Internet Relay Chat channel (IRC) called ##luciddb, using Freenode's [http://freenode.net/irc_servers.shtml] servers.&lt;br /&gt;
: We would love to answer your questions and help you get up and going using LucidDB.&lt;br /&gt;
: When you connect to '''chat.us.freenode.net''' or other freenode server near your country, be sure to use the command '''/join ##luciddb''' to actually join the chat channel for LucidDB.&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
:{| {{table}}&lt;br /&gt;
| align=&amp;quot;Left&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Software Name'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Platform'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Download Location'''&lt;br /&gt;
|-&lt;br /&gt;
| qwebirc||Web-based client||http://webchat.freenode.net/&lt;br /&gt;
|-&lt;br /&gt;
| ChatZilla||Firefox Add-on||https://addons.mozilla.org/en-US/firefox/addon/chatzilla/&lt;br /&gt;
|-&lt;br /&gt;
| mIRC||MS Windows||http://www.mirc.com/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||MS Windows||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||Linux||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat Aqua||Mac OS||http://sourceforge.net/projects/xchataqua/&lt;br /&gt;
|-&lt;br /&gt;
| Colloquy||Apple iPad &amp;amp; iPhone||http://colloquy.info/&lt;br /&gt;
|-&lt;br /&gt;
| Android - Internet Relay Chat||Google Android||https://market.android.com/details?id=com.countercultured.irc&amp;amp;hl=en&lt;br /&gt;
|}&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
* '''Bug and Feature Tracking&lt;br /&gt;
: Make a feature request or report a problem you have experienced.&lt;br /&gt;
: [[http://jira.eigenbase.org/secure/Dashboard.jspa http://jira.eigenbase.org/secure/Dashboard.jspa]]&lt;br /&gt;
&lt;br /&gt;
== Presentations / Blogs ==&lt;br /&gt;
* [[Media:PerconaLucidDB.ppt|Percona LucidDB PowerPoint Slides]]&lt;br /&gt;
* [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive]&lt;br /&gt;
: Demonstrates loading data, defining an OLAP cube, and browsing the cube with Pentaho, Jaspersoft, SpagoBI and Saiku which all use Mondrian to drive their OLAP functionality.&lt;br /&gt;
* [http://wiki.pentaho.com/display/COM/January+20,+2010+-+Nick+Goodman+-+LucidDB,+DynamoBI+and+Mondrian Pentaho - January 20, 2010 - Nick Goodman - LucidDB, DynamoBI and Mondrian]&lt;br /&gt;
: Webex Presentation and PDF of slides presenting benefits and features of LucidDB 0.9.3 in conjunction with Pentaho's BI Suite.&lt;br /&gt;
* [http://www.nicholasgoodman.com/bt/blog/2011/06/08/a-different-vision-for-the-value-of-big-data/ A different vision for the value of Big Data]&lt;br /&gt;
: DynamoBI (Commercial Sponsor of LucidDB) - CEO Nick Goodman - shares vision about how LucidDB forms an information hub from which many different data sources can be presented and queried through normal SQL.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Tutorial Videos and Screencasts ==&lt;br /&gt;
&lt;br /&gt;
* [http://www.dynamobi.com/c/support/tutorial-videos/ DynamoBI - Getting started online videos.]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/installation.swf Installing LucidDB]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/sqllineclient.swf Connecting to LucidDB and using the Command Line Interface, sqllineClient]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/stopping_server.swf Stopping the server, with and without users connected]&lt;br /&gt;
* [http://youtu.be/sSYsVoVrp24 Installing and Loading LucidDB backed sample OLAP]&lt;br /&gt;
** Video from this blog: [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive] - By Slawomir Chodnicki, on March 12th, 2011&lt;br /&gt;
* [http://youtu.be/ZnY223u6q_Y Installing and running LucidDB as a daemon in Linux using a Java Service Wrapper]&lt;br /&gt;
: This is an approach that may also work well on Windows.  There is another approach, which is shorter and easier using the BASH shell under Linux. Documentation for both approaches can be found at [[LucidDbAsDaemonService]].&lt;br /&gt;
* Moving tables from one database to LucidDB&lt;br /&gt;
:[http://pub.eigenbase.org/wiki/LucidDbUpgrade#Downloads_-_Using_Pentaho_Data_Integration_to_generate_a_SQL_script_for_moving_tables Using Pentaho Data Integration to generate SQL for moving tables from an external database to LucidDB]&lt;br /&gt;
: This link is actually to a document about upgrading version to version of LucidDB, but because a PDI transformation file is used to generate SQL for the transition, the process can be generalized as moving from an external database to LucidDB with only minor modifications to the transformation.&lt;br /&gt;
&lt;br /&gt;
== Experimental ==&lt;br /&gt;
&lt;br /&gt;
*[http://kettle.pentaho.com/ Pentaho Data Integration (PDI)] - Bulk Loading Plugins&lt;br /&gt;
** [[LucidDbPDIStreamingLoader| Streaming Loader Step]] - Bulk load data the easy way. '''[RECOMMENDED]''' &lt;br /&gt;
**  [[LucidDbPdiBulkLoad | Bulk Load Step]] - '''[DEPRECATED after LucidDB 0.9.3]'''&lt;br /&gt;
**  [[LucidDbStreamingLoad |Streaming Loader]] : A good example for building bulk loaders from non-Java tools. '''[INFORMATIONAL]'''&lt;br /&gt;
* [[LucidDbHorizontalPartitioning | Horizontal Partitioning]]&lt;br /&gt;
: LucidDB does not currently support DDL for automatic [http://en.wikipedia.org/wiki/Partition_%28database%29 horizontal partitioning] of tables.  Although LucidDB's column-store architecture implements automatic vertical partitioning, horizontal partitioning is still a useful technique for scaling up to very large data volumes, so this page describes some manual approaches which can be used for very simple schemas.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbNonJavaClients | Using Non-Java Clients with LucidDB]]&lt;br /&gt;
: The main client API for LucidDB is JDBC.  This page discusses some options for overcoming the obstacle of developing an application in a language other than Java.&lt;br /&gt;
* [[LucidDbSqlDiffTesting | SQL Diff Testing]]&lt;br /&gt;
: Description of how to make use of some of the diff-based testing frameworks built into LucidDB for the purpose of test-driven ETL script development.&lt;br /&gt;
* [[LucidDbHive | Hive]]&lt;br /&gt;
: Walk-through document showing how to combine LucidDB with [http://hadoop.apache.org/hive/ Apache Hadoop's Hive].&lt;br /&gt;
&lt;br /&gt;
== Frequently Asked Questions ==&lt;br /&gt;
[[LucidDbUserFaq | Frequently Asked Questions]]&lt;br /&gt;
&lt;br /&gt;
= LucidDB Developer Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbBuildFromSourceDistribution | Building LucidDB from source code]]&lt;br /&gt;
* [[LucidDbBuildFromPerforce | Building LucidDB from Perforce (version control software, VCS)]]&lt;br /&gt;
* [[Main_Page#Collaboration | Main Developer Collaboration Section ]]&lt;br /&gt;
* [[DesignMeetings | Design Meetings - Feature Ideas and Roadmaps]]&lt;br /&gt;
&lt;br /&gt;
= LucidDB Design Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbEfficientUpdates | Efficient Updates]]&lt;br /&gt;
* [[LucidDbCommonRelationalSubExpressionMaterialization | Common Relational Sub-Expression Materialization]]&lt;br /&gt;
&lt;br /&gt;
= Trademark Notice =&lt;br /&gt;
&lt;br /&gt;
&amp;lt;sub&amp;gt;LucidDB and the LucidDB logo are trademarks of DynamoBI Corporation.&amp;lt;/sub&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbDocs</id>
		<title>LucidDbDocs</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbDocs"/>
				<updated>2012-07-23T20:58:48Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* Commercial Support */&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;This is the main index page for documentation about the [[LucidDB]] open-source project, a DBMS optimized for business intelligence.  LucidDB is part of [http://www.eigenbase.org The Eigenbase Project].&amp;lt;br&amp;gt;&lt;br /&gt;
[[Image:Lucid db logo PMS 2010.png|400px|right]] __TOC__&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
= LucidDB User Documentation =&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Getting Started ==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''LucidDB Server''' [[Image:AdminUI 11-4-2011 1-07-28 PM.jpg|[[http://pub.eigenbase.org/wiki/DynamoBIAdminUI AdminUI v1.0]]|thumb|200px]]&lt;br /&gt;
* [[LucidDbGettingStarted | Getting Started - An Installation Guide]]&lt;br /&gt;
* [[LucidDbUserFaq | Frequently Asked Questions]]&lt;br /&gt;
* [[DynamoBIAdminUI | LucidDB AdminUI - Web Based Server Management Tool]] &lt;br /&gt;
: A graphical browser-based frontend from DynamoBI specifically built for LucidDB&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''External Software'''[[Image:Squirrel SQL 11-4-2011 1-24-26 PM.jpg|Squirrel SQL client running on Windows 7|thumb|200px]]&lt;br /&gt;
* [[LucidDbSquirrel | Squirrel SQL Client]] &lt;br /&gt;
: A graphical SQL client for accessing many database platforms, including LucidDB&lt;br /&gt;
* [[LucidDbPowerArchitect | Power Architect]]&lt;br /&gt;
: A data modeling tool&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== User Guides ==&lt;br /&gt;
* [[LucidDbUdfHowto | User Defined Functions (UDF) Howto]]&lt;br /&gt;
* [[LucidDbUdfJavaHowto | User Defined Functions (UDF) Java Howto]]&lt;br /&gt;
* [[LucidDbUdxJavaHowto | User Defined Transformation (UDX) Java Howto]]&lt;br /&gt;
* [[LucidDbEtlTutorial | Extract, Transform and Load (ETL) Tutorial]]&lt;br /&gt;
* [[LucidDbOlap| Online Analytical Processing (OLAP)]]&lt;br /&gt;
** [[LucidDbMondrianReplication | Using Pentaho Mondrian Replication]]&lt;br /&gt;
** [[LucidDbAggregateDesigner | Using Pentaho Aggregate Designer for Mondrian]]&lt;br /&gt;
* [[LucidDbConcurrencyControl | Concurrency Control]]&lt;br /&gt;
* [[LucidDbDataStorageAndAccess | Data Storage And Access]]&lt;br /&gt;
* [[LucidDbErrorHandling | Error Handling]]&lt;br /&gt;
* [[LucidDbIndexAccess | Index Access]]&lt;br /&gt;
* [[LucidDbJoinOptimization | Join Optimization]]&lt;br /&gt;
* [[LucidDbJoinImplementation | Join Implementation]]&lt;br /&gt;
* [[LucidDbSlowQueryDiagnosis | Slow Query Diagnosis]]:  Diagnosing slow queries using EXPLAIN PLAN and other tools&lt;br /&gt;
* [[LucidDbSubqueries | Subqueries]]&lt;br /&gt;
* [[LucidDbWarehouseLabels | Warehouse Labels]]&lt;br /&gt;
:  Labels allow users to have read-only query access to a snapshot of the database at an earlier point in time. Snapshots are accessible regardless of  concurrent activities on other connections, like ETL, preparing new data.&lt;br /&gt;
* [[LucidDbQueryExecution | Query Execution]]&lt;br /&gt;
* [[LucidDbServerContainer | Server Container]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Administrator Guides ==&lt;br /&gt;
&lt;br /&gt;
LucidDB is designed to require as little administration as possible, so we hope this section can remain short :)&lt;br /&gt;
* [[Best_Practices | Beginner Best Practices]]&lt;br /&gt;
* [[LucidDbMemoryManagement | Memory Management]]&lt;br /&gt;
** [[LucidDbBufferPoolSizing | Buffer Pool Sizing]] &amp;lt;br&amp;gt;You should also increase the buffer pool sizing to increase the amount of memory that LucidDB uses to &amp;quot;run queries&amp;quot; &amp;lt;br&amp;gt;(the Java adjustments will only increase the catalog/parsing/optimizer memory settings but not the actual execution engine).&lt;br /&gt;
* [[LucidDbSystemProcedures | System Procedures]]&lt;br /&gt;
: Useful for: Backup/Restore, Generating DDL for tables and other objects, managing sessions.&lt;br /&gt;
* [[LucidDbSystemParameters | System Parameters]]&lt;br /&gt;
: Useful information about tweaking: Memory usage, network settings, execution, and storage functionality.&lt;br /&gt;
* [[LucidDbSessionParameters| Session Parameters]]&lt;br /&gt;
* [[LucidDbSystemViews | System Views]]&lt;br /&gt;
: The DBA views defined by LucidDB provide a global picture of the contents of the system catalog (tables, columns, etc) and the volatile state of the system (sessions, cache utilization, etc).&lt;br /&gt;
* [[LucidDbPerformanceTuning | Performance Tuning]]&lt;br /&gt;
** [[LucidDbPerformanceCounters | Performance Counters]]&lt;br /&gt;
** [[LucidDbMonitor | Monitor]] Active monitoring&lt;br /&gt;
* [[LucidDbTracing | Tracing]] Debug Logs in LucidDB&lt;br /&gt;
* [[LucidDbBackupRestore | Performing Backups and Restores]]&lt;br /&gt;
* [[LucidDbUpgrade | How to upgrade to each new release.]]&lt;br /&gt;
* [[LucidDbAsDaemonService | Running LucidDB as a Service / Daemon]]&lt;br /&gt;
* [[LucidDbAsManagedBean | Running LucidDB as a Managed Java Bean]]&lt;br /&gt;
* [[LucidDbMoveCatalog | Moving the LucidDB Database Catalog]]&lt;br /&gt;
* [[LucidDbScriptingLucidUsingBASH | Scripting LucidDB using BASH shell scripts]]&lt;br /&gt;
&lt;br /&gt;
== Function and SQL Language Reference Guides ==&lt;br /&gt;
* [[AppLib]] - Description of the utility function library in LucidDB&lt;br /&gt;
* [[LucidDbDataTypes | Supported Data Types]]&lt;br /&gt;
* [[LucidDbSqlConformance | SQL Standard Conformance]]&lt;br /&gt;
* [[LucidDbSqlReference | SQL Language Reference]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Connectors to External Data Sources (SQL/MED) ([http://farrago.sourceforge.net/design/sqlmed.html Management of External Data])==&lt;br /&gt;
[[Image:Connectors.jpg|thumb|200px|right|See more general information about connectors here [[http://www.dynamobi.com/c/products/luciddb/connectors http://www.dynamobi.com]].]]&lt;br /&gt;
These connectors wrap up external datasources and allow them to present their data as foreign tables inside of LucidDB.  Connectors are an adapters that generally allow normal SQL queries to be run against datasources that may not support the SQL language directly.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbFlatFileWrapper | Flat File Wrapper]] - Connector enabling read-only SQL accesses to text files&lt;br /&gt;
* [[FarragoMedJdbcPlugin | JDBC Data Wrapper]] - Connector enabling presentation of external database tables in LucidDB&lt;br /&gt;
* [[FarragoMedSalesforcePlugin|Salesforce Data Wrapper]] - Connector for presenting Salesforce tables in LucidDB&lt;br /&gt;
* CouchDB connections:&lt;br /&gt;
** Blog: [http://www.nicholasgoodman.com/bt/blog/2011/06/08/sql-access-to-couchdb-views/ SQL access to couchdb views]&lt;br /&gt;
** Blog: [http://www.nicholasgoodman.com/bt/blog/2011/06/22/sql-access-to-couchdb-views-easy-reporting/ SQL access to CouchDB views : Easy Reporting]&lt;br /&gt;
** Forum: Installing the CouchDB connector [http://www.luciddb.org/forums/discussion/comment/1313#Comment_1313]&lt;br /&gt;
** Download the connector from [http://www.dynamobi.com/c/downloads/stable/]&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Benchmark Studies ==&lt;br /&gt;
* [[LucidDbTpch|TPCH Benchmarks]]&lt;br /&gt;
* [[LucidDbSqbm | SQBM]]&lt;br /&gt;
* [[LucidDbOtp| OTP Benchmark using Bureau of Transportation Statistics]], [http://www.mysqlperformanceblog.com/2010/01/07/star-schema-bechmark-infobright-infinidb-and-luciddb SSB Benchmark]&lt;br /&gt;
* [[LucidDbBenchmarkCandidates| Benchmark Candidates]] - Published benchmarks and applications which could serve as good showcases for LucidDB's architecture&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
== Commercial Support ==&lt;br /&gt;
&lt;br /&gt;
'''Commercial support is no longer being offered.  LucidDB is now fully out in the open and community supported.'''&amp;lt;br&amp;gt;&lt;br /&gt;
'''Source on github https://github.com/dynamobi/luciddb'''&lt;br /&gt;
'''-- Monday, July 23, 2012'''&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
Quick, reliable service and support is available to you from DynamoBI, the commercial sponsor of LucidDB.&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''DynamoBI Global Headquarters'''[[Image:Dynamobi logo large2.png|right|200px]]&amp;lt;br&amp;gt;&lt;br /&gt;
42nd Floor&amp;lt;br&amp;gt;&lt;br /&gt;
601 Union Street&amp;lt;br&amp;gt;&lt;br /&gt;
Two Union Square&amp;lt;br&amp;gt;&lt;br /&gt;
Seattle, WA 98101 USA&amp;lt;br&amp;gt;&lt;br /&gt;
Tel. +1 888 LucidDB (582-4332)&amp;lt;br&amp;gt;&lt;br /&gt;
Time Zone: PDT&amp;lt;br&amp;gt;&lt;br /&gt;
Business Hours: 8-6 PDT&amp;lt;br&amp;gt;&lt;br /&gt;
[[http://www.dynamobi.com/c/company/contact-us Contact us!]]&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Community Involvement ==&lt;br /&gt;
LucidDB is one of the best databases in the world because of the people, not just the technology.&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Community Support Forum'''&lt;br /&gt;
: Please visit, ask questions and help others &lt;br /&gt;
: [[http://www.luciddb.org/forums/ http://www.luciddb.org/forums/]]&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Chat with us online'''&lt;br /&gt;
: Many LucidDB users hang out on an Internet Relay Chat channel (IRC) called ##luciddb, using Freenode's [http://freenode.net/irc_servers.shtml] servers.&lt;br /&gt;
: We would love to answer your questions and help you get up and going using LucidDB.&lt;br /&gt;
: When you connect to '''chat.us.freenode.net''' or other freenode server near your country, be sure to use the command '''/join ##luciddb''' to actually join the chat channel for LucidDB.&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
:{| {{table}}&lt;br /&gt;
| align=&amp;quot;Left&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Software Name'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Platform'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Download Location'''&lt;br /&gt;
|-&lt;br /&gt;
| qwebirc||Web-based client||http://webchat.freenode.net/&lt;br /&gt;
|-&lt;br /&gt;
| ChatZilla||Firefox Add-on||https://addons.mozilla.org/en-US/firefox/addon/chatzilla/&lt;br /&gt;
|-&lt;br /&gt;
| mIRC||MS Windows||http://www.mirc.com/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||MS Windows||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||Linux||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat Aqua||Mac OS||http://sourceforge.net/projects/xchataqua/&lt;br /&gt;
|-&lt;br /&gt;
| Colloquy||Apple iPad &amp;amp; iPhone||http://colloquy.info/&lt;br /&gt;
|-&lt;br /&gt;
| Android - Internet Relay Chat||Google Android||https://market.android.com/details?id=com.countercultured.irc&amp;amp;hl=en&lt;br /&gt;
|}&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
* '''Bug and Feature Tracking&lt;br /&gt;
: Make a feature request or report a problem you have experienced.&lt;br /&gt;
: [[http://jira.eigenbase.org/secure/Dashboard.jspa http://jira.eigenbase.org/secure/Dashboard.jspa]]&lt;br /&gt;
&lt;br /&gt;
== Presentations / Blogs ==&lt;br /&gt;
* [[Media:PerconaLucidDB.ppt|Percona LucidDB PowerPoint Slides]]&lt;br /&gt;
* [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive]&lt;br /&gt;
: Demonstrates loading data, defining an OLAP cube, and browsing the cube with Pentaho, Jaspersoft, SpagoBI and Saiku which all use Mondrian to drive their OLAP functionality.&lt;br /&gt;
* [http://wiki.pentaho.com/display/COM/January+20,+2010+-+Nick+Goodman+-+LucidDB,+DynamoBI+and+Mondrian Pentaho - January 20, 2010 - Nick Goodman - LucidDB, DynamoBI and Mondrian]&lt;br /&gt;
: Webex Presentation and PDF of slides presenting benefits and features of LucidDB 0.9.3 in conjunction with Pentaho's BI Suite.&lt;br /&gt;
* [http://www.nicholasgoodman.com/bt/blog/2011/06/08/a-different-vision-for-the-value-of-big-data/ A different vision for the value of Big Data]&lt;br /&gt;
: DynamoBI (Commercial Sponsor of LucidDB) - CEO Nick Goodman - shares vision about how LucidDB forms an information hub from which many different data sources can be presented and queried through normal SQL.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Tutorial Videos and Screencasts ==&lt;br /&gt;
&lt;br /&gt;
* [http://www.dynamobi.com/c/support/tutorial-videos/ DynamoBI - Getting started online videos.]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/installation.swf Installing LucidDB]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/sqllineclient.swf Connecting to LucidDB and using the Command Line Interface, sqllineClient]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/stopping_server.swf Stopping the server, with and without users connected]&lt;br /&gt;
* [http://youtu.be/sSYsVoVrp24 Installing and Loading LucidDB backed sample OLAP]&lt;br /&gt;
** Video from this blog: [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive] - By Slawomir Chodnicki, on March 12th, 2011&lt;br /&gt;
* [http://youtu.be/ZnY223u6q_Y Installing and running LucidDB as a daemon in Linux using a Java Service Wrapper]&lt;br /&gt;
: This is an approach that may also work well on Windows.  There is another approach, which is shorter and easier using the BASH shell under Linux. Documentation for both approaches can be found at [[LucidDbAsDaemonService]].&lt;br /&gt;
* Moving tables from one database to LucidDB&lt;br /&gt;
:[http://pub.eigenbase.org/wiki/LucidDbUpgrade#Downloads_-_Using_Pentaho_Data_Integration_to_generate_a_SQL_script_for_moving_tables Using Pentaho Data Integration to generate SQL for moving tables from an external database to LucidDB]&lt;br /&gt;
: This link is actually to a document about upgrading version to version of LucidDB, but because a PDI transformation file is used to generate SQL for the transition, the process can be generalized as moving from an external database to LucidDB with only minor modifications to the transformation.&lt;br /&gt;
&lt;br /&gt;
== Experimental ==&lt;br /&gt;
&lt;br /&gt;
*[http://kettle.pentaho.com/ Pentaho Data Integration (PDI)] - Bulk Loading Plugins&lt;br /&gt;
** [[LucidDbPDIStreamingLoader| Streaming Loader Step]] - Bulk load data the easy way. '''[RECOMMENDED]''' &lt;br /&gt;
**  [[LucidDbPdiBulkLoad | Bulk Load Step]] - '''[DEPRECATED after LucidDB 0.9.3]'''&lt;br /&gt;
**  [[LucidDbStreamingLoad |Streaming Loader]] : A good example for building bulk loaders from non-Java tools. '''[INFORMATIONAL]'''&lt;br /&gt;
* [[LucidDbHorizontalPartitioning | Horizontal Partitioning]]&lt;br /&gt;
: LucidDB does not currently support DDL for automatic [http://en.wikipedia.org/wiki/Partition_%28database%29 horizontal partitioning] of tables.  Although LucidDB's column-store architecture implements automatic vertical partitioning, horizontal partitioning is still a useful technique for scaling up to very large data volumes, so this page describes some manual approaches which can be used for very simple schemas.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbNonJavaClients | Using Non-Java Clients with LucidDB]]&lt;br /&gt;
: The main client API for LucidDB is JDBC.  This page discusses some options for overcoming the obstacle of developing an application in a language other than Java.&lt;br /&gt;
* [[LucidDbSqlDiffTesting | SQL Diff Testing]]&lt;br /&gt;
: Description of how to make use of some of the diff-based testing frameworks built into LucidDB for the purpose of test-driven ETL script development.&lt;br /&gt;
* [[LucidDbHive | Hive]]&lt;br /&gt;
: Walk-through document showing how to combine LucidDB with [http://hadoop.apache.org/hive/ Apache Hadoop's Hive].&lt;br /&gt;
&lt;br /&gt;
== Frequently Asked Questions ==&lt;br /&gt;
[[LucidDbUserFaq | Frequently Asked Questions]]&lt;br /&gt;
&lt;br /&gt;
= LucidDB Developer Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbBuildFromSourceDistribution | Building LucidDB from source code]]&lt;br /&gt;
* [[LucidDbBuildFromPerforce | Building LucidDB from Perforce (version control software, VCS)]]&lt;br /&gt;
* [[Main_Page#Collaboration | Main Developer Collaboration Section ]]&lt;br /&gt;
* [[DesignMeetings | Design Meetings - Feature Ideas and Roadmaps]]&lt;br /&gt;
&lt;br /&gt;
= LucidDB Design Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbEfficientUpdates | Efficient Updates]]&lt;br /&gt;
* [[LucidDbCommonRelationalSubExpressionMaterialization | Common Relational Sub-Expression Materialization]]&lt;br /&gt;
&lt;br /&gt;
= Trademark Notice =&lt;br /&gt;
&lt;br /&gt;
&amp;lt;sub&amp;gt;LucidDB and the LucidDB logo are trademarks of DynamoBI Corporation.&amp;lt;/sub&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbDocs</id>
		<title>LucidDbDocs</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbDocs"/>
				<updated>2012-07-23T20:55:58Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* Commercial Support */&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;This is the main index page for documentation about the [[LucidDB]] open-source project, a DBMS optimized for business intelligence.  LucidDB is part of [http://www.eigenbase.org The Eigenbase Project].&amp;lt;br&amp;gt;&lt;br /&gt;
[[Image:Lucid db logo PMS 2010.png|400px|right]] __TOC__&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
= LucidDB User Documentation =&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Getting Started ==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''LucidDB Server''' [[Image:AdminUI 11-4-2011 1-07-28 PM.jpg|[[http://pub.eigenbase.org/wiki/DynamoBIAdminUI AdminUI v1.0]]|thumb|200px]]&lt;br /&gt;
* [[LucidDbGettingStarted | Getting Started - An Installation Guide]]&lt;br /&gt;
* [[LucidDbUserFaq | Frequently Asked Questions]]&lt;br /&gt;
* [[DynamoBIAdminUI | LucidDB AdminUI - Web Based Server Management Tool]] &lt;br /&gt;
: A graphical browser-based frontend from DynamoBI specifically built for LucidDB&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''External Software'''[[Image:Squirrel SQL 11-4-2011 1-24-26 PM.jpg|Squirrel SQL client running on Windows 7|thumb|200px]]&lt;br /&gt;
* [[LucidDbSquirrel | Squirrel SQL Client]] &lt;br /&gt;
: A graphical SQL client for accessing many database platforms, including LucidDB&lt;br /&gt;
* [[LucidDbPowerArchitect | Power Architect]]&lt;br /&gt;
: A data modeling tool&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== User Guides ==&lt;br /&gt;
* [[LucidDbUdfHowto | User Defined Functions (UDF) Howto]]&lt;br /&gt;
* [[LucidDbUdfJavaHowto | User Defined Functions (UDF) Java Howto]]&lt;br /&gt;
* [[LucidDbUdxJavaHowto | User Defined Transformation (UDX) Java Howto]]&lt;br /&gt;
* [[LucidDbEtlTutorial | Extract, Transform and Load (ETL) Tutorial]]&lt;br /&gt;
* [[LucidDbOlap| Online Analytical Processing (OLAP)]]&lt;br /&gt;
** [[LucidDbMondrianReplication | Using Pentaho Mondrian Replication]]&lt;br /&gt;
** [[LucidDbAggregateDesigner | Using Pentaho Aggregate Designer for Mondrian]]&lt;br /&gt;
* [[LucidDbConcurrencyControl | Concurrency Control]]&lt;br /&gt;
* [[LucidDbDataStorageAndAccess | Data Storage And Access]]&lt;br /&gt;
* [[LucidDbErrorHandling | Error Handling]]&lt;br /&gt;
* [[LucidDbIndexAccess | Index Access]]&lt;br /&gt;
* [[LucidDbJoinOptimization | Join Optimization]]&lt;br /&gt;
* [[LucidDbJoinImplementation | Join Implementation]]&lt;br /&gt;
* [[LucidDbSlowQueryDiagnosis | Slow Query Diagnosis]]:  Diagnosing slow queries using EXPLAIN PLAN and other tools&lt;br /&gt;
* [[LucidDbSubqueries | Subqueries]]&lt;br /&gt;
* [[LucidDbWarehouseLabels | Warehouse Labels]]&lt;br /&gt;
:  Labels allow users to have read-only query access to a snapshot of the database at an earlier point in time. Snapshots are accessible regardless of  concurrent activities on other connections, like ETL, preparing new data.&lt;br /&gt;
* [[LucidDbQueryExecution | Query Execution]]&lt;br /&gt;
* [[LucidDbServerContainer | Server Container]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Administrator Guides ==&lt;br /&gt;
&lt;br /&gt;
LucidDB is designed to require as little administration as possible, so we hope this section can remain short :)&lt;br /&gt;
* [[Best_Practices | Beginner Best Practices]]&lt;br /&gt;
* [[LucidDbMemoryManagement | Memory Management]]&lt;br /&gt;
** [[LucidDbBufferPoolSizing | Buffer Pool Sizing]] &amp;lt;br&amp;gt;You should also increase the buffer pool sizing to increase the amount of memory that LucidDB uses to &amp;quot;run queries&amp;quot; &amp;lt;br&amp;gt;(the Java adjustments will only increase the catalog/parsing/optimizer memory settings but not the actual execution engine).&lt;br /&gt;
* [[LucidDbSystemProcedures | System Procedures]]&lt;br /&gt;
: Useful for: Backup/Restore, Generating DDL for tables and other objects, managing sessions.&lt;br /&gt;
* [[LucidDbSystemParameters | System Parameters]]&lt;br /&gt;
: Useful information about tweaking: Memory usage, network settings, execution, and storage functionality.&lt;br /&gt;
* [[LucidDbSessionParameters| Session Parameters]]&lt;br /&gt;
* [[LucidDbSystemViews | System Views]]&lt;br /&gt;
: The DBA views defined by LucidDB provide a global picture of the contents of the system catalog (tables, columns, etc) and the volatile state of the system (sessions, cache utilization, etc).&lt;br /&gt;
* [[LucidDbPerformanceTuning | Performance Tuning]]&lt;br /&gt;
** [[LucidDbPerformanceCounters | Performance Counters]]&lt;br /&gt;
** [[LucidDbMonitor | Monitor]] Active monitoring&lt;br /&gt;
* [[LucidDbTracing | Tracing]] Debug Logs in LucidDB&lt;br /&gt;
* [[LucidDbBackupRestore | Performing Backups and Restores]]&lt;br /&gt;
* [[LucidDbUpgrade | How to upgrade to each new release.]]&lt;br /&gt;
* [[LucidDbAsDaemonService | Running LucidDB as a Service / Daemon]]&lt;br /&gt;
* [[LucidDbAsManagedBean | Running LucidDB as a Managed Java Bean]]&lt;br /&gt;
* [[LucidDbMoveCatalog | Moving the LucidDB Database Catalog]]&lt;br /&gt;
* [[LucidDbScriptingLucidUsingBASH | Scripting LucidDB using BASH shell scripts]]&lt;br /&gt;
&lt;br /&gt;
== Function and SQL Language Reference Guides ==&lt;br /&gt;
* [[AppLib]] - Description of the utility function library in LucidDB&lt;br /&gt;
* [[LucidDbDataTypes | Supported Data Types]]&lt;br /&gt;
* [[LucidDbSqlConformance | SQL Standard Conformance]]&lt;br /&gt;
* [[LucidDbSqlReference | SQL Language Reference]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Connectors to External Data Sources (SQL/MED) ([http://farrago.sourceforge.net/design/sqlmed.html Management of External Data])==&lt;br /&gt;
[[Image:Connectors.jpg|thumb|200px|right|See more general information about connectors here [[http://www.dynamobi.com/c/products/luciddb/connectors http://www.dynamobi.com]].]]&lt;br /&gt;
These connectors wrap up external datasources and allow them to present their data as foreign tables inside of LucidDB.  Connectors are an adapters that generally allow normal SQL queries to be run against datasources that may not support the SQL language directly.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbFlatFileWrapper | Flat File Wrapper]] - Connector enabling read-only SQL accesses to text files&lt;br /&gt;
* [[FarragoMedJdbcPlugin | JDBC Data Wrapper]] - Connector enabling presentation of external database tables in LucidDB&lt;br /&gt;
* [[FarragoMedSalesforcePlugin|Salesforce Data Wrapper]] - Connector for presenting Salesforce tables in LucidDB&lt;br /&gt;
* CouchDB connections:&lt;br /&gt;
** Blog: [http://www.nicholasgoodman.com/bt/blog/2011/06/08/sql-access-to-couchdb-views/ SQL access to couchdb views]&lt;br /&gt;
** Blog: [http://www.nicholasgoodman.com/bt/blog/2011/06/22/sql-access-to-couchdb-views-easy-reporting/ SQL access to CouchDB views : Easy Reporting]&lt;br /&gt;
** Forum: Installing the CouchDB connector [http://www.luciddb.org/forums/discussion/comment/1313#Comment_1313]&lt;br /&gt;
** Download the connector from [http://www.dynamobi.com/c/downloads/stable/]&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Benchmark Studies ==&lt;br /&gt;
* [[LucidDbTpch|TPCH Benchmarks]]&lt;br /&gt;
* [[LucidDbSqbm | SQBM]]&lt;br /&gt;
* [[LucidDbOtp| OTP Benchmark using Bureau of Transportation Statistics]], [http://www.mysqlperformanceblog.com/2010/01/07/star-schema-bechmark-infobright-infinidb-and-luciddb SSB Benchmark]&lt;br /&gt;
* [[LucidDbBenchmarkCandidates| Benchmark Candidates]] - Published benchmarks and applications which could serve as good showcases for LucidDB's architecture&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
== Commercial Support ==&lt;br /&gt;
&lt;br /&gt;
'''Commercial support is no longer being offered.  LucidDB is now fully out in the open and community supported.'''&amp;lt;br&amp;gt;&lt;br /&gt;
'''-- Monday, July 23, 2012'''&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
Quick, reliable service and support is available to you from DynamoBI, the commercial sponsor of LucidDB.&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''DynamoBI Global Headquarters'''[[Image:Dynamobi logo large2.png|right|200px]]&amp;lt;br&amp;gt;&lt;br /&gt;
42nd Floor&amp;lt;br&amp;gt;&lt;br /&gt;
601 Union Street&amp;lt;br&amp;gt;&lt;br /&gt;
Two Union Square&amp;lt;br&amp;gt;&lt;br /&gt;
Seattle, WA 98101 USA&amp;lt;br&amp;gt;&lt;br /&gt;
Tel. +1 888 LucidDB (582-4332)&amp;lt;br&amp;gt;&lt;br /&gt;
Time Zone: PDT&amp;lt;br&amp;gt;&lt;br /&gt;
Business Hours: 8-6 PDT&amp;lt;br&amp;gt;&lt;br /&gt;
[[http://www.dynamobi.com/c/company/contact-us Contact us!]]&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Community Involvement ==&lt;br /&gt;
LucidDB is one of the best databases in the world because of the people, not just the technology.&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Community Support Forum'''&lt;br /&gt;
: Please visit, ask questions and help others &lt;br /&gt;
: [[http://www.luciddb.org/forums/ http://www.luciddb.org/forums/]]&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Chat with us online'''&lt;br /&gt;
: Many LucidDB users hang out on an Internet Relay Chat channel (IRC) called ##luciddb, using Freenode's [http://freenode.net/irc_servers.shtml] servers.&lt;br /&gt;
: We would love to answer your questions and help you get up and going using LucidDB.&lt;br /&gt;
: When you connect to '''chat.us.freenode.net''' or other freenode server near your country, be sure to use the command '''/join ##luciddb''' to actually join the chat channel for LucidDB.&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
:{| {{table}}&lt;br /&gt;
| align=&amp;quot;Left&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Software Name'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Platform'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Download Location'''&lt;br /&gt;
|-&lt;br /&gt;
| qwebirc||Web-based client||http://webchat.freenode.net/&lt;br /&gt;
|-&lt;br /&gt;
| ChatZilla||Firefox Add-on||https://addons.mozilla.org/en-US/firefox/addon/chatzilla/&lt;br /&gt;
|-&lt;br /&gt;
| mIRC||MS Windows||http://www.mirc.com/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||MS Windows||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||Linux||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat Aqua||Mac OS||http://sourceforge.net/projects/xchataqua/&lt;br /&gt;
|-&lt;br /&gt;
| Colloquy||Apple iPad &amp;amp; iPhone||http://colloquy.info/&lt;br /&gt;
|-&lt;br /&gt;
| Android - Internet Relay Chat||Google Android||https://market.android.com/details?id=com.countercultured.irc&amp;amp;hl=en&lt;br /&gt;
|}&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
* '''Bug and Feature Tracking&lt;br /&gt;
: Make a feature request or report a problem you have experienced.&lt;br /&gt;
: [[http://jira.eigenbase.org/secure/Dashboard.jspa http://jira.eigenbase.org/secure/Dashboard.jspa]]&lt;br /&gt;
&lt;br /&gt;
== Presentations / Blogs ==&lt;br /&gt;
* [[Media:PerconaLucidDB.ppt|Percona LucidDB PowerPoint Slides]]&lt;br /&gt;
* [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive]&lt;br /&gt;
: Demonstrates loading data, defining an OLAP cube, and browsing the cube with Pentaho, Jaspersoft, SpagoBI and Saiku which all use Mondrian to drive their OLAP functionality.&lt;br /&gt;
* [http://wiki.pentaho.com/display/COM/January+20,+2010+-+Nick+Goodman+-+LucidDB,+DynamoBI+and+Mondrian Pentaho - January 20, 2010 - Nick Goodman - LucidDB, DynamoBI and Mondrian]&lt;br /&gt;
: Webex Presentation and PDF of slides presenting benefits and features of LucidDB 0.9.3 in conjunction with Pentaho's BI Suite.&lt;br /&gt;
* [http://www.nicholasgoodman.com/bt/blog/2011/06/08/a-different-vision-for-the-value-of-big-data/ A different vision for the value of Big Data]&lt;br /&gt;
: DynamoBI (Commercial Sponsor of LucidDB) - CEO Nick Goodman - shares vision about how LucidDB forms an information hub from which many different data sources can be presented and queried through normal SQL.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Tutorial Videos and Screencasts ==&lt;br /&gt;
&lt;br /&gt;
* [http://www.dynamobi.com/c/support/tutorial-videos/ DynamoBI - Getting started online videos.]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/installation.swf Installing LucidDB]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/sqllineclient.swf Connecting to LucidDB and using the Command Line Interface, sqllineClient]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/stopping_server.swf Stopping the server, with and without users connected]&lt;br /&gt;
* [http://youtu.be/sSYsVoVrp24 Installing and Loading LucidDB backed sample OLAP]&lt;br /&gt;
** Video from this blog: [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive] - By Slawomir Chodnicki, on March 12th, 2011&lt;br /&gt;
* [http://youtu.be/ZnY223u6q_Y Installing and running LucidDB as a daemon in Linux using a Java Service Wrapper]&lt;br /&gt;
: This is an approach that may also work well on Windows.  There is another approach, which is shorter and easier using the BASH shell under Linux. Documentation for both approaches can be found at [[LucidDbAsDaemonService]].&lt;br /&gt;
* Moving tables from one database to LucidDB&lt;br /&gt;
:[http://pub.eigenbase.org/wiki/LucidDbUpgrade#Downloads_-_Using_Pentaho_Data_Integration_to_generate_a_SQL_script_for_moving_tables Using Pentaho Data Integration to generate SQL for moving tables from an external database to LucidDB]&lt;br /&gt;
: This link is actually to a document about upgrading version to version of LucidDB, but because a PDI transformation file is used to generate SQL for the transition, the process can be generalized as moving from an external database to LucidDB with only minor modifications to the transformation.&lt;br /&gt;
&lt;br /&gt;
== Experimental ==&lt;br /&gt;
&lt;br /&gt;
*[http://kettle.pentaho.com/ Pentaho Data Integration (PDI)] - Bulk Loading Plugins&lt;br /&gt;
** [[LucidDbPDIStreamingLoader| Streaming Loader Step]] - Bulk load data the easy way. '''[RECOMMENDED]''' &lt;br /&gt;
**  [[LucidDbPdiBulkLoad | Bulk Load Step]] - '''[DEPRECATED after LucidDB 0.9.3]'''&lt;br /&gt;
**  [[LucidDbStreamingLoad |Streaming Loader]] : A good example for building bulk loaders from non-Java tools. '''[INFORMATIONAL]'''&lt;br /&gt;
* [[LucidDbHorizontalPartitioning | Horizontal Partitioning]]&lt;br /&gt;
: LucidDB does not currently support DDL for automatic [http://en.wikipedia.org/wiki/Partition_%28database%29 horizontal partitioning] of tables.  Although LucidDB's column-store architecture implements automatic vertical partitioning, horizontal partitioning is still a useful technique for scaling up to very large data volumes, so this page describes some manual approaches which can be used for very simple schemas.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbNonJavaClients | Using Non-Java Clients with LucidDB]]&lt;br /&gt;
: The main client API for LucidDB is JDBC.  This page discusses some options for overcoming the obstacle of developing an application in a language other than Java.&lt;br /&gt;
* [[LucidDbSqlDiffTesting | SQL Diff Testing]]&lt;br /&gt;
: Description of how to make use of some of the diff-based testing frameworks built into LucidDB for the purpose of test-driven ETL script development.&lt;br /&gt;
* [[LucidDbHive | Hive]]&lt;br /&gt;
: Walk-through document showing how to combine LucidDB with [http://hadoop.apache.org/hive/ Apache Hadoop's Hive].&lt;br /&gt;
&lt;br /&gt;
== Frequently Asked Questions ==&lt;br /&gt;
[[LucidDbUserFaq | Frequently Asked Questions]]&lt;br /&gt;
&lt;br /&gt;
= LucidDB Developer Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbBuildFromSourceDistribution | Building LucidDB from source code]]&lt;br /&gt;
* [[LucidDbBuildFromPerforce | Building LucidDB from Perforce (version control software, VCS)]]&lt;br /&gt;
* [[Main_Page#Collaboration | Main Developer Collaboration Section ]]&lt;br /&gt;
* [[DesignMeetings | Design Meetings - Feature Ideas and Roadmaps]]&lt;br /&gt;
&lt;br /&gt;
= LucidDB Design Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbEfficientUpdates | Efficient Updates]]&lt;br /&gt;
* [[LucidDbCommonRelationalSubExpressionMaterialization | Common Relational Sub-Expression Materialization]]&lt;br /&gt;
&lt;br /&gt;
= Trademark Notice =&lt;br /&gt;
&lt;br /&gt;
&amp;lt;sub&amp;gt;LucidDB and the LucidDB logo are trademarks of DynamoBI Corporation.&amp;lt;/sub&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/Best_Practices</id>
		<title>Best Practices</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/Best_Practices"/>
				<updated>2012-05-18T18:31:29Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* Easy ways to create indexes: */ Converted doc links to internal wiki references.&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;__TOC__&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
==Best workflow for query performance==&lt;br /&gt;
&lt;br /&gt;
1. Load data&amp;lt;br&amp;gt;&lt;br /&gt;
2. Create Indexes&amp;lt;br&amp;gt;&lt;br /&gt;
3. Analyze Tables&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Background:&amp;lt;br&amp;gt;&lt;br /&gt;
Statistics generated during [[LucidDbAnalyzeTable | ANALYZE TABLE]] cover the full range from 'data' to 'indexes'.  If you get out of order, you may have indexes, but the query planner will not use them because no statistics exist indicating their usefulness.&lt;br /&gt;
&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
==What does a complete ETL lifecycle look like?==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
This is a real-life example and may need to be adjusted if you are using MERGE updates, in which case you will not drop tables etc.  You also would have data warehouse labels as an option for providing consistency of data presentation between ETL runs for your users if you do not have to drop tables each ETL run.  This example does not reflect that scenario.&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
A clear out and pull all data cycle is illustrated below.&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
1. SET SCHEMA to your existing data to be updated.&lt;br /&gt;
&amp;lt;pre&amp;gt;SET SCHEMA 'TESTING';&amp;lt;/pre&amp;gt;&lt;br /&gt;
2. DROP TABLE on the old stuff. This will also delete old indexes you had on the tables.&lt;br /&gt;
3. Compact the database on disk. &amp;lt;pre&amp;gt;ALTER SYSTEM DEALLOCATE OLD;&amp;lt;/pre&amp;gt;&lt;br /&gt;
4. Get rid of your old foreign schema &amp;lt;pre&amp;gt;DROP SCHEMA MYSQL_TESTING CASCADE;&amp;lt;/pre&amp;gt;&lt;br /&gt;
5. Get rid of your old foreign server connection definition &amp;lt;pre&amp;gt;DROP SERVER jdbc_link_testing CASCADE;&amp;lt;/pre&amp;gt;&lt;br /&gt;
6. Recreate a foreign server connection definition&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt;create server jdbc_link_testing&lt;br /&gt;
&lt;br /&gt;
  foreign data wrapper sys_jdbc&lt;br /&gt;
  options(&lt;br /&gt;
     driver_class 'com.mysql.jdbc.Driver',&lt;br /&gt;
     url 'jdbc:mysql://172.27.0.204:3306/testing?useCursorFetch=true',&lt;br /&gt;
     user_name 'sg',&lt;br /&gt;
     password 'Complex38403BlahPass',   &lt;br /&gt;
     login_timeout '10',&lt;br /&gt;
     fetch_size '1000',&lt;br /&gt;
     validation_query 'select 1',&lt;br /&gt;
     schema_name 'testing',&lt;br /&gt;
     table_types 'TABLE');&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
7. Give LucidDB a schema where it can show the foreign tables&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
CREATE SCHEMA MYSQL_TESTING; &lt;br /&gt;
import foreign schema &amp;quot;testing&amp;quot; limit to (&amp;quot;FACT_ANSWERS&amp;quot;,&amp;quot;DIM_QUESTION&amp;quot;,&amp;quot;DIM_SUBMISSION_TYPE&amp;quot;,&amp;quot;FACT_VBP_CENSUS&amp;quot;,&lt;br /&gt;
&amp;quot;FACT_SUBMISSION_RESULTS&amp;quot;,&amp;quot;DIM_PATIENT&amp;quot;,&amp;quot;DIM_HOSPITAL&amp;quot;,&amp;quot;DIM_DISEASE&amp;quot;,&lt;br /&gt;
&amp;quot;DIM_READMISSION_REASON&amp;quot;,&amp;quot;DIM_DOCTOR&amp;quot;)&lt;br /&gt;
from server jdbc_link_testing into MYSQL_TESTING;&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
8. Switch active schema to the destination for your imported tables&lt;br /&gt;
&amp;lt;pre&amp;gt;SET SCHEMA 'TESTING';&amp;lt;/pre&amp;gt;&lt;br /&gt;
9. Perhaps use applib.create_table to help replicate the foreign tables from source to destination tables and schema&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
   CALL applib.create_table_as(null,'DIM_SUBMISSION_TYPE','select * from &amp;quot;MYSQL_TESTING&amp;quot;.&amp;quot;DIM_SUBMISSION_TYPE&amp;quot;',true);&lt;br /&gt;
   CALL applib.create_table_as(null,'FACT_VBP_CENSUS','select * from &amp;quot;MYSQL_TESTING&amp;quot;.&amp;quot;FACT_VBP_CENSUS&amp;quot;',true);&lt;br /&gt;
.....&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
10. Create indexes on all the columns involved in joining and filtering in all the tables.&amp;lt;br&amp;gt;&lt;br /&gt;
11. Tell LucidDB to calculate statistics about indexes and all tables for the query planner.&lt;br /&gt;
&amp;lt;pre&amp;gt;....&lt;br /&gt;
ANALYZE TABLE DIM_QUESTION COMPUTE STATISTICS FOR ALL COLUMNS;&lt;br /&gt;
ANALYZE TABLE FACT_ANSWERS COMPUTE STATISTICS FOR ALL COLUMNS;&lt;br /&gt;
... more tables&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
12. Grant access to users for the new schema you created during the process if necessary&lt;br /&gt;
&amp;lt;pre&amp;gt;CALL APPLIB.GRANT_SELECT_FOR_SCHEMA( 'TESTING', 'pentaho_lucid' ); &amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
==Importing tables from other sources:==&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
CALL applib.create_table_as(null,'DIM_SUBMISSION_TYPE','select * from &amp;quot;MYSQL_TESTING&amp;quot;.&amp;quot;DIM_SUBMISSION_TYPE&amp;quot;',true);&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
The above lets LucidDB help you out when importing data from other locations by recreating a suitable table structure for the incoming data. Keep in mind that no indexes or primary key information is transferred over as a result.  Be sure to create your indexes then update your statistics.&lt;br /&gt;
&lt;br /&gt;
==Easy ways to create indexes:==&lt;br /&gt;
&lt;br /&gt;
Discover what may make for a great index&amp;lt;br&amp;gt;&lt;br /&gt;
[[AppLib_SHOW_IDX_CANDIDATES]]&lt;br /&gt;
&lt;br /&gt;
Have LucidDB automatically create indexes&amp;lt;br&amp;gt;&lt;br /&gt;
[[AppLib_CREATE_INDEXES]]&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
==Mondrian Schemas with LucidDB/Other DB==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
Sometimes you will want to create a Mondrian schema and begin testing it in MySQL or other database.&lt;br /&gt;
It may make design easier if you specify your default schema/database in both databases.  This way your Mondrian schema will not require the following entries&lt;br /&gt;
&amp;lt;pre&amp;gt; &amp;lt;Table name=&amp;quot;DIM_FACILITY&amp;quot; schema=&amp;quot;TESTING&amp;quot;&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;br&amp;gt;&lt;br /&gt;
You should instead be able to get away with just&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt; &amp;lt;Table name=&amp;quot;DIM_FACILITY&amp;quot;&amp;gt; &amp;lt;/pre&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/Best_Practices</id>
		<title>Best Practices</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/Best_Practices"/>
				<updated>2012-05-18T18:30:06Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* Importing tables from other sources: */  Rewrote awkward sentence.&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;__TOC__&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
==Best workflow for query performance==&lt;br /&gt;
&lt;br /&gt;
1. Load data&amp;lt;br&amp;gt;&lt;br /&gt;
2. Create Indexes&amp;lt;br&amp;gt;&lt;br /&gt;
3. Analyze Tables&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Background:&amp;lt;br&amp;gt;&lt;br /&gt;
Statistics generated during [[LucidDbAnalyzeTable | ANALYZE TABLE]] cover the full range from 'data' to 'indexes'.  If you get out of order, you may have indexes, but the query planner will not use them because no statistics exist indicating their usefulness.&lt;br /&gt;
&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
==What does a complete ETL lifecycle look like?==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
This is a real-life example and may need to be adjusted if you are using MERGE updates, in which case you will not drop tables etc.  You also would have data warehouse labels as an option for providing consistency of data presentation between ETL runs for your users if you do not have to drop tables each ETL run.  This example does not reflect that scenario.&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
A clear out and pull all data cycle is illustrated below.&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
1. SET SCHEMA to your existing data to be updated.&lt;br /&gt;
&amp;lt;pre&amp;gt;SET SCHEMA 'TESTING';&amp;lt;/pre&amp;gt;&lt;br /&gt;
2. DROP TABLE on the old stuff. This will also delete old indexes you had on the tables.&lt;br /&gt;
3. Compact the database on disk. &amp;lt;pre&amp;gt;ALTER SYSTEM DEALLOCATE OLD;&amp;lt;/pre&amp;gt;&lt;br /&gt;
4. Get rid of your old foreign schema &amp;lt;pre&amp;gt;DROP SCHEMA MYSQL_TESTING CASCADE;&amp;lt;/pre&amp;gt;&lt;br /&gt;
5. Get rid of your old foreign server connection definition &amp;lt;pre&amp;gt;DROP SERVER jdbc_link_testing CASCADE;&amp;lt;/pre&amp;gt;&lt;br /&gt;
6. Recreate a foreign server connection definition&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt;create server jdbc_link_testing&lt;br /&gt;
&lt;br /&gt;
  foreign data wrapper sys_jdbc&lt;br /&gt;
  options(&lt;br /&gt;
     driver_class 'com.mysql.jdbc.Driver',&lt;br /&gt;
     url 'jdbc:mysql://172.27.0.204:3306/testing?useCursorFetch=true',&lt;br /&gt;
     user_name 'sg',&lt;br /&gt;
     password 'Complex38403BlahPass',   &lt;br /&gt;
     login_timeout '10',&lt;br /&gt;
     fetch_size '1000',&lt;br /&gt;
     validation_query 'select 1',&lt;br /&gt;
     schema_name 'testing',&lt;br /&gt;
     table_types 'TABLE');&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
7. Give LucidDB a schema where it can show the foreign tables&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
CREATE SCHEMA MYSQL_TESTING; &lt;br /&gt;
import foreign schema &amp;quot;testing&amp;quot; limit to (&amp;quot;FACT_ANSWERS&amp;quot;,&amp;quot;DIM_QUESTION&amp;quot;,&amp;quot;DIM_SUBMISSION_TYPE&amp;quot;,&amp;quot;FACT_VBP_CENSUS&amp;quot;,&lt;br /&gt;
&amp;quot;FACT_SUBMISSION_RESULTS&amp;quot;,&amp;quot;DIM_PATIENT&amp;quot;,&amp;quot;DIM_HOSPITAL&amp;quot;,&amp;quot;DIM_DISEASE&amp;quot;,&lt;br /&gt;
&amp;quot;DIM_READMISSION_REASON&amp;quot;,&amp;quot;DIM_DOCTOR&amp;quot;)&lt;br /&gt;
from server jdbc_link_testing into MYSQL_TESTING;&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
8. Switch active schema to the destination for your imported tables&lt;br /&gt;
&amp;lt;pre&amp;gt;SET SCHEMA 'TESTING';&amp;lt;/pre&amp;gt;&lt;br /&gt;
9. Perhaps use applib.create_table to help replicate the foreign tables from source to destination tables and schema&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
   CALL applib.create_table_as(null,'DIM_SUBMISSION_TYPE','select * from &amp;quot;MYSQL_TESTING&amp;quot;.&amp;quot;DIM_SUBMISSION_TYPE&amp;quot;',true);&lt;br /&gt;
   CALL applib.create_table_as(null,'FACT_VBP_CENSUS','select * from &amp;quot;MYSQL_TESTING&amp;quot;.&amp;quot;FACT_VBP_CENSUS&amp;quot;',true);&lt;br /&gt;
.....&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
10. Create indexes on all the columns involved in joining and filtering in all the tables.&amp;lt;br&amp;gt;&lt;br /&gt;
11. Tell LucidDB to calculate statistics about indexes and all tables for the query planner.&lt;br /&gt;
&amp;lt;pre&amp;gt;....&lt;br /&gt;
ANALYZE TABLE DIM_QUESTION COMPUTE STATISTICS FOR ALL COLUMNS;&lt;br /&gt;
ANALYZE TABLE FACT_ANSWERS COMPUTE STATISTICS FOR ALL COLUMNS;&lt;br /&gt;
... more tables&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
12. Grant access to users for the new schema you created during the process if necessary&lt;br /&gt;
&amp;lt;pre&amp;gt;CALL APPLIB.GRANT_SELECT_FOR_SCHEMA( 'TESTING', 'pentaho_lucid' ); &amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
==Importing tables from other sources:==&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
CALL applib.create_table_as(null,'DIM_SUBMISSION_TYPE','select * from &amp;quot;MYSQL_TESTING&amp;quot;.&amp;quot;DIM_SUBMISSION_TYPE&amp;quot;',true);&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
The above lets LucidDB help you out when importing data from other locations by recreating a suitable table structure for the incoming data. Keep in mind that no indexes or primary key information is transferred over as a result.  Be sure to create your indexes then update your statistics.&lt;br /&gt;
&lt;br /&gt;
==Easy ways to create indexes:==&lt;br /&gt;
&lt;br /&gt;
Discover what may make for a great index&amp;lt;br&amp;gt;&lt;br /&gt;
http://www.luciddb.org/wiki/AppLib_SHOW_IDX_CANDIDATES&lt;br /&gt;
&lt;br /&gt;
Have LucidDB automatically create indexes&amp;lt;br&amp;gt;&lt;br /&gt;
http://www.luciddb.org/wiki/AppLib_CREATE_INDEXES&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
==Mondrian Schemas with LucidDB/Other DB==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
Sometimes you will want to create a Mondrian schema and begin testing it in MySQL or other database.&lt;br /&gt;
It may make design easier if you specify your default schema/database in both databases.  This way your Mondrian schema will not require the following entries&lt;br /&gt;
&amp;lt;pre&amp;gt; &amp;lt;Table name=&amp;quot;DIM_FACILITY&amp;quot; schema=&amp;quot;TESTING&amp;quot;&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;br&amp;gt;&lt;br /&gt;
You should instead be able to get away with just&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt; &amp;lt;Table name=&amp;quot;DIM_FACILITY&amp;quot;&amp;gt; &amp;lt;/pre&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/Best_Practices</id>
		<title>Best Practices</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/Best_Practices"/>
				<updated>2012-05-18T18:28:09Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* Best workflow for query performance */ Link back to ANALYZE TABLE definition.&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;__TOC__&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
==Best workflow for query performance==&lt;br /&gt;
&lt;br /&gt;
1. Load data&amp;lt;br&amp;gt;&lt;br /&gt;
2. Create Indexes&amp;lt;br&amp;gt;&lt;br /&gt;
3. Analyze Tables&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Background:&amp;lt;br&amp;gt;&lt;br /&gt;
Statistics generated during [[LucidDbAnalyzeTable | ANALYZE TABLE]] cover the full range from 'data' to 'indexes'.  If you get out of order, you may have indexes, but the query planner will not use them because no statistics exist indicating their usefulness.&lt;br /&gt;
&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
==What does a complete ETL lifecycle look like?==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
This is a real-life example and may need to be adjusted if you are using MERGE updates, in which case you will not drop tables etc.  You also would have data warehouse labels as an option for providing consistency of data presentation between ETL runs for your users if you do not have to drop tables each ETL run.  This example does not reflect that scenario.&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
A clear out and pull all data cycle is illustrated below.&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
1. SET SCHEMA to your existing data to be updated.&lt;br /&gt;
&amp;lt;pre&amp;gt;SET SCHEMA 'TESTING';&amp;lt;/pre&amp;gt;&lt;br /&gt;
2. DROP TABLE on the old stuff. This will also delete old indexes you had on the tables.&lt;br /&gt;
3. Compact the database on disk. &amp;lt;pre&amp;gt;ALTER SYSTEM DEALLOCATE OLD;&amp;lt;/pre&amp;gt;&lt;br /&gt;
4. Get rid of your old foreign schema &amp;lt;pre&amp;gt;DROP SCHEMA MYSQL_TESTING CASCADE;&amp;lt;/pre&amp;gt;&lt;br /&gt;
5. Get rid of your old foreign server connection definition &amp;lt;pre&amp;gt;DROP SERVER jdbc_link_testing CASCADE;&amp;lt;/pre&amp;gt;&lt;br /&gt;
6. Recreate a foreign server connection definition&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt;create server jdbc_link_testing&lt;br /&gt;
&lt;br /&gt;
  foreign data wrapper sys_jdbc&lt;br /&gt;
  options(&lt;br /&gt;
     driver_class 'com.mysql.jdbc.Driver',&lt;br /&gt;
     url 'jdbc:mysql://172.27.0.204:3306/testing?useCursorFetch=true',&lt;br /&gt;
     user_name 'sg',&lt;br /&gt;
     password 'Complex38403BlahPass',   &lt;br /&gt;
     login_timeout '10',&lt;br /&gt;
     fetch_size '1000',&lt;br /&gt;
     validation_query 'select 1',&lt;br /&gt;
     schema_name 'testing',&lt;br /&gt;
     table_types 'TABLE');&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
7. Give LucidDB a schema where it can show the foreign tables&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
CREATE SCHEMA MYSQL_TESTING; &lt;br /&gt;
import foreign schema &amp;quot;testing&amp;quot; limit to (&amp;quot;FACT_ANSWERS&amp;quot;,&amp;quot;DIM_QUESTION&amp;quot;,&amp;quot;DIM_SUBMISSION_TYPE&amp;quot;,&amp;quot;FACT_VBP_CENSUS&amp;quot;,&lt;br /&gt;
&amp;quot;FACT_SUBMISSION_RESULTS&amp;quot;,&amp;quot;DIM_PATIENT&amp;quot;,&amp;quot;DIM_HOSPITAL&amp;quot;,&amp;quot;DIM_DISEASE&amp;quot;,&lt;br /&gt;
&amp;quot;DIM_READMISSION_REASON&amp;quot;,&amp;quot;DIM_DOCTOR&amp;quot;)&lt;br /&gt;
from server jdbc_link_testing into MYSQL_TESTING;&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
8. Switch active schema to the destination for your imported tables&lt;br /&gt;
&amp;lt;pre&amp;gt;SET SCHEMA 'TESTING';&amp;lt;/pre&amp;gt;&lt;br /&gt;
9. Perhaps use applib.create_table to help replicate the foreign tables from source to destination tables and schema&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
   CALL applib.create_table_as(null,'DIM_SUBMISSION_TYPE','select * from &amp;quot;MYSQL_TESTING&amp;quot;.&amp;quot;DIM_SUBMISSION_TYPE&amp;quot;',true);&lt;br /&gt;
   CALL applib.create_table_as(null,'FACT_VBP_CENSUS','select * from &amp;quot;MYSQL_TESTING&amp;quot;.&amp;quot;FACT_VBP_CENSUS&amp;quot;',true);&lt;br /&gt;
.....&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
10. Create indexes on all the columns involved in joining and filtering in all the tables.&amp;lt;br&amp;gt;&lt;br /&gt;
11. Tell LucidDB to calculate statistics about indexes and all tables for the query planner.&lt;br /&gt;
&amp;lt;pre&amp;gt;....&lt;br /&gt;
ANALYZE TABLE DIM_QUESTION COMPUTE STATISTICS FOR ALL COLUMNS;&lt;br /&gt;
ANALYZE TABLE FACT_ANSWERS COMPUTE STATISTICS FOR ALL COLUMNS;&lt;br /&gt;
... more tables&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
12. Grant access to users for the new schema you created during the process if necessary&lt;br /&gt;
&amp;lt;pre&amp;gt;CALL APPLIB.GRANT_SELECT_FOR_SCHEMA( 'TESTING', 'pentaho_lucid' ); &amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
==Importing tables from other sources:==&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
CALL applib.create_table_as(null,'DIM_SUBMISSION_TYPE','select * from &amp;quot;MYSQL_TESTING&amp;quot;.&amp;quot;DIM_SUBMISSION_TYPE&amp;quot;',true);&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
The above lets LucidDB help you out when importing data from other locations, keep in mind that no indexes or primary key information is transferred over as a result.  Be sure to create your indexes then update your statistics.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
==Easy ways to create indexes:==&lt;br /&gt;
&lt;br /&gt;
Discover what may make for a great index&amp;lt;br&amp;gt;&lt;br /&gt;
http://www.luciddb.org/wiki/AppLib_SHOW_IDX_CANDIDATES&lt;br /&gt;
&lt;br /&gt;
Have LucidDB automatically create indexes&amp;lt;br&amp;gt;&lt;br /&gt;
http://www.luciddb.org/wiki/AppLib_CREATE_INDEXES&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
==Mondrian Schemas with LucidDB/Other DB==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
Sometimes you will want to create a Mondrian schema and begin testing it in MySQL or other database.&lt;br /&gt;
It may make design easier if you specify your default schema/database in both databases.  This way your Mondrian schema will not require the following entries&lt;br /&gt;
&amp;lt;pre&amp;gt; &amp;lt;Table name=&amp;quot;DIM_FACILITY&amp;quot; schema=&amp;quot;TESTING&amp;quot;&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;br&amp;gt;&lt;br /&gt;
You should instead be able to get away with just&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt; &amp;lt;Table name=&amp;quot;DIM_FACILITY&amp;quot;&amp;gt; &amp;lt;/pre&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/Best_Practices</id>
		<title>Best Practices</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/Best_Practices"/>
				<updated>2012-05-18T18:06:53Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: Layout changes&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;__TOC__&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
==Best workflow for query performance==&lt;br /&gt;
&lt;br /&gt;
1. Load data&amp;lt;br&amp;gt;&lt;br /&gt;
2. Create Indexes&amp;lt;br&amp;gt;&lt;br /&gt;
3. Analyze Tables&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Background:&amp;lt;br&amp;gt;&lt;br /&gt;
Statistics generated during &amp;quot;ANALYZE TABLE&amp;quot; cover the full range from 'data' to 'indexes'.  If you get out of order, you may have indexes, but the query planner will not use them because no statistics exist indicating their usefulness.&lt;br /&gt;
&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&lt;br /&gt;
==What does a complete ETL lifecycle look like?==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
This is a real-life example and may need to be adjusted if you are using MERGE updates, in which case you will not drop tables etc.  You also would have data warehouse labels as an option for providing consistency of data presentation between ETL runs for your users if you do not have to drop tables each ETL run.  This example does not reflect that scenario.&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
A clear out and pull all data cycle is illustrated below.&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
1. SET SCHEMA to your existing data to be updated.&lt;br /&gt;
&amp;lt;pre&amp;gt;SET SCHEMA 'TESTING';&amp;lt;/pre&amp;gt;&lt;br /&gt;
2. DROP TABLE on the old stuff. This will also delete old indexes you had on the tables.&lt;br /&gt;
3. Compact the database on disk. &amp;lt;pre&amp;gt;ALTER SYSTEM DEALLOCATE OLD;&amp;lt;/pre&amp;gt;&lt;br /&gt;
4. Get rid of your old foreign schema &amp;lt;pre&amp;gt;DROP SCHEMA MYSQL_TESTING CASCADE;&amp;lt;/pre&amp;gt;&lt;br /&gt;
5. Get rid of your old foreign server connection definition &amp;lt;pre&amp;gt;DROP SERVER jdbc_link_testing CASCADE;&amp;lt;/pre&amp;gt;&lt;br /&gt;
6. Recreate a foreign server connection definition&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt;create server jdbc_link_testing&lt;br /&gt;
&lt;br /&gt;
  foreign data wrapper sys_jdbc&lt;br /&gt;
  options(&lt;br /&gt;
     driver_class 'com.mysql.jdbc.Driver',&lt;br /&gt;
     url 'jdbc:mysql://172.27.0.204:3306/testing?useCursorFetch=true',&lt;br /&gt;
     user_name 'sg',&lt;br /&gt;
     password 'Complex38403BlahPass',   &lt;br /&gt;
     login_timeout '10',&lt;br /&gt;
     fetch_size '1000',&lt;br /&gt;
     validation_query 'select 1',&lt;br /&gt;
     schema_name 'testing',&lt;br /&gt;
     table_types 'TABLE');&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
7. Give LucidDB a schema where it can show the foreign tables&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
CREATE SCHEMA MYSQL_TESTING; &lt;br /&gt;
import foreign schema &amp;quot;testing&amp;quot; limit to (&amp;quot;FACT_ANSWERS&amp;quot;,&amp;quot;DIM_QUESTION&amp;quot;,&amp;quot;DIM_SUBMISSION_TYPE&amp;quot;,&amp;quot;FACT_VBP_CENSUS&amp;quot;,&lt;br /&gt;
&amp;quot;FACT_SUBMISSION_RESULTS&amp;quot;,&amp;quot;DIM_PATIENT&amp;quot;,&amp;quot;DIM_HOSPITAL&amp;quot;,&amp;quot;DIM_DISEASE&amp;quot;,&lt;br /&gt;
&amp;quot;DIM_READMISSION_REASON&amp;quot;,&amp;quot;DIM_DOCTOR&amp;quot;)&lt;br /&gt;
from server jdbc_link_testing into MYSQL_TESTING;&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
8. Switch active schema to the destination for your imported tables&lt;br /&gt;
&amp;lt;pre&amp;gt;SET SCHEMA 'TESTING';&amp;lt;/pre&amp;gt;&lt;br /&gt;
9. Perhaps use applib.create_table to help replicate the foreign tables from source to destination tables and schema&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
   CALL applib.create_table_as(null,'DIM_SUBMISSION_TYPE','select * from &amp;quot;MYSQL_TESTING&amp;quot;.&amp;quot;DIM_SUBMISSION_TYPE&amp;quot;',true);&lt;br /&gt;
   CALL applib.create_table_as(null,'FACT_VBP_CENSUS','select * from &amp;quot;MYSQL_TESTING&amp;quot;.&amp;quot;FACT_VBP_CENSUS&amp;quot;',true);&lt;br /&gt;
.....&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
10. Create indexes on all the columns involved in joining and filtering in all the tables.&amp;lt;br&amp;gt;&lt;br /&gt;
11. Tell LucidDB to calculate statistics about indexes and all tables for the query planner.&lt;br /&gt;
&amp;lt;pre&amp;gt;....&lt;br /&gt;
ANALYZE TABLE DIM_QUESTION COMPUTE STATISTICS FOR ALL COLUMNS;&lt;br /&gt;
ANALYZE TABLE FACT_ANSWERS COMPUTE STATISTICS FOR ALL COLUMNS;&lt;br /&gt;
... more tables&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
12. Grant access to users for the new schema you created during the process if necessary&lt;br /&gt;
&amp;lt;pre&amp;gt;CALL APPLIB.GRANT_SELECT_FOR_SCHEMA( 'TESTING', 'pentaho_lucid' ); &amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
==Importing tables from other sources:==&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
CALL applib.create_table_as(null,'DIM_SUBMISSION_TYPE','select * from &amp;quot;MYSQL_TESTING&amp;quot;.&amp;quot;DIM_SUBMISSION_TYPE&amp;quot;',true);&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
The above lets LucidDB help you out when importing data from other locations, keep in mind that no indexes or primary key information is transferred over as a result.  Be sure to create your indexes then update your statistics.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
==Easy ways to create indexes:==&lt;br /&gt;
&lt;br /&gt;
Discover what may make for a great index&amp;lt;br&amp;gt;&lt;br /&gt;
http://www.luciddb.org/wiki/AppLib_SHOW_IDX_CANDIDATES&lt;br /&gt;
&lt;br /&gt;
Have LucidDB automatically create indexes&amp;lt;br&amp;gt;&lt;br /&gt;
http://www.luciddb.org/wiki/AppLib_CREATE_INDEXES&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
==Mondrian Schemas with LucidDB/Other DB==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
Sometimes you will want to create a Mondrian schema and begin testing it in MySQL or other database.&lt;br /&gt;
It may make design easier if you specify your default schema/database in both databases.  This way your Mondrian schema will not require the following entries&lt;br /&gt;
&amp;lt;pre&amp;gt; &amp;lt;Table name=&amp;quot;DIM_FACILITY&amp;quot; schema=&amp;quot;TESTING&amp;quot;&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;br&amp;gt;&lt;br /&gt;
You should instead be able to get away with just&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt; &amp;lt;Table name=&amp;quot;DIM_FACILITY&amp;quot;&amp;gt; &amp;lt;/pre&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbCreateUser</id>
		<title>LucidDbCreateUser</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbCreateUser"/>
				<updated>2012-05-18T18:03:23Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* Example */ Defined what JAAS is.&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;== Syntax ==&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
CREATE USER user-name&lt;br /&gt;
[ AUTHORIZATION 'unused' | IDENTIFIED BY 'password' ]&lt;br /&gt;
[ DEFAULT { CATALOG | SCHEMA } default-namespace ]&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Example ==&lt;br /&gt;
&lt;br /&gt;
Basic:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
CREATE USER scott &lt;br /&gt;
IDENTIFIED BY 'tiger';&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
Creates a user named SCOTT in the catalog that uses the password &amp;quot;tiger&amp;quot; to login.&lt;br /&gt;
&lt;br /&gt;
Basic JAAS:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
CREATE USER peon &lt;br /&gt;
AUTHORIZATION 'Unused';&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Advanced JAAS:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
CREATE USER vice_dba&lt;br /&gt;
AUTHORIZATION 'Unused' &lt;br /&gt;
DEFAULT SCHEMA sys_root;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
JAAS means: [http://en.wikipedia.org/wiki/Java_Authentication_and_Authorization_Service Java Authentication and Authorization Service] and is pronounced 'jazz'.&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbUserFaq</id>
		<title>LucidDbUserFaq</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbUserFaq"/>
				<updated>2012-05-18T17:56:32Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* Creating users and granting rights */&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;= FAQ List =&lt;br /&gt;
&lt;br /&gt;
This page is the FAQ list for LucidDB users.  For questions about the project, see [http://www.luciddb.org/projectFaq.html the project FAQ on the website].&lt;br /&gt;
&lt;br /&gt;
== Startup Error for libgcj ==&lt;br /&gt;
&lt;br /&gt;
'''Question'''&lt;br /&gt;
&lt;br /&gt;
I got an error about initializeClass on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Exception in thread &amp;quot;main&amp;quot; java.lang.NoClassDefFoundError: &lt;br /&gt;
net.sf.farrago.db.FarragoDatabase&lt;br /&gt;
    at java.lang.Class.initializeClass(libgcj.so.90)&lt;br /&gt;
    at &lt;br /&gt;
net.sf.farrago.db.FarragoDbSingleton.pinReference(FarragoDbSingleton.java:100)&lt;br /&gt;
    at &lt;br /&gt;
net.sf.farrago.server.FarragoAbstractServer.start(FarragoAbstractServer.java:232)&lt;br /&gt;
    at com.lucidera.farrago.LucidDbServer.main(LucidDbServer.java:61)&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
The GCJ virtual machine (packaged by default with many Linux distributions) is not sufficient for use with LucidDB.  Instead, please install a [http://java.sun.com/javase/downloads/index.jsp Sun Java JVM], set your JAVA_HOME to the Sun JRE, then do a fresh unzip/install.&lt;br /&gt;
&lt;br /&gt;
== Startup Error for xlib xcb ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I got an error similar to one of the ones below on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
java: xcb_xlib.c:50: xcb_xlib_unlock: Assertion `c-&amp;gt;xlib.lock' failed.&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Locking assertion failure. Backtrace:&lt;br /&gt;
#0 /usr/lib/libxcb-xlib.so.0 [0xb7361767]&lt;br /&gt;
#1 /usr/lib/libxcb-xlib.so.0(xcb_xlib_unlock+0x31) [0xb73618b1]&lt;br /&gt;
#2 /usr/lib/libX11.so.6(_XReply+0xfd) [0x99e591bd]&lt;br /&gt;
#3 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so [0x9b539dce]&lt;br /&gt;
#4 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so [0x9b523d77]&lt;br /&gt;
#5 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so [0x9b523ef3]&lt;br /&gt;
#6 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so(Java_sun_awt_X11GraphicsEnvironment_initDisplay+0x26) [0x9b524136] &lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
The easiest way is to edit the '''bin/lucidDbServer''' startup script and add '''-Dorg.eigenbase.util.AWT_WORKAROUND=off''' to the Java command line.  (This will be done as part of the out-of-the-box packaging in the next release since this seems to be a common problem.)&lt;br /&gt;
&lt;br /&gt;
See [http://sourceforge.net/mailarchive/message.php?msg_id=613385.33648.qm%40web30806.mail.mud.yahoo.com this mailing list thread] for more discussion.&lt;br /&gt;
&lt;br /&gt;
== Startup Error For libaio ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I got the error below on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Loading database...&lt;br /&gt;
Exception in thread &amp;quot;main&amp;quot; org.eigenbase.util.EigenbaseException: Failed to load database&lt;br /&gt;
    at net.sf.farrago.resource.FarragoResource$_Def1.ex(FarragoResource.java:1789)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDatabase.&amp;lt;init&amp;gt;(FarragoDatabase.java:269)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDbSingleton.pinReference(FarragoDbSingleton.java:89)&lt;br /&gt;
    at net.sf.farrago.server.FarragoAbstractServer.start(FarragoAbstractServer.java:183)&lt;br /&gt;
    at com.lucidera.farrago.LucidDbServer.main(LucidDbServer.java:61)&lt;br /&gt;
Caused by: org.eigenbase.util.EigenbaseException: FennelResource.en_US.libaioRequired()&lt;br /&gt;
    at net.sf.farrago.resource.FarragoResource$_Def0.ex(FarragoResource.java:1766)&lt;br /&gt;
    at net.sf.farrago.fennel.FennelDbHandle.handleNativeException(FennelDbHandle.java:315)&lt;br /&gt;
    at net.sf.farrago.fennel.FennelDbHandle.executeCmd(FennelDbHandle.java:242)&lt;br /&gt;
    at net.sf.farrago.fennel.FennelDbHandle.&amp;lt;init&amp;gt;(FennelDbHandle.java:90)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDatabase.loadFennel(FarragoDatabase.java:509)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDatabase.&amp;lt;init&amp;gt;(FarragoDatabase.java:189)&lt;br /&gt;
    ... 3 more&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
On a Debian-based system such as Ubuntu:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
apt-get install libaio1&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
(on older versions it may be libaio instead of libaio1)&lt;br /&gt;
&lt;br /&gt;
On A RedHat-based system:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
yum install libaio1&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
After that, you should be able to start the server.  If you keep the default setting of aioLinux, you'll want to increase LucidDB's buffer pool size, and also preallocate data files, as mentioned in [[LucidDbPerformanceTuning#I.2FO_Scheduler]].&lt;br /&gt;
&lt;br /&gt;
== Startup Error For mmap ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I got the error below on startup, or when trying to increase the [[LucidDbBufferPoolSizing|buffer pool size]].  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Error: System call failed:  mmap failed: Cannot allocate memory (state=,code=0)&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
Assuming you actually have sufficient physical memory, and are using a 64-bit build if trying to allocate a large buffer pool, check these:&lt;br /&gt;
&lt;br /&gt;
# Make sure '''ulimit -v''' returns the string &amp;quot;unlimited&amp;quot;.  Setting a quota on virtual memory size can cause the error above.&lt;br /&gt;
# Make sure you aren't accidentally using a [[#Debug Builds|debug build]].  Debug builds use '''mprotect''' to guard against buffer overruns, and this eats up a lot of additional memory and OS page table space.&lt;br /&gt;
&lt;br /&gt;
== Startup Error For Windows ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I got an error trying to load the native code DLL's on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
Make sure you have installed the [http://www.microsoft.com/downloads/details.aspx?FamilyID=9b2da534-3e03-4391-8a4d-074b9f2bc1bf&amp;amp;displaylang=en Visual C++ 2008 Redistributable Package].&lt;br /&gt;
&lt;br /&gt;
== Client Connectivity Problems ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I can't get sqllineClient, Squirrel, and other clients to talk to the LucidDB server.  What's wrong?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
You may need to follow the instructions in [[ClientServerLocalhost]] to fix '''/etc/hosts'''.&lt;br /&gt;
&lt;br /&gt;
== Loading Large Data Files ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I have a large data file in txt format. I need to bulk load it into Lucid tables. What's the best way to do this?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
Create a flat file foreign table corresponding to your flat file, and then use an INSERT-SELECT statement to load from the flat file table to your target table.&lt;br /&gt;
&lt;br /&gt;
See [[LucidDbFlatFileWrapper]] for details.&lt;br /&gt;
&lt;br /&gt;
[[LucidDbEtlTutorial#Define_Sources]] also has an example that shows you how to create a flatfile foreign data wrapper, import it, and then access tables within the imported foreign schema.&lt;br /&gt;
&lt;br /&gt;
== ETL Tutorial ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
In attempting to follow the ETL Tutorial I got an error because directory examples/etl/filedata/ does not exist.  What should I do?&lt;br /&gt;
&lt;br /&gt;
'''Answer'''&lt;br /&gt;
&lt;br /&gt;
Make sure you followed the instructions to start the server like this:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
bin/lucidDbServer&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
The tutorial relies on this for the relative paths to come out right.  Otherwise, you need to edit the scripts so that they supply absolute paths.&lt;br /&gt;
&lt;br /&gt;
== Case-Sensitive Foreign Schema Name ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to import a foreign schema from a server like PostgreSQL with case-sensitive identifiers, and I'm not getting any tables back.  How come?&lt;br /&gt;
&lt;br /&gt;
'''Answer'''&lt;br /&gt;
&lt;br /&gt;
Make sure you quote the foreign schema name in the IMPORT FOREIGN SCHEMA command:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
import foreign schema &amp;quot;public&amp;quot;&lt;br /&gt;
from server postgres_abc&lt;br /&gt;
into ldb_schema &lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Likewise for [http://sourceforge.net/mailarchive/forum.php?thread_name=4891317F.3040406%40gmail.com&amp;amp;forum_name=luciddb-users foreign tables].&lt;br /&gt;
&lt;br /&gt;
== Default Port ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
What is the default listening port number for LucidDB?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
By default, LucidDB listens for HTTP connections on port 8034.  If you want to specify it explicitly from the client side, use a URL like &lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
jdbc:luciddb:http://1.2.3.4:8034&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
You can change a server's port number by setting system parameter '''serverHttpPort'''; see [[LucidDbSystemParameters]] for more information.&lt;br /&gt;
&lt;br /&gt;
== JDBC Driver Class ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to connect to LucidDB from my own program, but I always get an exception like java.lang.ClassNotFoundException: org.luciddb.jdbc.LucidDbClientDriver.  What should I do to fix it?&lt;br /&gt;
&lt;br /&gt;
'''Answer''':&lt;br /&gt;
&lt;br /&gt;
Make sure you have '''luciddb/plugin/LucidDbClient.jar''' on your program's classpath.&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to use LucidDbLocalDriver to access the server from a client program running on the same (local) machine, but it doesn't work.  Why not?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
The &amp;quot;local&amp;quot; driver is local only in the sense &amp;quot;in the same java process&amp;quot;, not in the sense &amp;quot;on the same machine&amp;quot;, so you'll need to  &lt;br /&gt;
use the HTTP driver.  Use driver class '''org.luciddb.jdbc.LucidDbClientDriver''' unless the client and server are actually running in the same JVM.&lt;br /&gt;
&lt;br /&gt;
== JDBC Driver Jar files ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
In luciddb-0.9.4/plugin there are two files, '''LucidDbClient.jar and LucidDbClient-minimal.jar''' that look like they could be used by applications to connect to LucidDB.  Which should I use?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
Only applications that already have required libraries (commons-logging-1.1.jar) like PDI/etc should use LucidDbClient-minimal.jar.  Pentaho Data Integration is an example of such an application.  The Pentaho BI Server itself can also use the LucidDbClient-minimal.jar.&lt;br /&gt;
&lt;br /&gt;
Squirrel SQL client and most other applications will use the LucidDbClient.jar&lt;br /&gt;
&lt;br /&gt;
== Slow INSERT performance ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to INSERT lots of rows using the INSERT command, but the performance is terrible!  What can I do to improve the performance?&lt;br /&gt;
&lt;br /&gt;
'''Answer''':&lt;br /&gt;
&lt;br /&gt;
There are inherent issues with single row INSERTs in a column store database.  Bulk INSERTs or UPDATEs are best accomplished (with orders of magnitude increases in performance) via a bulk loading method (see [[LucidDbEtlTutorial]] for an example).&lt;br /&gt;
&lt;br /&gt;
== Missing Columns ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I created a wide table, and some of the columns seem to have gone AWOL.  What gives?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
If you're using sqlline, see this [http://sourceforge.net/mailarchive/forum.php?thread_name=221131.98865.qm%40web51307.mail.re2.yahoo.com&amp;amp;forum_name=luciddb-users mailing list thread].&lt;br /&gt;
&lt;br /&gt;
== Running As A Service Or Daemon ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
How do I run LucidDB as a service on Windows or a daemon on Unix?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
See [[LucidDbAsDaemonService]].&lt;br /&gt;
&lt;br /&gt;
== J2EE Embedding ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
How do I run LucidDB inside of a J2EE app server?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
See [[LucidDbAsManagedBean]].&lt;br /&gt;
&lt;br /&gt;
== Catalog File Locking ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I got an exception about &amp;quot;Failed to lock catalog file&amp;quot; on server startup; what does this mean?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
It means you already have a server process running from the same installation, and only one can be running at a time.  See this [http://sourceforge.net/mailarchive/forum.php?thread_name=381602.46904.qm%40web51306.mail.re2.yahoo.com&amp;amp;forum_name=luciddb-users mailing list thread].  For information on how to start LucidDB on a remote server, see [http://sourceforge.net/mailarchive/forum.php?thread_name=4890A61F.3050505%40gmail.com&amp;amp;forum_name=luciddb-users this thread].&lt;br /&gt;
&lt;br /&gt;
== Debug Builds ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I built LucidDB [[LucidDbBuildFromSourceDistribution|from source]] and now it's really slow.  How come?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
By default, '''initBuild.sh''' produces an unoptimized debug build, which is an order of magnitude slower than release builds.  Be sure to specify the '''--with-optimization --without-debug''' flags to match the release configuration, unless you're actually planning to hack on LucidDB native code and use gdb.&lt;br /&gt;
&lt;br /&gt;
== Beyond Java ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
Can I use LucidDB in a non-Java application?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
[[LucidDbNonJavaClients|Maybe]].&lt;br /&gt;
&lt;br /&gt;
== Compression Statistics ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
How can I tell how well compression is working?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
It can be difficult to determine this from the size of '''db.dat''', since not all of the pages may be currently in use.&lt;br /&gt;
&lt;br /&gt;
To find out how many pages are currently in use across all tables, across all page versions, execute this:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
alter system deallocate old;&lt;br /&gt;
select counter_value from sys_root.dba_performance_counters where counter_name='DatabasePagesAllocated';&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Multiply the result by 32KB (the size of one page).&lt;br /&gt;
&lt;br /&gt;
To study compression effectiveness for a particular table, execute this:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
alter system deallocate old;&lt;br /&gt;
analyze table t estimate statistics for all columns;&lt;br /&gt;
select index_name, pages from sys_boot.mgmt.page_counts_view where table_schem='YOUR_SCHEMA_NAME' and table_name='YOUR_TABLE_NAME';&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Indexes with names starting with &amp;quot;SYS$CLUSTERED&amp;quot; represent the compressed column storage.  Every table has a single &amp;quot;SYS$DELETION_INDEX&amp;quot; which tracks deleted rows.  A table may have SYS$ indexes corresponding to PRIMARY KEY and UNIQUE constraint defintions.  Any other indexes are named indexes you have created.&lt;br /&gt;
&lt;br /&gt;
== OpenSUSE Performance ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
Why is LucidDB so slow for short queries on OpenSUSE?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
See the discussion on the ext3 barrier setting in [http://n2.nabble.com/Row-has-too-many-columns-td2789557.html this thread], which contains a workaround.&lt;br /&gt;
&lt;br /&gt;
== Identifier Quoting - Dealing with mixed case Schema, Table and Column names ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
Why are the rules for this so confusing?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
LucidDB strictly adheres to SQL:2003 in this regard.  When you don't quote identifiers, they are implicitly uppercased as part of parsing (e.g. yoUr_table becomes YOUR_TABLE).  When you quote them, case is preserved (e.g. &amp;quot;yoUr_table&amp;quot; stays exactly like that).  You must quote them if they are reserved words or contain special characters.  For compound identifiers, the quotes go around each component, e.g. &amp;quot;yoUr_schema&amp;quot;.&amp;quot;yoUr_table&amp;quot; not &amp;quot;yoUr_schema.yoUr_table&amp;quot;).&lt;br /&gt;
&lt;br /&gt;
One point of confusion arises from the SET SCHEMA command.  The actual syntax is '''SET SCHEMA &amp;lt;character-expression&amp;gt;''', not '''SET SCHEMA &amp;lt;identifier&amp;gt;'''.  So, you have to write&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA '&amp;quot;yoUr_schema&amp;quot;'&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
not&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA &amp;quot;yoUr_schema&amp;quot;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
If you have a schema named EXTRACTION_SCHEMA (all upper case), this works:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA 'extraction_schema'&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
The reason this works is that the single quotes are delimiting the character literal (not the identifier).  The parsing for this expression first evaluates the character expression, then interprets the result as a (possibly-quoted) identifier.  This allows you to do things like&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA 'SCHEMA_FOR_' || CURRENT_USER&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
So if user FRANCISCO logs in, he'll get SCHEMA_FOR_FRANCISCO set as default after executing the expression above.&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''Normal SQL Queries with mixed case table or column names'''&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
When you use normal '''SELECT''' style queries you can expect to use double quotes to work around case issues.&lt;br /&gt;
Example:&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
select &amp;quot;tableOne&amp;quot;.&amp;quot;myColumn&amp;quot; from &amp;quot;SchemaName&amp;quot;.&amp;quot;tableOne&amp;quot;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''Function Calls with mixed case table or column names'''&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
Look at how the parameter itself is in single quotes, the column name is in double quotes.&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
create_table_as ('select &amp;quot;myCol&amp;quot; from &amp;quot;myTable&amp;quot;', '&amp;quot;TARGETtable&amp;quot;')&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== What is the difference between sqllineClient and sqllineEngine? ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
What is the difference between sqllineClient and sqllineEngine?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''sqllineEngine''' is LucidDB without the client/server part.&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
There are two typs of JDBC services&amp;lt;br&amp;gt;&lt;br /&gt;
Engine and vJDBC&amp;lt;br&amp;gt;&lt;br /&gt;
Engine allows something else in Java machine (ie, sqllineEngine) to connect&amp;lt;br&amp;gt;&lt;br /&gt;
JDBC starts listening on port 8034 to allow remote JDBC to connect&amp;lt;br&amp;gt;&lt;br /&gt;
sqllineEngine starts Engine&amp;lt;br&amp;gt;&lt;br /&gt;
lucidDbServer starts vJDBC&amp;lt;br&amp;gt;&lt;br /&gt;
sqllineClient connects to lucidDbServer via vJDBC&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''sqllineClient''' is a SQL client.&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Creating users and granting rights ==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
You can create a user by following command structure:&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt;create user &amp;quot;foodmart&amp;quot; identified by 'foodmart' default schema foodmart;&amp;lt;/pre&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
SQL reference for [[LucidDbCreateUser | CREATE USER]].&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
You can grant on many different things using the [[LucidDbGrant |GRANT]] SQL keyword.&lt;br /&gt;
There is also a helper library function to help for granting SELECT rights over an entire schema. &lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''Functions - using GRANT'''&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
grant execute on specific procedure&lt;br /&gt;
applib.estimate_statistics_for_schema_no_samplingrate to &amp;quot;foodmart&amp;quot;;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
'''Schema - Using helper library function.'''&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
CALL APPLIB.GRANT_SELECT_FOR_SCHEMA( 'TESTING', 'pentaho_lucid' );&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbUserFaq</id>
		<title>LucidDbUserFaq</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbUserFaq"/>
				<updated>2012-05-18T17:52:02Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* Creating users and granting rights */ corrected GRANT docs on the FAQ here.&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;= FAQ List =&lt;br /&gt;
&lt;br /&gt;
This page is the FAQ list for LucidDB users.  For questions about the project, see [http://www.luciddb.org/projectFaq.html the project FAQ on the website].&lt;br /&gt;
&lt;br /&gt;
== Startup Error for libgcj ==&lt;br /&gt;
&lt;br /&gt;
'''Question'''&lt;br /&gt;
&lt;br /&gt;
I got an error about initializeClass on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Exception in thread &amp;quot;main&amp;quot; java.lang.NoClassDefFoundError: &lt;br /&gt;
net.sf.farrago.db.FarragoDatabase&lt;br /&gt;
    at java.lang.Class.initializeClass(libgcj.so.90)&lt;br /&gt;
    at &lt;br /&gt;
net.sf.farrago.db.FarragoDbSingleton.pinReference(FarragoDbSingleton.java:100)&lt;br /&gt;
    at &lt;br /&gt;
net.sf.farrago.server.FarragoAbstractServer.start(FarragoAbstractServer.java:232)&lt;br /&gt;
    at com.lucidera.farrago.LucidDbServer.main(LucidDbServer.java:61)&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
The GCJ virtual machine (packaged by default with many Linux distributions) is not sufficient for use with LucidDB.  Instead, please install a [http://java.sun.com/javase/downloads/index.jsp Sun Java JVM], set your JAVA_HOME to the Sun JRE, then do a fresh unzip/install.&lt;br /&gt;
&lt;br /&gt;
== Startup Error for xlib xcb ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I got an error similar to one of the ones below on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
java: xcb_xlib.c:50: xcb_xlib_unlock: Assertion `c-&amp;gt;xlib.lock' failed.&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Locking assertion failure. Backtrace:&lt;br /&gt;
#0 /usr/lib/libxcb-xlib.so.0 [0xb7361767]&lt;br /&gt;
#1 /usr/lib/libxcb-xlib.so.0(xcb_xlib_unlock+0x31) [0xb73618b1]&lt;br /&gt;
#2 /usr/lib/libX11.so.6(_XReply+0xfd) [0x99e591bd]&lt;br /&gt;
#3 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so [0x9b539dce]&lt;br /&gt;
#4 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so [0x9b523d77]&lt;br /&gt;
#5 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so [0x9b523ef3]&lt;br /&gt;
#6 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so(Java_sun_awt_X11GraphicsEnvironment_initDisplay+0x26) [0x9b524136] &lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
The easiest way is to edit the '''bin/lucidDbServer''' startup script and add '''-Dorg.eigenbase.util.AWT_WORKAROUND=off''' to the Java command line.  (This will be done as part of the out-of-the-box packaging in the next release since this seems to be a common problem.)&lt;br /&gt;
&lt;br /&gt;
See [http://sourceforge.net/mailarchive/message.php?msg_id=613385.33648.qm%40web30806.mail.mud.yahoo.com this mailing list thread] for more discussion.&lt;br /&gt;
&lt;br /&gt;
== Startup Error For libaio ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I got the error below on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Loading database...&lt;br /&gt;
Exception in thread &amp;quot;main&amp;quot; org.eigenbase.util.EigenbaseException: Failed to load database&lt;br /&gt;
    at net.sf.farrago.resource.FarragoResource$_Def1.ex(FarragoResource.java:1789)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDatabase.&amp;lt;init&amp;gt;(FarragoDatabase.java:269)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDbSingleton.pinReference(FarragoDbSingleton.java:89)&lt;br /&gt;
    at net.sf.farrago.server.FarragoAbstractServer.start(FarragoAbstractServer.java:183)&lt;br /&gt;
    at com.lucidera.farrago.LucidDbServer.main(LucidDbServer.java:61)&lt;br /&gt;
Caused by: org.eigenbase.util.EigenbaseException: FennelResource.en_US.libaioRequired()&lt;br /&gt;
    at net.sf.farrago.resource.FarragoResource$_Def0.ex(FarragoResource.java:1766)&lt;br /&gt;
    at net.sf.farrago.fennel.FennelDbHandle.handleNativeException(FennelDbHandle.java:315)&lt;br /&gt;
    at net.sf.farrago.fennel.FennelDbHandle.executeCmd(FennelDbHandle.java:242)&lt;br /&gt;
    at net.sf.farrago.fennel.FennelDbHandle.&amp;lt;init&amp;gt;(FennelDbHandle.java:90)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDatabase.loadFennel(FarragoDatabase.java:509)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDatabase.&amp;lt;init&amp;gt;(FarragoDatabase.java:189)&lt;br /&gt;
    ... 3 more&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
On a Debian-based system such as Ubuntu:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
apt-get install libaio1&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
(on older versions it may be libaio instead of libaio1)&lt;br /&gt;
&lt;br /&gt;
On A RedHat-based system:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
yum install libaio1&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
After that, you should be able to start the server.  If you keep the default setting of aioLinux, you'll want to increase LucidDB's buffer pool size, and also preallocate data files, as mentioned in [[LucidDbPerformanceTuning#I.2FO_Scheduler]].&lt;br /&gt;
&lt;br /&gt;
== Startup Error For mmap ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I got the error below on startup, or when trying to increase the [[LucidDbBufferPoolSizing|buffer pool size]].  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Error: System call failed:  mmap failed: Cannot allocate memory (state=,code=0)&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
Assuming you actually have sufficient physical memory, and are using a 64-bit build if trying to allocate a large buffer pool, check these:&lt;br /&gt;
&lt;br /&gt;
# Make sure '''ulimit -v''' returns the string &amp;quot;unlimited&amp;quot;.  Setting a quota on virtual memory size can cause the error above.&lt;br /&gt;
# Make sure you aren't accidentally using a [[#Debug Builds|debug build]].  Debug builds use '''mprotect''' to guard against buffer overruns, and this eats up a lot of additional memory and OS page table space.&lt;br /&gt;
&lt;br /&gt;
== Startup Error For Windows ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I got an error trying to load the native code DLL's on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
Make sure you have installed the [http://www.microsoft.com/downloads/details.aspx?FamilyID=9b2da534-3e03-4391-8a4d-074b9f2bc1bf&amp;amp;displaylang=en Visual C++ 2008 Redistributable Package].&lt;br /&gt;
&lt;br /&gt;
== Client Connectivity Problems ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I can't get sqllineClient, Squirrel, and other clients to talk to the LucidDB server.  What's wrong?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
You may need to follow the instructions in [[ClientServerLocalhost]] to fix '''/etc/hosts'''.&lt;br /&gt;
&lt;br /&gt;
== Loading Large Data Files ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I have a large data file in txt format. I need to bulk load it into Lucid tables. What's the best way to do this?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
Create a flat file foreign table corresponding to your flat file, and then use an INSERT-SELECT statement to load from the flat file table to your target table.&lt;br /&gt;
&lt;br /&gt;
See [[LucidDbFlatFileWrapper]] for details.&lt;br /&gt;
&lt;br /&gt;
[[LucidDbEtlTutorial#Define_Sources]] also has an example that shows you how to create a flatfile foreign data wrapper, import it, and then access tables within the imported foreign schema.&lt;br /&gt;
&lt;br /&gt;
== ETL Tutorial ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
In attempting to follow the ETL Tutorial I got an error because directory examples/etl/filedata/ does not exist.  What should I do?&lt;br /&gt;
&lt;br /&gt;
'''Answer'''&lt;br /&gt;
&lt;br /&gt;
Make sure you followed the instructions to start the server like this:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
bin/lucidDbServer&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
The tutorial relies on this for the relative paths to come out right.  Otherwise, you need to edit the scripts so that they supply absolute paths.&lt;br /&gt;
&lt;br /&gt;
== Case-Sensitive Foreign Schema Name ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to import a foreign schema from a server like PostgreSQL with case-sensitive identifiers, and I'm not getting any tables back.  How come?&lt;br /&gt;
&lt;br /&gt;
'''Answer'''&lt;br /&gt;
&lt;br /&gt;
Make sure you quote the foreign schema name in the IMPORT FOREIGN SCHEMA command:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
import foreign schema &amp;quot;public&amp;quot;&lt;br /&gt;
from server postgres_abc&lt;br /&gt;
into ldb_schema &lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Likewise for [http://sourceforge.net/mailarchive/forum.php?thread_name=4891317F.3040406%40gmail.com&amp;amp;forum_name=luciddb-users foreign tables].&lt;br /&gt;
&lt;br /&gt;
== Default Port ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
What is the default listening port number for LucidDB?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
By default, LucidDB listens for HTTP connections on port 8034.  If you want to specify it explicitly from the client side, use a URL like &lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
jdbc:luciddb:http://1.2.3.4:8034&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
You can change a server's port number by setting system parameter '''serverHttpPort'''; see [[LucidDbSystemParameters]] for more information.&lt;br /&gt;
&lt;br /&gt;
== JDBC Driver Class ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to connect to LucidDB from my own program, but I always get an exception like java.lang.ClassNotFoundException: org.luciddb.jdbc.LucidDbClientDriver.  What should I do to fix it?&lt;br /&gt;
&lt;br /&gt;
'''Answer''':&lt;br /&gt;
&lt;br /&gt;
Make sure you have '''luciddb/plugin/LucidDbClient.jar''' on your program's classpath.&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to use LucidDbLocalDriver to access the server from a client program running on the same (local) machine, but it doesn't work.  Why not?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
The &amp;quot;local&amp;quot; driver is local only in the sense &amp;quot;in the same java process&amp;quot;, not in the sense &amp;quot;on the same machine&amp;quot;, so you'll need to  &lt;br /&gt;
use the HTTP driver.  Use driver class '''org.luciddb.jdbc.LucidDbClientDriver''' unless the client and server are actually running in the same JVM.&lt;br /&gt;
&lt;br /&gt;
== JDBC Driver Jar files ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
In luciddb-0.9.4/plugin there are two files, '''LucidDbClient.jar and LucidDbClient-minimal.jar''' that look like they could be used by applications to connect to LucidDB.  Which should I use?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
Only applications that already have required libraries (commons-logging-1.1.jar) like PDI/etc should use LucidDbClient-minimal.jar.  Pentaho Data Integration is an example of such an application.  The Pentaho BI Server itself can also use the LucidDbClient-minimal.jar.&lt;br /&gt;
&lt;br /&gt;
Squirrel SQL client and most other applications will use the LucidDbClient.jar&lt;br /&gt;
&lt;br /&gt;
== Slow INSERT performance ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to INSERT lots of rows using the INSERT command, but the performance is terrible!  What can I do to improve the performance?&lt;br /&gt;
&lt;br /&gt;
'''Answer''':&lt;br /&gt;
&lt;br /&gt;
There are inherent issues with single row INSERTs in a column store database.  Bulk INSERTs or UPDATEs are best accomplished (with orders of magnitude increases in performance) via a bulk loading method (see [[LucidDbEtlTutorial]] for an example).&lt;br /&gt;
&lt;br /&gt;
== Missing Columns ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I created a wide table, and some of the columns seem to have gone AWOL.  What gives?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
If you're using sqlline, see this [http://sourceforge.net/mailarchive/forum.php?thread_name=221131.98865.qm%40web51307.mail.re2.yahoo.com&amp;amp;forum_name=luciddb-users mailing list thread].&lt;br /&gt;
&lt;br /&gt;
== Running As A Service Or Daemon ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
How do I run LucidDB as a service on Windows or a daemon on Unix?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
See [[LucidDbAsDaemonService]].&lt;br /&gt;
&lt;br /&gt;
== J2EE Embedding ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
How do I run LucidDB inside of a J2EE app server?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
See [[LucidDbAsManagedBean]].&lt;br /&gt;
&lt;br /&gt;
== Catalog File Locking ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I got an exception about &amp;quot;Failed to lock catalog file&amp;quot; on server startup; what does this mean?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
It means you already have a server process running from the same installation, and only one can be running at a time.  See this [http://sourceforge.net/mailarchive/forum.php?thread_name=381602.46904.qm%40web51306.mail.re2.yahoo.com&amp;amp;forum_name=luciddb-users mailing list thread].  For information on how to start LucidDB on a remote server, see [http://sourceforge.net/mailarchive/forum.php?thread_name=4890A61F.3050505%40gmail.com&amp;amp;forum_name=luciddb-users this thread].&lt;br /&gt;
&lt;br /&gt;
== Debug Builds ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I built LucidDB [[LucidDbBuildFromSourceDistribution|from source]] and now it's really slow.  How come?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
By default, '''initBuild.sh''' produces an unoptimized debug build, which is an order of magnitude slower than release builds.  Be sure to specify the '''--with-optimization --without-debug''' flags to match the release configuration, unless you're actually planning to hack on LucidDB native code and use gdb.&lt;br /&gt;
&lt;br /&gt;
== Beyond Java ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
Can I use LucidDB in a non-Java application?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
[[LucidDbNonJavaClients|Maybe]].&lt;br /&gt;
&lt;br /&gt;
== Compression Statistics ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
How can I tell how well compression is working?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
It can be difficult to determine this from the size of '''db.dat''', since not all of the pages may be currently in use.&lt;br /&gt;
&lt;br /&gt;
To find out how many pages are currently in use across all tables, across all page versions, execute this:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
alter system deallocate old;&lt;br /&gt;
select counter_value from sys_root.dba_performance_counters where counter_name='DatabasePagesAllocated';&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Multiply the result by 32KB (the size of one page).&lt;br /&gt;
&lt;br /&gt;
To study compression effectiveness for a particular table, execute this:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
alter system deallocate old;&lt;br /&gt;
analyze table t estimate statistics for all columns;&lt;br /&gt;
select index_name, pages from sys_boot.mgmt.page_counts_view where table_schem='YOUR_SCHEMA_NAME' and table_name='YOUR_TABLE_NAME';&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Indexes with names starting with &amp;quot;SYS$CLUSTERED&amp;quot; represent the compressed column storage.  Every table has a single &amp;quot;SYS$DELETION_INDEX&amp;quot; which tracks deleted rows.  A table may have SYS$ indexes corresponding to PRIMARY KEY and UNIQUE constraint defintions.  Any other indexes are named indexes you have created.&lt;br /&gt;
&lt;br /&gt;
== OpenSUSE Performance ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
Why is LucidDB so slow for short queries on OpenSUSE?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
See the discussion on the ext3 barrier setting in [http://n2.nabble.com/Row-has-too-many-columns-td2789557.html this thread], which contains a workaround.&lt;br /&gt;
&lt;br /&gt;
== Identifier Quoting - Dealing with mixed case Schema, Table and Column names ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
Why are the rules for this so confusing?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
LucidDB strictly adheres to SQL:2003 in this regard.  When you don't quote identifiers, they are implicitly uppercased as part of parsing (e.g. yoUr_table becomes YOUR_TABLE).  When you quote them, case is preserved (e.g. &amp;quot;yoUr_table&amp;quot; stays exactly like that).  You must quote them if they are reserved words or contain special characters.  For compound identifiers, the quotes go around each component, e.g. &amp;quot;yoUr_schema&amp;quot;.&amp;quot;yoUr_table&amp;quot; not &amp;quot;yoUr_schema.yoUr_table&amp;quot;).&lt;br /&gt;
&lt;br /&gt;
One point of confusion arises from the SET SCHEMA command.  The actual syntax is '''SET SCHEMA &amp;lt;character-expression&amp;gt;''', not '''SET SCHEMA &amp;lt;identifier&amp;gt;'''.  So, you have to write&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA '&amp;quot;yoUr_schema&amp;quot;'&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
not&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA &amp;quot;yoUr_schema&amp;quot;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
If you have a schema named EXTRACTION_SCHEMA (all upper case), this works:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA 'extraction_schema'&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
The reason this works is that the single quotes are delimiting the character literal (not the identifier).  The parsing for this expression first evaluates the character expression, then interprets the result as a (possibly-quoted) identifier.  This allows you to do things like&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA 'SCHEMA_FOR_' || CURRENT_USER&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
So if user FRANCISCO logs in, he'll get SCHEMA_FOR_FRANCISCO set as default after executing the expression above.&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''Normal SQL Queries with mixed case table or column names'''&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
When you use normal '''SELECT''' style queries you can expect to use double quotes to work around case issues.&lt;br /&gt;
Example:&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
select &amp;quot;tableOne&amp;quot;.&amp;quot;myColumn&amp;quot; from &amp;quot;SchemaName&amp;quot;.&amp;quot;tableOne&amp;quot;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''Function Calls with mixed case table or column names'''&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
Look at how the parameter itself is in single quotes, the column name is in double quotes.&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
create_table_as ('select &amp;quot;myCol&amp;quot; from &amp;quot;myTable&amp;quot;', '&amp;quot;TARGETtable&amp;quot;')&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== What is the difference between sqllineClient and sqllineEngine? ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
What is the difference between sqllineClient and sqllineEngine?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''sqllineEngine''' is LucidDB without the client/server part.&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
There are two typs of JDBC services&amp;lt;br&amp;gt;&lt;br /&gt;
Engine and vJDBC&amp;lt;br&amp;gt;&lt;br /&gt;
Engine allows something else in Java machine (ie, sqllineEngine) to connect&amp;lt;br&amp;gt;&lt;br /&gt;
JDBC starts listening on port 8034 to allow remote JDBC to connect&amp;lt;br&amp;gt;&lt;br /&gt;
sqllineEngine starts Engine&amp;lt;br&amp;gt;&lt;br /&gt;
lucidDbServer starts vJDBC&amp;lt;br&amp;gt;&lt;br /&gt;
sqllineClient connects to lucidDbServer via vJDBC&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''sqllineClient''' is a SQL client.&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Creating users and granting rights ==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
You can create a user by following command structure:&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt;create user &amp;quot;foodmart&amp;quot; identified by 'foodmart' default schema foodmart;&amp;lt;/pre&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
You can grant on many different things using the [[LucidDbGrant |GRANT]] SQL keyword.&lt;br /&gt;
There is also a helper library function to help for granting SELECT rights over an entire schema. &lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''Functions - using GRANT'''&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
grant execute on specific procedure&lt;br /&gt;
applib.estimate_statistics_for_schema_no_samplingrate to &amp;quot;foodmart&amp;quot;;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
'''Schema - Using helper library function.'''&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
CALL APPLIB.GRANT_SELECT_FOR_SCHEMA( 'TESTING', 'pentaho_lucid' );&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbUserFaq</id>
		<title>LucidDbUserFaq</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbUserFaq"/>
				<updated>2012-05-18T17:48:45Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: Show user creation and a schema grant example.&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;= FAQ List =&lt;br /&gt;
&lt;br /&gt;
This page is the FAQ list for LucidDB users.  For questions about the project, see [http://www.luciddb.org/projectFaq.html the project FAQ on the website].&lt;br /&gt;
&lt;br /&gt;
== Startup Error for libgcj ==&lt;br /&gt;
&lt;br /&gt;
'''Question'''&lt;br /&gt;
&lt;br /&gt;
I got an error about initializeClass on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Exception in thread &amp;quot;main&amp;quot; java.lang.NoClassDefFoundError: &lt;br /&gt;
net.sf.farrago.db.FarragoDatabase&lt;br /&gt;
    at java.lang.Class.initializeClass(libgcj.so.90)&lt;br /&gt;
    at &lt;br /&gt;
net.sf.farrago.db.FarragoDbSingleton.pinReference(FarragoDbSingleton.java:100)&lt;br /&gt;
    at &lt;br /&gt;
net.sf.farrago.server.FarragoAbstractServer.start(FarragoAbstractServer.java:232)&lt;br /&gt;
    at com.lucidera.farrago.LucidDbServer.main(LucidDbServer.java:61)&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
The GCJ virtual machine (packaged by default with many Linux distributions) is not sufficient for use with LucidDB.  Instead, please install a [http://java.sun.com/javase/downloads/index.jsp Sun Java JVM], set your JAVA_HOME to the Sun JRE, then do a fresh unzip/install.&lt;br /&gt;
&lt;br /&gt;
== Startup Error for xlib xcb ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I got an error similar to one of the ones below on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
java: xcb_xlib.c:50: xcb_xlib_unlock: Assertion `c-&amp;gt;xlib.lock' failed.&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Locking assertion failure. Backtrace:&lt;br /&gt;
#0 /usr/lib/libxcb-xlib.so.0 [0xb7361767]&lt;br /&gt;
#1 /usr/lib/libxcb-xlib.so.0(xcb_xlib_unlock+0x31) [0xb73618b1]&lt;br /&gt;
#2 /usr/lib/libX11.so.6(_XReply+0xfd) [0x99e591bd]&lt;br /&gt;
#3 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so [0x9b539dce]&lt;br /&gt;
#4 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so [0x9b523d77]&lt;br /&gt;
#5 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so [0x9b523ef3]&lt;br /&gt;
#6 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so(Java_sun_awt_X11GraphicsEnvironment_initDisplay+0x26) [0x9b524136] &lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
The easiest way is to edit the '''bin/lucidDbServer''' startup script and add '''-Dorg.eigenbase.util.AWT_WORKAROUND=off''' to the Java command line.  (This will be done as part of the out-of-the-box packaging in the next release since this seems to be a common problem.)&lt;br /&gt;
&lt;br /&gt;
See [http://sourceforge.net/mailarchive/message.php?msg_id=613385.33648.qm%40web30806.mail.mud.yahoo.com this mailing list thread] for more discussion.&lt;br /&gt;
&lt;br /&gt;
== Startup Error For libaio ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I got the error below on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Loading database...&lt;br /&gt;
Exception in thread &amp;quot;main&amp;quot; org.eigenbase.util.EigenbaseException: Failed to load database&lt;br /&gt;
    at net.sf.farrago.resource.FarragoResource$_Def1.ex(FarragoResource.java:1789)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDatabase.&amp;lt;init&amp;gt;(FarragoDatabase.java:269)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDbSingleton.pinReference(FarragoDbSingleton.java:89)&lt;br /&gt;
    at net.sf.farrago.server.FarragoAbstractServer.start(FarragoAbstractServer.java:183)&lt;br /&gt;
    at com.lucidera.farrago.LucidDbServer.main(LucidDbServer.java:61)&lt;br /&gt;
Caused by: org.eigenbase.util.EigenbaseException: FennelResource.en_US.libaioRequired()&lt;br /&gt;
    at net.sf.farrago.resource.FarragoResource$_Def0.ex(FarragoResource.java:1766)&lt;br /&gt;
    at net.sf.farrago.fennel.FennelDbHandle.handleNativeException(FennelDbHandle.java:315)&lt;br /&gt;
    at net.sf.farrago.fennel.FennelDbHandle.executeCmd(FennelDbHandle.java:242)&lt;br /&gt;
    at net.sf.farrago.fennel.FennelDbHandle.&amp;lt;init&amp;gt;(FennelDbHandle.java:90)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDatabase.loadFennel(FarragoDatabase.java:509)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDatabase.&amp;lt;init&amp;gt;(FarragoDatabase.java:189)&lt;br /&gt;
    ... 3 more&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
On a Debian-based system such as Ubuntu:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
apt-get install libaio1&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
(on older versions it may be libaio instead of libaio1)&lt;br /&gt;
&lt;br /&gt;
On A RedHat-based system:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
yum install libaio1&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
After that, you should be able to start the server.  If you keep the default setting of aioLinux, you'll want to increase LucidDB's buffer pool size, and also preallocate data files, as mentioned in [[LucidDbPerformanceTuning#I.2FO_Scheduler]].&lt;br /&gt;
&lt;br /&gt;
== Startup Error For mmap ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I got the error below on startup, or when trying to increase the [[LucidDbBufferPoolSizing|buffer pool size]].  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Error: System call failed:  mmap failed: Cannot allocate memory (state=,code=0)&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
Assuming you actually have sufficient physical memory, and are using a 64-bit build if trying to allocate a large buffer pool, check these:&lt;br /&gt;
&lt;br /&gt;
# Make sure '''ulimit -v''' returns the string &amp;quot;unlimited&amp;quot;.  Setting a quota on virtual memory size can cause the error above.&lt;br /&gt;
# Make sure you aren't accidentally using a [[#Debug Builds|debug build]].  Debug builds use '''mprotect''' to guard against buffer overruns, and this eats up a lot of additional memory and OS page table space.&lt;br /&gt;
&lt;br /&gt;
== Startup Error For Windows ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I got an error trying to load the native code DLL's on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
Make sure you have installed the [http://www.microsoft.com/downloads/details.aspx?FamilyID=9b2da534-3e03-4391-8a4d-074b9f2bc1bf&amp;amp;displaylang=en Visual C++ 2008 Redistributable Package].&lt;br /&gt;
&lt;br /&gt;
== Client Connectivity Problems ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I can't get sqllineClient, Squirrel, and other clients to talk to the LucidDB server.  What's wrong?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
You may need to follow the instructions in [[ClientServerLocalhost]] to fix '''/etc/hosts'''.&lt;br /&gt;
&lt;br /&gt;
== Loading Large Data Files ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I have a large data file in txt format. I need to bulk load it into Lucid tables. What's the best way to do this?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
Create a flat file foreign table corresponding to your flat file, and then use an INSERT-SELECT statement to load from the flat file table to your target table.&lt;br /&gt;
&lt;br /&gt;
See [[LucidDbFlatFileWrapper]] for details.&lt;br /&gt;
&lt;br /&gt;
[[LucidDbEtlTutorial#Define_Sources]] also has an example that shows you how to create a flatfile foreign data wrapper, import it, and then access tables within the imported foreign schema.&lt;br /&gt;
&lt;br /&gt;
== ETL Tutorial ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
In attempting to follow the ETL Tutorial I got an error because directory examples/etl/filedata/ does not exist.  What should I do?&lt;br /&gt;
&lt;br /&gt;
'''Answer'''&lt;br /&gt;
&lt;br /&gt;
Make sure you followed the instructions to start the server like this:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
bin/lucidDbServer&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
The tutorial relies on this for the relative paths to come out right.  Otherwise, you need to edit the scripts so that they supply absolute paths.&lt;br /&gt;
&lt;br /&gt;
== Case-Sensitive Foreign Schema Name ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to import a foreign schema from a server like PostgreSQL with case-sensitive identifiers, and I'm not getting any tables back.  How come?&lt;br /&gt;
&lt;br /&gt;
'''Answer'''&lt;br /&gt;
&lt;br /&gt;
Make sure you quote the foreign schema name in the IMPORT FOREIGN SCHEMA command:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
import foreign schema &amp;quot;public&amp;quot;&lt;br /&gt;
from server postgres_abc&lt;br /&gt;
into ldb_schema &lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Likewise for [http://sourceforge.net/mailarchive/forum.php?thread_name=4891317F.3040406%40gmail.com&amp;amp;forum_name=luciddb-users foreign tables].&lt;br /&gt;
&lt;br /&gt;
== Default Port ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
What is the default listening port number for LucidDB?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
By default, LucidDB listens for HTTP connections on port 8034.  If you want to specify it explicitly from the client side, use a URL like &lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
jdbc:luciddb:http://1.2.3.4:8034&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
You can change a server's port number by setting system parameter '''serverHttpPort'''; see [[LucidDbSystemParameters]] for more information.&lt;br /&gt;
&lt;br /&gt;
== JDBC Driver Class ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to connect to LucidDB from my own program, but I always get an exception like java.lang.ClassNotFoundException: org.luciddb.jdbc.LucidDbClientDriver.  What should I do to fix it?&lt;br /&gt;
&lt;br /&gt;
'''Answer''':&lt;br /&gt;
&lt;br /&gt;
Make sure you have '''luciddb/plugin/LucidDbClient.jar''' on your program's classpath.&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to use LucidDbLocalDriver to access the server from a client program running on the same (local) machine, but it doesn't work.  Why not?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
The &amp;quot;local&amp;quot; driver is local only in the sense &amp;quot;in the same java process&amp;quot;, not in the sense &amp;quot;on the same machine&amp;quot;, so you'll need to  &lt;br /&gt;
use the HTTP driver.  Use driver class '''org.luciddb.jdbc.LucidDbClientDriver''' unless the client and server are actually running in the same JVM.&lt;br /&gt;
&lt;br /&gt;
== JDBC Driver Jar files ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
In luciddb-0.9.4/plugin there are two files, '''LucidDbClient.jar and LucidDbClient-minimal.jar''' that look like they could be used by applications to connect to LucidDB.  Which should I use?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
Only applications that already have required libraries (commons-logging-1.1.jar) like PDI/etc should use LucidDbClient-minimal.jar.  Pentaho Data Integration is an example of such an application.  The Pentaho BI Server itself can also use the LucidDbClient-minimal.jar.&lt;br /&gt;
&lt;br /&gt;
Squirrel SQL client and most other applications will use the LucidDbClient.jar&lt;br /&gt;
&lt;br /&gt;
== Slow INSERT performance ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to INSERT lots of rows using the INSERT command, but the performance is terrible!  What can I do to improve the performance?&lt;br /&gt;
&lt;br /&gt;
'''Answer''':&lt;br /&gt;
&lt;br /&gt;
There are inherent issues with single row INSERTs in a column store database.  Bulk INSERTs or UPDATEs are best accomplished (with orders of magnitude increases in performance) via a bulk loading method (see [[LucidDbEtlTutorial]] for an example).&lt;br /&gt;
&lt;br /&gt;
== Missing Columns ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I created a wide table, and some of the columns seem to have gone AWOL.  What gives?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
If you're using sqlline, see this [http://sourceforge.net/mailarchive/forum.php?thread_name=221131.98865.qm%40web51307.mail.re2.yahoo.com&amp;amp;forum_name=luciddb-users mailing list thread].&lt;br /&gt;
&lt;br /&gt;
== Running As A Service Or Daemon ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
How do I run LucidDB as a service on Windows or a daemon on Unix?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
See [[LucidDbAsDaemonService]].&lt;br /&gt;
&lt;br /&gt;
== J2EE Embedding ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
How do I run LucidDB inside of a J2EE app server?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
See [[LucidDbAsManagedBean]].&lt;br /&gt;
&lt;br /&gt;
== Catalog File Locking ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I got an exception about &amp;quot;Failed to lock catalog file&amp;quot; on server startup; what does this mean?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
It means you already have a server process running from the same installation, and only one can be running at a time.  See this [http://sourceforge.net/mailarchive/forum.php?thread_name=381602.46904.qm%40web51306.mail.re2.yahoo.com&amp;amp;forum_name=luciddb-users mailing list thread].  For information on how to start LucidDB on a remote server, see [http://sourceforge.net/mailarchive/forum.php?thread_name=4890A61F.3050505%40gmail.com&amp;amp;forum_name=luciddb-users this thread].&lt;br /&gt;
&lt;br /&gt;
== Debug Builds ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I built LucidDB [[LucidDbBuildFromSourceDistribution|from source]] and now it's really slow.  How come?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
By default, '''initBuild.sh''' produces an unoptimized debug build, which is an order of magnitude slower than release builds.  Be sure to specify the '''--with-optimization --without-debug''' flags to match the release configuration, unless you're actually planning to hack on LucidDB native code and use gdb.&lt;br /&gt;
&lt;br /&gt;
== Beyond Java ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
Can I use LucidDB in a non-Java application?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
[[LucidDbNonJavaClients|Maybe]].&lt;br /&gt;
&lt;br /&gt;
== Compression Statistics ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
How can I tell how well compression is working?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
It can be difficult to determine this from the size of '''db.dat''', since not all of the pages may be currently in use.&lt;br /&gt;
&lt;br /&gt;
To find out how many pages are currently in use across all tables, across all page versions, execute this:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
alter system deallocate old;&lt;br /&gt;
select counter_value from sys_root.dba_performance_counters where counter_name='DatabasePagesAllocated';&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Multiply the result by 32KB (the size of one page).&lt;br /&gt;
&lt;br /&gt;
To study compression effectiveness for a particular table, execute this:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
alter system deallocate old;&lt;br /&gt;
analyze table t estimate statistics for all columns;&lt;br /&gt;
select index_name, pages from sys_boot.mgmt.page_counts_view where table_schem='YOUR_SCHEMA_NAME' and table_name='YOUR_TABLE_NAME';&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Indexes with names starting with &amp;quot;SYS$CLUSTERED&amp;quot; represent the compressed column storage.  Every table has a single &amp;quot;SYS$DELETION_INDEX&amp;quot; which tracks deleted rows.  A table may have SYS$ indexes corresponding to PRIMARY KEY and UNIQUE constraint defintions.  Any other indexes are named indexes you have created.&lt;br /&gt;
&lt;br /&gt;
== OpenSUSE Performance ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
Why is LucidDB so slow for short queries on OpenSUSE?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
See the discussion on the ext3 barrier setting in [http://n2.nabble.com/Row-has-too-many-columns-td2789557.html this thread], which contains a workaround.&lt;br /&gt;
&lt;br /&gt;
== Identifier Quoting - Dealing with mixed case Schema, Table and Column names ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
Why are the rules for this so confusing?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
LucidDB strictly adheres to SQL:2003 in this regard.  When you don't quote identifiers, they are implicitly uppercased as part of parsing (e.g. yoUr_table becomes YOUR_TABLE).  When you quote them, case is preserved (e.g. &amp;quot;yoUr_table&amp;quot; stays exactly like that).  You must quote them if they are reserved words or contain special characters.  For compound identifiers, the quotes go around each component, e.g. &amp;quot;yoUr_schema&amp;quot;.&amp;quot;yoUr_table&amp;quot; not &amp;quot;yoUr_schema.yoUr_table&amp;quot;).&lt;br /&gt;
&lt;br /&gt;
One point of confusion arises from the SET SCHEMA command.  The actual syntax is '''SET SCHEMA &amp;lt;character-expression&amp;gt;''', not '''SET SCHEMA &amp;lt;identifier&amp;gt;'''.  So, you have to write&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA '&amp;quot;yoUr_schema&amp;quot;'&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
not&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA &amp;quot;yoUr_schema&amp;quot;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
If you have a schema named EXTRACTION_SCHEMA (all upper case), this works:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA 'extraction_schema'&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
The reason this works is that the single quotes are delimiting the character literal (not the identifier).  The parsing for this expression first evaluates the character expression, then interprets the result as a (possibly-quoted) identifier.  This allows you to do things like&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA 'SCHEMA_FOR_' || CURRENT_USER&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
So if user FRANCISCO logs in, he'll get SCHEMA_FOR_FRANCISCO set as default after executing the expression above.&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''Normal SQL Queries with mixed case table or column names'''&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
When you use normal '''SELECT''' style queries you can expect to use double quotes to work around case issues.&lt;br /&gt;
Example:&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
select &amp;quot;tableOne&amp;quot;.&amp;quot;myColumn&amp;quot; from &amp;quot;SchemaName&amp;quot;.&amp;quot;tableOne&amp;quot;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''Function Calls with mixed case table or column names'''&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
Look at how the parameter itself is in single quotes, the column name is in double quotes.&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
create_table_as ('select &amp;quot;myCol&amp;quot; from &amp;quot;myTable&amp;quot;', '&amp;quot;TARGETtable&amp;quot;')&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== What is the difference between sqllineClient and sqllineEngine? ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
What is the difference between sqllineClient and sqllineEngine?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''sqllineEngine''' is LucidDB without the client/server part.&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
There are two typs of JDBC services&amp;lt;br&amp;gt;&lt;br /&gt;
Engine and vJDBC&amp;lt;br&amp;gt;&lt;br /&gt;
Engine allows something else in Java machine (ie, sqllineEngine) to connect&amp;lt;br&amp;gt;&lt;br /&gt;
JDBC starts listening on port 8034 to allow remote JDBC to connect&amp;lt;br&amp;gt;&lt;br /&gt;
sqllineEngine starts Engine&amp;lt;br&amp;gt;&lt;br /&gt;
lucidDbServer starts vJDBC&amp;lt;br&amp;gt;&lt;br /&gt;
sqllineClient connects to lucidDbServer via vJDBC&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''sqllineClient''' is a SQL client.&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Creating users and granting rights ==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
You can create a user by following command structure:&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt;create user &amp;quot;foodmart&amp;quot; identified by 'foodmart' default schema foodmart;&amp;lt;/pre&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
Two kinds of grants exist.  Granting on executing functions and granting for schema access.&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''Functions'''&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
grant execute on specific procedure&lt;br /&gt;
applib.estimate_statistics_for_schema_no_samplingrate to &amp;quot;foodmart&amp;quot;;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
'''Schema'''&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
CALL APPLIB.GRANT_SELECT_FOR_SCHEMA( 'TESTING', 'pentaho_lucid' );&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbAnalyzeTable</id>
		<title>LucidDbAnalyzeTable</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbAnalyzeTable"/>
				<updated>2012-05-18T17:33:58Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* Usage */  comment about stepping out of order.&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;== Syntax ==&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
ANALYZE TABLE qualified-table-name&lt;br /&gt;
COMPUTE STATISTICS FOR { ALL COLUMNS | COLUMNS ( unqualified-column-name, ... ) }&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
ANALYZE TABLE qualified-table-name&lt;br /&gt;
ESTIMATE STATISTICS FOR { ALL COLUMNS | COLUMNS ( unqualified-column-name, ... ) }&lt;br /&gt;
[ SAMPLE p PERCENT ]&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Usage ==&lt;br /&gt;
&lt;br /&gt;
See [[TableStatistics]].&lt;br /&gt;
&lt;br /&gt;
It is important to note that running ANALYZE TABLE does not go and create indexes on any columns.&lt;br /&gt;
It calculates statistics for the query optimization engine to use.  You should use this command&lt;br /&gt;
after everything is in place, (data tables and indexes). If you forget and go out of order and ANALYZE first, then create some new indexes, the query engine will not use your new indexes because no statistics exist describing the usefulness of the new indexes.&lt;br /&gt;
&lt;br /&gt;
== Example ==&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
ANALYZE TABLE calendar_dimension COMPUTE STATISTICS FOR ALL COLUMNS;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
ANALYZE TABLE calendar_dimension ESTIMATE STATISTICS FOR ALL COLUMNS;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbAnalyzeTable</id>
		<title>LucidDbAnalyzeTable</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbAnalyzeTable"/>
				<updated>2012-05-18T17:31:08Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* Usage */&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;== Syntax ==&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
ANALYZE TABLE qualified-table-name&lt;br /&gt;
COMPUTE STATISTICS FOR { ALL COLUMNS | COLUMNS ( unqualified-column-name, ... ) }&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
ANALYZE TABLE qualified-table-name&lt;br /&gt;
ESTIMATE STATISTICS FOR { ALL COLUMNS | COLUMNS ( unqualified-column-name, ... ) }&lt;br /&gt;
[ SAMPLE p PERCENT ]&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Usage ==&lt;br /&gt;
&lt;br /&gt;
See [[TableStatistics]].&lt;br /&gt;
&lt;br /&gt;
It is important to note that running ANALYZE TABLE does not go and create indexes on any columns.&lt;br /&gt;
It calculates statistics for the query optimization engine to use.  You should use this command&lt;br /&gt;
after everything is in place, (data tables and indexes).&lt;br /&gt;
&lt;br /&gt;
== Example ==&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
ANALYZE TABLE calendar_dimension COMPUTE STATISTICS FOR ALL COLUMNS;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
ANALYZE TABLE calendar_dimension ESTIMATE STATISTICS FOR ALL COLUMNS;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/Best_Practices</id>
		<title>Best Practices</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/Best_Practices"/>
				<updated>2012-05-18T17:28:25Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: Note about indexes automatically getting deleted when dropping tables.&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;__TOC__&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
'''Best workflow for query performance'''&lt;br /&gt;
&lt;br /&gt;
1. Load data&amp;lt;br&amp;gt;&lt;br /&gt;
2. Create Indexes&amp;lt;br&amp;gt;&lt;br /&gt;
3. Analyze Tables&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Background:&amp;lt;br&amp;gt;&lt;br /&gt;
Statistics generated during &amp;quot;ANALYZE TABLE&amp;quot; cover the full range from 'data' to 'indexes'.  If you get out of order, you may have indexes, but the query planner will not use them because no statistics exist indicating their usefulness.&lt;br /&gt;
&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&lt;br /&gt;
'''What does a complete ETL lifecycle look like?'''&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
This is a real-life example and may need to be adjusted if you are using MERGE updates, in which case you will not drop tables etc.  You also would have data warehouse labels as an option for providing consistency of data presentation between ETL runs for your users if you do not have to drop tables each ETL run.  This example does not reflect that scenario.&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
A clear out and pull all data cycle is illustrated below.&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
1. SET SCHEMA to your existing data to be updated.&lt;br /&gt;
&amp;lt;pre&amp;gt;SET SCHEMA 'TESTING';&amp;lt;/pre&amp;gt;&lt;br /&gt;
2. DROP TABLE on the old stuff. This will also delete old indexes you had on the tables.&lt;br /&gt;
3. Compact the database on disk. &amp;lt;pre&amp;gt;ALTER SYSTEM DEALLOCATE OLD;&amp;lt;/pre&amp;gt;&lt;br /&gt;
4. Get rid of your old foreign schema &amp;lt;pre&amp;gt;DROP SCHEMA MYSQL_TESTING CASCADE;&amp;lt;/pre&amp;gt;&lt;br /&gt;
5. Get rid of your old foreign server connection definition &amp;lt;pre&amp;gt;DROP SERVER jdbc_link_testing CASCADE;&amp;lt;/pre&amp;gt;&lt;br /&gt;
6. Recreate a foreign server connection definition&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt;create server jdbc_link_testing&lt;br /&gt;
&lt;br /&gt;
  foreign data wrapper sys_jdbc&lt;br /&gt;
  options(&lt;br /&gt;
     driver_class 'com.mysql.jdbc.Driver',&lt;br /&gt;
     url 'jdbc:mysql://172.27.0.204:3306/testing?useCursorFetch=true',&lt;br /&gt;
     user_name 'sg',&lt;br /&gt;
     password 'Complex38403BlahPass',   &lt;br /&gt;
     login_timeout '10',&lt;br /&gt;
     fetch_size '1000',&lt;br /&gt;
     validation_query 'select 1',&lt;br /&gt;
     schema_name 'testing',&lt;br /&gt;
     table_types 'TABLE');&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
7. Give LucidDB a schema where it can show the foreign tables&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
CREATE SCHEMA MYSQL_TESTING; &lt;br /&gt;
import foreign schema &amp;quot;testing&amp;quot; limit to (&amp;quot;FACT_ANSWERS&amp;quot;,&amp;quot;DIM_QUESTION&amp;quot;,&amp;quot;DIM_SUBMISSION_TYPE&amp;quot;,&amp;quot;FACT_VBP_CENSUS&amp;quot;,&lt;br /&gt;
&amp;quot;FACT_SUBMISSION_RESULTS&amp;quot;,&amp;quot;DIM_PATIENT&amp;quot;,&amp;quot;DIM_HOSPITAL&amp;quot;,&amp;quot;DIM_DISEASE&amp;quot;,&lt;br /&gt;
&amp;quot;DIM_READMISSION_REASON&amp;quot;,&amp;quot;DIM_DOCTOR&amp;quot;)&lt;br /&gt;
from server jdbc_link_testing into MYSQL_TESTING;&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
8. Switch active schema to the destination for your imported tables&lt;br /&gt;
&amp;lt;pre&amp;gt;SET SCHEMA 'TESTING';&amp;lt;/pre&amp;gt;&lt;br /&gt;
9. Perhaps use applib.create_table to help replicate the foreign tables from source to destination tables and schema&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
   CALL applib.create_table_as(null,'DIM_SUBMISSION_TYPE','select * from &amp;quot;MYSQL_TESTING&amp;quot;.&amp;quot;DIM_SUBMISSION_TYPE&amp;quot;',true);&lt;br /&gt;
   CALL applib.create_table_as(null,'FACT_VBP_CENSUS','select * from &amp;quot;MYSQL_TESTING&amp;quot;.&amp;quot;FACT_VBP_CENSUS&amp;quot;',true);&lt;br /&gt;
.....&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
10. Create indexes on all the columns involved in joining and filtering in all the tables.&amp;lt;br&amp;gt;&lt;br /&gt;
11. Tell LucidDB to calculate statistics about indexes and all tables for the query planner.&lt;br /&gt;
&amp;lt;pre&amp;gt;....&lt;br /&gt;
ANALYZE TABLE DIM_QUESTION COMPUTE STATISTICS FOR ALL COLUMNS;&lt;br /&gt;
ANALYZE TABLE FACT_ANSWERS COMPUTE STATISTICS FOR ALL COLUMNS;&lt;br /&gt;
... more tables&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
12. Grant access to users for the new schema you created during the process if necessary&lt;br /&gt;
&amp;lt;pre&amp;gt;CALL APPLIB.GRANT_SELECT_FOR_SCHEMA( 'TESTING', 'pentaho_lucid' ); &amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
'''Importing tables from other sources:'''&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
CALL applib.create_table_as(null,'DIM_SUBMISSION_TYPE','select * from &amp;quot;MYSQL_TESTING&amp;quot;.&amp;quot;DIM_SUBMISSION_TYPE&amp;quot;',true);&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
The above lets LucidDB help you out when importing data from other locations, keep in mind that no indexes or primary key information is transferred over as a result.  Be sure to create your indexes then update your statistics.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
'''Easy ways to create indexes:'''&lt;br /&gt;
&lt;br /&gt;
Discover what may make for a great index&amp;lt;br&amp;gt;&lt;br /&gt;
http://www.luciddb.org/wiki/AppLib_SHOW_IDX_CANDIDATES&lt;br /&gt;
&lt;br /&gt;
Have LucidDB automatically create indexes&amp;lt;br&amp;gt;&lt;br /&gt;
http://www.luciddb.org/wiki/AppLib_CREATE_INDEXES&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''Mondrian Schemas with LucidDB/Other DB'''&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
Sometimes you will want to create a Mondrian schema and begin testing it in MySQL or other database.&lt;br /&gt;
It may make design easier if you specify your default schema/database in both databases.  This way your Mondrian schema will not require the following entries&lt;br /&gt;
&amp;lt;pre&amp;gt; &amp;lt;Table name=&amp;quot;DIM_FACILITY&amp;quot; schema=&amp;quot;TESTING&amp;quot;&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;br&amp;gt;&lt;br /&gt;
You should instead be able to get away with just&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt; &amp;lt;Table name=&amp;quot;DIM_FACILITY&amp;quot;&amp;gt; &amp;lt;/pre&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/Best_Practices</id>
		<title>Best Practices</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/Best_Practices"/>
				<updated>2012-05-18T17:26:21Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: clarify some language&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;__TOC__&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
'''Best workflow for query performance'''&lt;br /&gt;
&lt;br /&gt;
1. Load data&amp;lt;br&amp;gt;&lt;br /&gt;
2. Create Indexes&amp;lt;br&amp;gt;&lt;br /&gt;
3. Analyze Tables&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Background:&amp;lt;br&amp;gt;&lt;br /&gt;
Statistics generated during &amp;quot;ANALYZE TABLE&amp;quot; cover the full range from 'data' to 'indexes'.  If you get out of order, you may have indexes, but the query planner will not use them because no statistics exist indicating their usefulness.&lt;br /&gt;
&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&lt;br /&gt;
'''What does a complete ETL lifecycle look like?'''&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
This is a real-life example and may need to be adjusted if you are using MERGE updates, in which case you will not drop tables etc.  You also would have data warehouse labels as an option for providing consistency of data presentation between ETL runs for your users if you do not have to drop tables each ETL run.  This example does not reflect that scenario.&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
A clear out and pull all data cycle is illustrated below.&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
1. SET SCHEMA to your existing data to be updated.&lt;br /&gt;
&amp;lt;pre&amp;gt;SET SCHEMA 'TESTING';&amp;lt;/pre&amp;gt;&lt;br /&gt;
2. DROP TABLE on the old stuff.&lt;br /&gt;
3. Compact the database on disk. &amp;lt;pre&amp;gt;ALTER SYSTEM DEALLOCATE OLD;&amp;lt;/pre&amp;gt;&lt;br /&gt;
4. Get rid of your old foreign schema &amp;lt;pre&amp;gt;DROP SCHEMA MYSQL_TESTING CASCADE;&amp;lt;/pre&amp;gt;&lt;br /&gt;
5. Get rid of your old foreign server connection definition &amp;lt;pre&amp;gt;DROP SERVER jdbc_link_testing CASCADE;&amp;lt;/pre&amp;gt;&lt;br /&gt;
6. Recreate a foreign server connection definition&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt;create server jdbc_link_testing&lt;br /&gt;
&lt;br /&gt;
  foreign data wrapper sys_jdbc&lt;br /&gt;
  options(&lt;br /&gt;
     driver_class 'com.mysql.jdbc.Driver',&lt;br /&gt;
     url 'jdbc:mysql://172.27.0.204:3306/testing?useCursorFetch=true',&lt;br /&gt;
     user_name 'sg',&lt;br /&gt;
     password 'Complex38403BlahPass',   &lt;br /&gt;
     login_timeout '10',&lt;br /&gt;
     fetch_size '1000',&lt;br /&gt;
     validation_query 'select 1',&lt;br /&gt;
     schema_name 'testing',&lt;br /&gt;
     table_types 'TABLE');&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
7. Give LucidDB a schema where it can show the foreign tables&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
CREATE SCHEMA MYSQL_TESTING; &lt;br /&gt;
import foreign schema &amp;quot;testing&amp;quot; limit to (&amp;quot;FACT_ANSWERS&amp;quot;,&amp;quot;DIM_QUESTION&amp;quot;,&amp;quot;DIM_SUBMISSION_TYPE&amp;quot;,&amp;quot;FACT_VBP_CENSUS&amp;quot;,&lt;br /&gt;
&amp;quot;FACT_SUBMISSION_RESULTS&amp;quot;,&amp;quot;DIM_PATIENT&amp;quot;,&amp;quot;DIM_HOSPITAL&amp;quot;,&amp;quot;DIM_DISEASE&amp;quot;,&lt;br /&gt;
&amp;quot;DIM_READMISSION_REASON&amp;quot;,&amp;quot;DIM_DOCTOR&amp;quot;)&lt;br /&gt;
from server jdbc_link_testing into MYSQL_TESTING;&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
8. Switch active schema to the destination for your imported tables&lt;br /&gt;
&amp;lt;pre&amp;gt;SET SCHEMA 'TESTING';&amp;lt;/pre&amp;gt;&lt;br /&gt;
9. Perhaps use applib.create_table to help replicate the foreign tables from source to destination tables and schema&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
   CALL applib.create_table_as(null,'DIM_SUBMISSION_TYPE','select * from &amp;quot;MYSQL_TESTING&amp;quot;.&amp;quot;DIM_SUBMISSION_TYPE&amp;quot;',true);&lt;br /&gt;
   CALL applib.create_table_as(null,'FACT_VBP_CENSUS','select * from &amp;quot;MYSQL_TESTING&amp;quot;.&amp;quot;FACT_VBP_CENSUS&amp;quot;',true);&lt;br /&gt;
.....&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
10. Create indexes on all the columns involved in joining and filtering in all the tables.&amp;lt;br&amp;gt;&lt;br /&gt;
11. Tell LucidDB to calculate statistics about indexes and all tables for the query planner.&lt;br /&gt;
&amp;lt;pre&amp;gt;....&lt;br /&gt;
ANALYZE TABLE DIM_QUESTION COMPUTE STATISTICS FOR ALL COLUMNS;&lt;br /&gt;
ANALYZE TABLE FACT_ANSWERS COMPUTE STATISTICS FOR ALL COLUMNS;&lt;br /&gt;
... more tables&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
12. Grant access to users for the new schema you created during the process if necessary&lt;br /&gt;
&amp;lt;pre&amp;gt;CALL APPLIB.GRANT_SELECT_FOR_SCHEMA( 'TESTING', 'pentaho_lucid' ); &amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
'''Importing tables from other sources:'''&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
CALL applib.create_table_as(null,'DIM_SUBMISSION_TYPE','select * from &amp;quot;MYSQL_TESTING&amp;quot;.&amp;quot;DIM_SUBMISSION_TYPE&amp;quot;',true);&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
The above lets LucidDB help you out when importing data from other locations, keep in mind that no indexes or primary key information is transferred over as a result.  Be sure to create your indexes then update your statistics.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
'''Easy ways to create indexes:'''&lt;br /&gt;
&lt;br /&gt;
Discover what may make for a great index&amp;lt;br&amp;gt;&lt;br /&gt;
http://www.luciddb.org/wiki/AppLib_SHOW_IDX_CANDIDATES&lt;br /&gt;
&lt;br /&gt;
Have LucidDB automatically create indexes&amp;lt;br&amp;gt;&lt;br /&gt;
http://www.luciddb.org/wiki/AppLib_CREATE_INDEXES&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''Mondrian Schemas with LucidDB/Other DB'''&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
Sometimes you will want to create a Mondrian schema and begin testing it in MySQL or other database.&lt;br /&gt;
It may make design easier if you specify your default schema/database in both databases.  This way your Mondrian schema will not require the following entries&lt;br /&gt;
&amp;lt;pre&amp;gt; &amp;lt;Table name=&amp;quot;DIM_FACILITY&amp;quot; schema=&amp;quot;TESTING&amp;quot;&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;br&amp;gt;&lt;br /&gt;
You should instead be able to get away with just&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt; &amp;lt;Table name=&amp;quot;DIM_FACILITY&amp;quot;&amp;gt; &amp;lt;/pre&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbDocs</id>
		<title>LucidDbDocs</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbDocs"/>
				<updated>2012-05-18T17:23:27Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* Administrator Guides */&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;This is the main index page for documentation about the [[LucidDB]] open-source project, a DBMS optimized for business intelligence.  LucidDB is part of [http://www.eigenbase.org The Eigenbase Project].&amp;lt;br&amp;gt;&lt;br /&gt;
[[Image:Lucid db logo PMS 2010.png|400px|right]] __TOC__&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
= LucidDB User Documentation =&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Getting Started ==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''LucidDB Server''' [[Image:AdminUI 11-4-2011 1-07-28 PM.jpg|[[http://pub.eigenbase.org/wiki/DynamoBIAdminUI AdminUI v1.0]]|thumb|200px]]&lt;br /&gt;
* [[LucidDbGettingStarted | Getting Started - An Installation Guide]]&lt;br /&gt;
* [[LucidDbUserFaq | Frequently Asked Questions]]&lt;br /&gt;
* [[DynamoBIAdminUI | LucidDB AdminUI - Web Based Server Management Tool]] &lt;br /&gt;
: A graphical browser-based frontend from DynamoBI specifically built for LucidDB&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''External Software'''[[Image:Squirrel SQL 11-4-2011 1-24-26 PM.jpg|Squirrel SQL client running on Windows 7|thumb|200px]]&lt;br /&gt;
* [[LucidDbSquirrel | Squirrel SQL Client]] &lt;br /&gt;
: A graphical SQL client for accessing many database platforms, including LucidDB&lt;br /&gt;
* [[LucidDbPowerArchitect | Power Architect]]&lt;br /&gt;
: A data modeling tool&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== User Guides ==&lt;br /&gt;
* [[LucidDbUdfHowto | User Defined Functions (UDF) Howto]]&lt;br /&gt;
* [[LucidDbUdfJavaHowto | User Defined Functions (UDF) Java Howto]]&lt;br /&gt;
* [[LucidDbUdxJavaHowto | User Defined Transformation (UDX) Java Howto]]&lt;br /&gt;
* [[LucidDbEtlTutorial | Extract, Transform and Load (ETL) Tutorial]]&lt;br /&gt;
* [[LucidDbOlap| Online Analytical Processing (OLAP)]]&lt;br /&gt;
** [[LucidDbMondrianReplication | Using Pentaho Mondrian Replication]]&lt;br /&gt;
** [[LucidDbAggregateDesigner | Using Pentaho Aggregate Designer for Mondrian]]&lt;br /&gt;
* [[LucidDbConcurrencyControl | Concurrency Control]]&lt;br /&gt;
* [[LucidDbDataStorageAndAccess | Data Storage And Access]]&lt;br /&gt;
* [[LucidDbErrorHandling | Error Handling]]&lt;br /&gt;
* [[LucidDbIndexAccess | Index Access]]&lt;br /&gt;
* [[LucidDbJoinOptimization | Join Optimization]]&lt;br /&gt;
* [[LucidDbJoinImplementation | Join Implementation]]&lt;br /&gt;
* [[LucidDbSlowQueryDiagnosis | Slow Query Diagnosis]]:  Diagnosing slow queries using EXPLAIN PLAN and other tools&lt;br /&gt;
* [[LucidDbSubqueries | Subqueries]]&lt;br /&gt;
* [[LucidDbWarehouseLabels | Warehouse Labels]]&lt;br /&gt;
:  Labels allow users to have read-only query access to a snapshot of the database at an earlier point in time. Snapshots are accessible regardless of  concurrent activities on other connections, like ETL, preparing new data.&lt;br /&gt;
* [[LucidDbQueryExecution | Query Execution]]&lt;br /&gt;
* [[LucidDbServerContainer | Server Container]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Administrator Guides ==&lt;br /&gt;
&lt;br /&gt;
LucidDB is designed to require as little administration as possible, so we hope this section can remain short :)&lt;br /&gt;
* [[Best_Practices | Beginner Best Practices]]&lt;br /&gt;
* [[LucidDbMemoryManagement | Memory Management]]&lt;br /&gt;
** [[LucidDbBufferPoolSizing | Buffer Pool Sizing]] &amp;lt;br&amp;gt;You should also increase the buffer pool sizing to increase the amount of memory that LucidDB uses to &amp;quot;run queries&amp;quot; &amp;lt;br&amp;gt;(the Java adjustments will only increase the catalog/parsing/optimizer memory settings but not the actual execution engine).&lt;br /&gt;
* [[LucidDbSystemProcedures | System Procedures]]&lt;br /&gt;
: Useful for: Backup/Restore, Generating DDL for tables and other objects, managing sessions.&lt;br /&gt;
* [[LucidDbSystemParameters | System Parameters]]&lt;br /&gt;
: Useful information about tweaking: Memory usage, network settings, execution, and storage functionality.&lt;br /&gt;
* [[LucidDbSessionParameters| Session Parameters]]&lt;br /&gt;
* [[LucidDbSystemViews | System Views]]&lt;br /&gt;
: The DBA views defined by LucidDB provide a global picture of the contents of the system catalog (tables, columns, etc) and the volatile state of the system (sessions, cache utilization, etc).&lt;br /&gt;
* [[LucidDbPerformanceTuning | Performance Tuning]]&lt;br /&gt;
** [[LucidDbPerformanceCounters | Performance Counters]]&lt;br /&gt;
** [[LucidDbMonitor | Monitor]] Active monitoring&lt;br /&gt;
* [[LucidDbTracing | Tracing]] Debug Logs in LucidDB&lt;br /&gt;
* [[LucidDbBackupRestore | Performing Backups and Restores]]&lt;br /&gt;
* [[LucidDbUpgrade | How to upgrade to each new release.]]&lt;br /&gt;
* [[LucidDbAsDaemonService | Running LucidDB as a Service / Daemon]]&lt;br /&gt;
* [[LucidDbAsManagedBean | Running LucidDB as a Managed Java Bean]]&lt;br /&gt;
* [[LucidDbMoveCatalog | Moving the LucidDB Database Catalog]]&lt;br /&gt;
* [[LucidDbScriptingLucidUsingBASH | Scripting LucidDB using BASH shell scripts]]&lt;br /&gt;
&lt;br /&gt;
== Function and SQL Language Reference Guides ==&lt;br /&gt;
* [[AppLib]] - Description of the utility function library in LucidDB&lt;br /&gt;
* [[LucidDbDataTypes | Supported Data Types]]&lt;br /&gt;
* [[LucidDbSqlConformance | SQL Standard Conformance]]&lt;br /&gt;
* [[LucidDbSqlReference | SQL Language Reference]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Connectors to External Data Sources (SQL/MED) ([http://farrago.sourceforge.net/design/sqlmed.html Management of External Data])==&lt;br /&gt;
[[Image:Connectors.jpg|thumb|200px|right|See more general information about connectors here [[http://www.dynamobi.com/c/products/luciddb/connectors http://www.dynamobi.com]].]]&lt;br /&gt;
These connectors wrap up external datasources and allow them to present their data as foreign tables inside of LucidDB.  Connectors are an adapters that generally allow normal SQL queries to be run against datasources that may not support the SQL language directly.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbFlatFileWrapper | Flat File Wrapper]] - Connector enabling read-only SQL accesses to text files&lt;br /&gt;
* [[FarragoMedJdbcPlugin | JDBC Data Wrapper]] - Connector enabling presentation of external database tables in LucidDB&lt;br /&gt;
* [[FarragoMedSalesforcePlugin|Salesforce Data Wrapper]] - Connector for presenting Salesforce tables in LucidDB&lt;br /&gt;
* CouchDB connections:&lt;br /&gt;
** Blog: [http://www.nicholasgoodman.com/bt/blog/2011/06/08/sql-access-to-couchdb-views/ SQL access to couchdb views]&lt;br /&gt;
** Blog: [http://www.nicholasgoodman.com/bt/blog/2011/06/22/sql-access-to-couchdb-views-easy-reporting/ SQL access to CouchDB views : Easy Reporting]&lt;br /&gt;
** Forum: Installing the CouchDB connector [http://www.luciddb.org/forums/discussion/comment/1313#Comment_1313]&lt;br /&gt;
** Download the connector from [http://www.dynamobi.com/c/downloads/stable/]&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Benchmark Studies ==&lt;br /&gt;
* [[LucidDbTpch|TPCH Benchmarks]]&lt;br /&gt;
* [[LucidDbSqbm | SQBM]]&lt;br /&gt;
* [[LucidDbOtp| OTP Benchmark using Bureau of Transportation Statistics]], [http://www.mysqlperformanceblog.com/2010/01/07/star-schema-bechmark-infobright-infinidb-and-luciddb SSB Benchmark]&lt;br /&gt;
* [[LucidDbBenchmarkCandidates| Benchmark Candidates]] - Published benchmarks and applications which could serve as good showcases for LucidDB's architecture&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
== Commercial Support ==&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
Quick, reliable service and support is available to you from DynamoBI, the commercial sponsor of LucidDB.&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''DynamoBI Global Headquarters'''[[Image:Dynamobi logo large2.png|right|200px]]&amp;lt;br&amp;gt;&lt;br /&gt;
42nd Floor&amp;lt;br&amp;gt;&lt;br /&gt;
601 Union Street&amp;lt;br&amp;gt;&lt;br /&gt;
Two Union Square&amp;lt;br&amp;gt;&lt;br /&gt;
Seattle, WA 98101 USA&amp;lt;br&amp;gt;&lt;br /&gt;
Tel. +1 888 LucidDB (582-4332)&amp;lt;br&amp;gt;&lt;br /&gt;
Time Zone: PDT&amp;lt;br&amp;gt;&lt;br /&gt;
Business Hours: 8-6 PDT&amp;lt;br&amp;gt;&lt;br /&gt;
[[http://www.dynamobi.com/c/company/contact-us Contact us!]]&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Community Involvement ==&lt;br /&gt;
LucidDB is one of the best databases in the world because of the people, not just the technology.&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Community Support Forum'''&lt;br /&gt;
: Please visit, ask questions and help others &lt;br /&gt;
: [[http://www.luciddb.org/forums/ http://www.luciddb.org/forums/]]&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Chat with us online'''&lt;br /&gt;
: Many LucidDB users hang out on an Internet Relay Chat channel (IRC) called ##luciddb, using Freenode's [http://freenode.net/irc_servers.shtml] servers.&lt;br /&gt;
: We would love to answer your questions and help you get up and going using LucidDB.&lt;br /&gt;
: When you connect to '''chat.us.freenode.net''' or other freenode server near your country, be sure to use the command '''/join ##luciddb''' to actually join the chat channel for LucidDB.&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
:{| {{table}}&lt;br /&gt;
| align=&amp;quot;Left&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Software Name'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Platform'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Download Location'''&lt;br /&gt;
|-&lt;br /&gt;
| qwebirc||Web-based client||http://webchat.freenode.net/&lt;br /&gt;
|-&lt;br /&gt;
| ChatZilla||Firefox Add-on||https://addons.mozilla.org/en-US/firefox/addon/chatzilla/&lt;br /&gt;
|-&lt;br /&gt;
| mIRC||MS Windows||http://www.mirc.com/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||MS Windows||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||Linux||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat Aqua||Mac OS||http://sourceforge.net/projects/xchataqua/&lt;br /&gt;
|-&lt;br /&gt;
| Colloquy||Apple iPad &amp;amp; iPhone||http://colloquy.info/&lt;br /&gt;
|-&lt;br /&gt;
| Android - Internet Relay Chat||Google Android||https://market.android.com/details?id=com.countercultured.irc&amp;amp;hl=en&lt;br /&gt;
|}&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
* '''Bug and Feature Tracking&lt;br /&gt;
: Make a feature request or report a problem you have experienced.&lt;br /&gt;
: [[http://jira.eigenbase.org/secure/Dashboard.jspa http://jira.eigenbase.org/secure/Dashboard.jspa]]&lt;br /&gt;
&lt;br /&gt;
== Presentations / Blogs ==&lt;br /&gt;
* [[Media:PerconaLucidDB.ppt|Percona LucidDB PowerPoint Slides]]&lt;br /&gt;
* [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive]&lt;br /&gt;
: Demonstrates loading data, defining an OLAP cube, and browsing the cube with Pentaho, Jaspersoft, SpagoBI and Saiku which all use Mondrian to drive their OLAP functionality.&lt;br /&gt;
* [http://wiki.pentaho.com/display/COM/January+20,+2010+-+Nick+Goodman+-+LucidDB,+DynamoBI+and+Mondrian Pentaho - January 20, 2010 - Nick Goodman - LucidDB, DynamoBI and Mondrian]&lt;br /&gt;
: Webex Presentation and PDF of slides presenting benefits and features of LucidDB 0.9.3 in conjunction with Pentaho's BI Suite.&lt;br /&gt;
* [http://www.nicholasgoodman.com/bt/blog/2011/06/08/a-different-vision-for-the-value-of-big-data/ A different vision for the value of Big Data]&lt;br /&gt;
: DynamoBI (Commercial Sponsor of LucidDB) - CEO Nick Goodman - shares vision about how LucidDB forms an information hub from which many different data sources can be presented and queried through normal SQL.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Tutorial Videos and Screencasts ==&lt;br /&gt;
&lt;br /&gt;
* [http://www.dynamobi.com/c/support/tutorial-videos/ DynamoBI - Getting started online videos.]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/installation.swf Installing LucidDB]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/sqllineclient.swf Connecting to LucidDB and using the Command Line Interface, sqllineClient]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/stopping_server.swf Stopping the server, with and without users connected]&lt;br /&gt;
* [http://youtu.be/sSYsVoVrp24 Installing and Loading LucidDB backed sample OLAP]&lt;br /&gt;
** Video from this blog: [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive] - By Slawomir Chodnicki, on March 12th, 2011&lt;br /&gt;
* [http://youtu.be/ZnY223u6q_Y Installing and running LucidDB as a daemon in Linux using a Java Service Wrapper]&lt;br /&gt;
: This is an approach that may also work well on Windows.  There is another approach, which is shorter and easier using the BASH shell under Linux. Documentation for both approaches can be found at [[LucidDbAsDaemonService]].&lt;br /&gt;
* Moving tables from one database to LucidDB&lt;br /&gt;
:[http://pub.eigenbase.org/wiki/LucidDbUpgrade#Downloads_-_Using_Pentaho_Data_Integration_to_generate_a_SQL_script_for_moving_tables Using Pentaho Data Integration to generate SQL for moving tables from an external database to LucidDB]&lt;br /&gt;
: This link is actually to a document about upgrading version to version of LucidDB, but because a PDI transformation file is used to generate SQL for the transition, the process can be generalized as moving from an external database to LucidDB with only minor modifications to the transformation.&lt;br /&gt;
&lt;br /&gt;
== Experimental ==&lt;br /&gt;
&lt;br /&gt;
*[http://kettle.pentaho.com/ Pentaho Data Integration (PDI)] - Bulk Loading Plugins&lt;br /&gt;
** [[LucidDbPDIStreamingLoader| Streaming Loader Step]] - Bulk load data the easy way. '''[RECOMMENDED]''' &lt;br /&gt;
**  [[LucidDbPdiBulkLoad | Bulk Load Step]] - '''[DEPRECATED after LucidDB 0.9.3]'''&lt;br /&gt;
**  [[LucidDbStreamingLoad |Streaming Loader]] : A good example for building bulk loaders from non-Java tools. '''[INFORMATIONAL]'''&lt;br /&gt;
* [[LucidDbHorizontalPartitioning | Horizontal Partitioning]]&lt;br /&gt;
: LucidDB does not currently support DDL for automatic [http://en.wikipedia.org/wiki/Partition_%28database%29 horizontal partitioning] of tables.  Although LucidDB's column-store architecture implements automatic vertical partitioning, horizontal partitioning is still a useful technique for scaling up to very large data volumes, so this page describes some manual approaches which can be used for very simple schemas.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbNonJavaClients | Using Non-Java Clients with LucidDB]]&lt;br /&gt;
: The main client API for LucidDB is JDBC.  This page discusses some options for overcoming the obstacle of developing an application in a language other than Java.&lt;br /&gt;
* [[LucidDbSqlDiffTesting | SQL Diff Testing]]&lt;br /&gt;
: Description of how to make use of some of the diff-based testing frameworks built into LucidDB for the purpose of test-driven ETL script development.&lt;br /&gt;
* [[LucidDbHive | Hive]]&lt;br /&gt;
: Walk-through document showing how to combine LucidDB with [http://hadoop.apache.org/hive/ Apache Hadoop's Hive].&lt;br /&gt;
&lt;br /&gt;
== Frequently Asked Questions ==&lt;br /&gt;
[[LucidDbUserFaq | Frequently Asked Questions]]&lt;br /&gt;
&lt;br /&gt;
= LucidDB Developer Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbBuildFromSourceDistribution | Building LucidDB from source code]]&lt;br /&gt;
* [[LucidDbBuildFromPerforce | Building LucidDB from Perforce (version control software, VCS)]]&lt;br /&gt;
* [[Main_Page#Collaboration | Main Developer Collaboration Section ]]&lt;br /&gt;
* [[DesignMeetings | Design Meetings - Feature Ideas and Roadmaps]]&lt;br /&gt;
&lt;br /&gt;
= LucidDB Design Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbEfficientUpdates | Efficient Updates]]&lt;br /&gt;
* [[LucidDbCommonRelationalSubExpressionMaterialization | Common Relational Sub-Expression Materialization]]&lt;br /&gt;
&lt;br /&gt;
= Trademark Notice =&lt;br /&gt;
&lt;br /&gt;
&amp;lt;sub&amp;gt;LucidDB and the LucidDB logo are trademarks of DynamoBI Corporation.&amp;lt;/sub&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/Best_Practices</id>
		<title>Best Practices</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/Best_Practices"/>
				<updated>2012-05-18T17:13:10Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: Best practices.&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;__TOC__&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
'''Best workflow for query performance'''&lt;br /&gt;
&lt;br /&gt;
1. Load data&amp;lt;br&amp;gt;&lt;br /&gt;
2. Create Indexes&amp;lt;br&amp;gt;&lt;br /&gt;
3. Analyze Tables&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Background:&amp;lt;br&amp;gt;&lt;br /&gt;
Statistics generated during &amp;quot;ANALYZE TABLE&amp;quot; cover the full range from 'data' to 'indexes'.  If you get out of order, you may have indexes, but the query planner will not use them because no statistics exist indicating their usefulness.&lt;br /&gt;
&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&lt;br /&gt;
'''What does a complete ETL lifecycle look like?'''&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
This is a real-life example and may need to be adjusted if you are using MERGE updates, in which case you will not drop tables etc.  You also would have data warehouse labels as an option for providing consistency of data presentation between ETL runs for your users if you do not have to drop tables each ETL run.  This example does not reflect that scenario.&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
1. SET SCHEMA&lt;br /&gt;
&amp;lt;pre&amp;gt;SET SCHEMA 'TESTING';&amp;lt;/pre&amp;gt;&lt;br /&gt;
2. DROP TABLE on the old stuff.&lt;br /&gt;
3. Compact the database &amp;lt;pre&amp;gt;ALTER SYSTEM DEALLOCATE OLD;&amp;lt;/pre&amp;gt;&lt;br /&gt;
4. Get rid of your old foreign schema &amp;lt;pre&amp;gt;DROP SCHEMA MYSQL_TESTING CASCADE;&amp;lt;/pre&amp;gt;&lt;br /&gt;
5. Get rid of your old foreign server connection definition &amp;lt;pre&amp;gt;DROP SERVER jdbc_link_testing CASCADE;&amp;lt;/pre&amp;gt;&lt;br /&gt;
6. Recreate a foreign server connection definition&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt;create server jdbc_link_testing&lt;br /&gt;
&lt;br /&gt;
  foreign data wrapper sys_jdbc&lt;br /&gt;
  options(&lt;br /&gt;
     driver_class 'com.mysql.jdbc.Driver',&lt;br /&gt;
     url 'jdbc:mysql://172.27.0.204:3306/testing?useCursorFetch=true',&lt;br /&gt;
     user_name 'sg',&lt;br /&gt;
     password 'Complex38403BlahPass',   &lt;br /&gt;
     login_timeout '10',&lt;br /&gt;
     fetch_size '1000',&lt;br /&gt;
     validation_query 'select 1',&lt;br /&gt;
     schema_name 'testing',&lt;br /&gt;
     table_types 'TABLE');&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
7. Give LucidDB a schema where it can show the foreign tables&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
CREATE SCHEMA MYSQL_TESTING; &lt;br /&gt;
import foreign schema &amp;quot;testing&amp;quot; limit to (&amp;quot;FACT_ANSWERS&amp;quot;,&amp;quot;DIM_QUESTION&amp;quot;,&amp;quot;DIM_SUBMISSION_TYPE&amp;quot;,&amp;quot;FACT_VBP_CENSUS&amp;quot;,&lt;br /&gt;
&amp;quot;FACT_SUBMISSION_RESULTS&amp;quot;,&amp;quot;DIM_PATIENT&amp;quot;,&amp;quot;DIM_HOSPITAL&amp;quot;,&amp;quot;DIM_DISEASE&amp;quot;,&lt;br /&gt;
&amp;quot;DIM_READMISSION_REASON&amp;quot;,&amp;quot;DIM_DOCTOR&amp;quot;)&lt;br /&gt;
from server jdbc_link_testing into MYSQL_TESTING;&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
8. Switch active schema to the destination for your imported tables&lt;br /&gt;
&amp;lt;pre&amp;gt;SET SCHEMA 'TESTING';&amp;lt;/pre&amp;gt;&lt;br /&gt;
9. Perhaps use applib.create_table to help replicate the foreign tables from source to destination tables and schema&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
   CALL applib.create_table_as(null,'DIM_SUBMISSION_TYPE','select * from &amp;quot;MYSQL_TESTING&amp;quot;.&amp;quot;DIM_SUBMISSION_TYPE&amp;quot;',true);&lt;br /&gt;
   CALL applib.create_table_as(null,'FACT_VBP_CENSUS','select * from &amp;quot;MYSQL_TESTING&amp;quot;.&amp;quot;FACT_VBP_CENSUS&amp;quot;',true);&lt;br /&gt;
.....&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
10. Create indexes on all the columns involved in joining and filtering in all the tables.&amp;lt;br&amp;gt;&lt;br /&gt;
11. Tell LucidDB to calculate statistics about indexes and all tables for the query planner.&lt;br /&gt;
&amp;lt;pre&amp;gt;....&lt;br /&gt;
ANALYZE TABLE DIM_QUESTION COMPUTE STATISTICS FOR ALL COLUMNS;&lt;br /&gt;
ANALYZE TABLE FACT_ANSWERS COMPUTE STATISTICS FOR ALL COLUMNS;&lt;br /&gt;
... more tables&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
12. Grant access to users for the new schema you created during the process if necessary&lt;br /&gt;
&amp;lt;pre&amp;gt;CALL APPLIB.GRANT_SELECT_FOR_SCHEMA( 'TESTING', 'pentaho_lucid' ); &amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
'''Importing tables from other sources:'''&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
CALL applib.create_table_as(null,'DIM_SUBMISSION_TYPE','select * from &amp;quot;MYSQL_TESTING&amp;quot;.&amp;quot;DIM_SUBMISSION_TYPE&amp;quot;',true);&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
The above lets LucidDB help you out when importing data from other locations, keep in mind that no indexes or primary key information is transferred over as a result.  Be sure to create your indexes then update your statistics.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
'''Easy ways to create indexes:'''&lt;br /&gt;
&lt;br /&gt;
Discover what may make for a great index&amp;lt;br&amp;gt;&lt;br /&gt;
http://www.luciddb.org/wiki/AppLib_SHOW_IDX_CANDIDATES&lt;br /&gt;
&lt;br /&gt;
Have LucidDB automatically create indexes&amp;lt;br&amp;gt;&lt;br /&gt;
http://www.luciddb.org/wiki/AppLib_CREATE_INDEXES&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''Mondrian Schemas with LucidDB/Other DB'''&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
Sometimes you will want to create a Mondrian schema and begin testing it in MySQL or other database.&lt;br /&gt;
It may make design easier if you specify your default schema/database in both databases.  This way your Mondrian schema will not require the following entries&lt;br /&gt;
&amp;lt;pre&amp;gt; &amp;lt;Table name=&amp;quot;DIM_FACILITY&amp;quot; schema=&amp;quot;TESTING&amp;quot;&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;br&amp;gt;&lt;br /&gt;
You should instead be able to get away with just&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt; &amp;lt;Table name=&amp;quot;DIM_FACILITY&amp;quot;&amp;gt; &amp;lt;/pre&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbDocs</id>
		<title>LucidDbDocs</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbDocs"/>
				<updated>2012-01-05T22:05:53Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: Added FAQ so it appears in the TOC&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;This is the main index page for documentation about the [[LucidDB]] open-source project, a DBMS optimized for business intelligence.  LucidDB is part of [http://www.eigenbase.org The Eigenbase Project].&amp;lt;br&amp;gt;&lt;br /&gt;
[[Image:Lucid db logo PMS 2010.png|400px|right]] __TOC__&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
= LucidDB User Documentation =&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Getting Started ==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''LucidDB Server''' [[Image:AdminUI 11-4-2011 1-07-28 PM.jpg|[[http://pub.eigenbase.org/wiki/DynamoBIAdminUI AdminUI v1.0]]|thumb|200px]]&lt;br /&gt;
* [[LucidDbGettingStarted | Getting Started - An Installation Guide]]&lt;br /&gt;
* [[LucidDbUserFaq | Frequently Asked Questions]]&lt;br /&gt;
* [[DynamoBIAdminUI | LucidDB AdminUI - Web Based Server Management Tool]] &lt;br /&gt;
: A graphical browser-based frontend from DynamoBI specifically built for LucidDB&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''External Software'''[[Image:Squirrel SQL 11-4-2011 1-24-26 PM.jpg|Squirrel SQL client running on Windows 7|thumb|200px]]&lt;br /&gt;
* [[LucidDbSquirrel | Squirrel SQL Client]] &lt;br /&gt;
: A graphical SQL client for accessing many database platforms, including LucidDB&lt;br /&gt;
* [[LucidDbPowerArchitect | Power Architect]]&lt;br /&gt;
: A data modeling tool&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== User Guides ==&lt;br /&gt;
* [[LucidDbUdfHowto | User Defined Functions (UDF) Howto]]&lt;br /&gt;
* [[LucidDbUdfJavaHowto | User Defined Functions (UDF) Java Howto]]&lt;br /&gt;
* [[LucidDbUdxJavaHowto | User Defined Transformation (UDX) Java Howto]]&lt;br /&gt;
* [[LucidDbEtlTutorial | Extract, Transform and Load (ETL) Tutorial]]&lt;br /&gt;
* [[LucidDbOlap| Online Analytical Processing (OLAP)]]&lt;br /&gt;
** [[LucidDbMondrianReplication | Using Pentaho Mondrian Replication]]&lt;br /&gt;
** [[LucidDbAggregateDesigner | Using Pentaho Aggregate Designer for Mondrian]]&lt;br /&gt;
* [[LucidDbConcurrencyControl | Concurrency Control]]&lt;br /&gt;
* [[LucidDbDataStorageAndAccess | Data Storage And Access]]&lt;br /&gt;
* [[LucidDbErrorHandling | Error Handling]]&lt;br /&gt;
* [[LucidDbIndexAccess | Index Access]]&lt;br /&gt;
* [[LucidDbJoinOptimization | Join Optimization]]&lt;br /&gt;
* [[LucidDbJoinImplementation | Join Implementation]]&lt;br /&gt;
* [[LucidDbSlowQueryDiagnosis | Slow Query Diagnosis]]:  Diagnosing slow queries using EXPLAIN PLAN and other tools&lt;br /&gt;
* [[LucidDbSubqueries | Subqueries]]&lt;br /&gt;
* [[LucidDbWarehouseLabels | Warehouse Labels]]&lt;br /&gt;
:  Labels allow users to have read-only query access to a snapshot of the database at an earlier point in time. Snapshots are accessible regardless of  concurrent activities on other connections, like ETL, preparing new data.&lt;br /&gt;
* [[LucidDbQueryExecution | Query Execution]]&lt;br /&gt;
* [[LucidDbServerContainer | Server Container]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Administrator Guides ==&lt;br /&gt;
&lt;br /&gt;
LucidDB is designed to require as little administration as possible, so we hope this section can remain short :)&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbMemoryManagement | Memory Management]]&lt;br /&gt;
** [[LucidDbBufferPoolSizing | Buffer Pool Sizing]] &amp;lt;br&amp;gt;You should also increase the buffer pool sizing to increase the amount of memory that LucidDB uses to &amp;quot;run queries&amp;quot; &amp;lt;br&amp;gt;(the Java adjustments will only increase the catalog/parsing/optimizer memory settings but not the actual execution engine).&lt;br /&gt;
* [[LucidDbSystemProcedures | System Procedures]]&lt;br /&gt;
: Useful for: Backup/Restore, Generating DDL for tables and other objects, managing sessions.&lt;br /&gt;
* [[LucidDbSystemParameters | System Parameters]]&lt;br /&gt;
: Useful information about tweaking: Memory usage, network settings, execution, and storage functionality.&lt;br /&gt;
* [[LucidDbSessionParameters| Session Parameters]]&lt;br /&gt;
* [[LucidDbSystemViews | System Views]]&lt;br /&gt;
: The DBA views defined by LucidDB provide a global picture of the contents of the system catalog (tables, columns, etc) and the volatile state of the system (sessions, cache utilization, etc).&lt;br /&gt;
* [[LucidDbPerformanceTuning | Performance Tuning]]&lt;br /&gt;
** [[LucidDbPerformanceCounters | Performance Counters]]&lt;br /&gt;
** [[LucidDbMonitor | Monitor]] Active monitoring&lt;br /&gt;
* [[LucidDbTracing | Tracing]] Debug Logs in LucidDB&lt;br /&gt;
* [[LucidDbBackupRestore | Performing Backups and Restores]]&lt;br /&gt;
* [[LucidDbUpgrade | How to upgrade to each new release.]]&lt;br /&gt;
* [[LucidDbAsDaemonService | Running LucidDB as a Service / Daemon]]&lt;br /&gt;
* [[LucidDbAsManagedBean | Running LucidDB as a Managed Java Bean]]&lt;br /&gt;
* [[LucidDbMoveCatalog | Moving the LucidDB Database Catalog]]&lt;br /&gt;
* [[LucidDbScriptingLucidUsingBASH | Scripting LucidDB using BASH shell scripts]]&lt;br /&gt;
&lt;br /&gt;
== Function and SQL Language Reference Guides ==&lt;br /&gt;
* [[AppLib]] - Description of the utility function library in LucidDB&lt;br /&gt;
* [[LucidDbDataTypes | Supported Data Types]]&lt;br /&gt;
* [[LucidDbSqlConformance | SQL Standard Conformance]]&lt;br /&gt;
* [[LucidDbSqlReference | SQL Language Reference]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Connectors to External Data Sources (SQL/MED) ([http://farrago.sourceforge.net/design/sqlmed.html Management of External Data])==&lt;br /&gt;
[[Image:Connectors.jpg|thumb|200px|right|See more general information about connectors here [[http://www.dynamobi.com/c/products/luciddb/connectors http://www.dynamobi.com]].]]&lt;br /&gt;
These connectors wrap up external datasources and allow them to present their data as foreign tables inside of LucidDB.  Connectors are an adapters that generally allow normal SQL queries to be run against datasources that may not support the SQL language directly.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbFlatFileWrapper | Flat File Wrapper]] - Connector enabling read-only SQL accesses to text files&lt;br /&gt;
* [[FarragoMedJdbcPlugin | JDBC Data Wrapper]] - Connector enabling presentation of external database tables in LucidDB&lt;br /&gt;
* [[FarragoMedSalesforcePlugin|Salesforce Data Wrapper]] - Connector for presenting Salesforce tables in LucidDB&lt;br /&gt;
* CouchDB connections:&lt;br /&gt;
** Blog: [http://www.nicholasgoodman.com/bt/blog/2011/06/08/sql-access-to-couchdb-views/ SQL access to couchdb views]&lt;br /&gt;
** Blog: [http://www.nicholasgoodman.com/bt/blog/2011/06/22/sql-access-to-couchdb-views-easy-reporting/ SQL access to CouchDB views : Easy Reporting]&lt;br /&gt;
** Forum: Installing the CouchDB connector [http://www.luciddb.org/forums/discussion/comment/1313#Comment_1313]&lt;br /&gt;
** Download the connector from [http://www.dynamobi.com/c/downloads/stable/]&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Benchmark Studies ==&lt;br /&gt;
* [[LucidDbTpch|TPCH Benchmarks]]&lt;br /&gt;
* [[LucidDbSqbm | SQBM]]&lt;br /&gt;
* [[LucidDbOtp| OTP Benchmark using Bureau of Transportation Statistics]], [http://www.mysqlperformanceblog.com/2010/01/07/star-schema-bechmark-infobright-infinidb-and-luciddb SSB Benchmark]&lt;br /&gt;
* [[LucidDbBenchmarkCandidates| Benchmark Candidates]] - Published benchmarks and applications which could serve as good showcases for LucidDB's architecture&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
== Commercial Support ==&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
Quick, reliable service and support is available to you from DynamoBI, the commercial sponsor of LucidDB.&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''DynamoBI Global Headquarters'''[[Image:Dynamobi logo large2.png|right|200px]]&amp;lt;br&amp;gt;&lt;br /&gt;
42nd Floor&amp;lt;br&amp;gt;&lt;br /&gt;
601 Union Street&amp;lt;br&amp;gt;&lt;br /&gt;
Two Union Square&amp;lt;br&amp;gt;&lt;br /&gt;
Seattle, WA 98101 USA&amp;lt;br&amp;gt;&lt;br /&gt;
Tel. +1 888 LucidDB (582-4332)&amp;lt;br&amp;gt;&lt;br /&gt;
Time Zone: PDT&amp;lt;br&amp;gt;&lt;br /&gt;
Business Hours: 8-6 PDT&amp;lt;br&amp;gt;&lt;br /&gt;
[[http://www.dynamobi.com/c/company/contact-us Contact us!]]&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Community Involvement ==&lt;br /&gt;
LucidDB is one of the best databases in the world because of the people, not just the technology.&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Community Support Forum'''&lt;br /&gt;
: Please visit, ask questions and help others &lt;br /&gt;
: [[http://www.luciddb.org/forums/ http://www.luciddb.org/forums/]]&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Chat with us online'''&lt;br /&gt;
: Many LucidDB users hang out on an Internet Relay Chat channel (IRC) called ##luciddb, using Freenode's [http://freenode.net/irc_servers.shtml] servers.&lt;br /&gt;
: We would love to answer your questions and help you get up and going using LucidDB.&lt;br /&gt;
: When you connect to '''chat.us.freenode.net''' or other freenode server near your country, be sure to use the command '''/join ##luciddb''' to actually join the chat channel for LucidDB.&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
:{| {{table}}&lt;br /&gt;
| align=&amp;quot;Left&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Software Name'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Platform'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Download Location'''&lt;br /&gt;
|-&lt;br /&gt;
| qwebirc||Web-based client||http://webchat.freenode.net/&lt;br /&gt;
|-&lt;br /&gt;
| ChatZilla||Firefox Add-on||https://addons.mozilla.org/en-US/firefox/addon/chatzilla/&lt;br /&gt;
|-&lt;br /&gt;
| mIRC||MS Windows||http://www.mirc.com/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||MS Windows||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||Linux||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat Aqua||Mac OS||http://sourceforge.net/projects/xchataqua/&lt;br /&gt;
|-&lt;br /&gt;
| Colloquy||Apple iPad &amp;amp; iPhone||http://colloquy.info/&lt;br /&gt;
|-&lt;br /&gt;
| Android - Internet Relay Chat||Google Android||https://market.android.com/details?id=com.countercultured.irc&amp;amp;hl=en&lt;br /&gt;
|}&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
* '''Bug and Feature Tracking&lt;br /&gt;
: Make a feature request or report a problem you have experienced.&lt;br /&gt;
: [[http://jira.eigenbase.org/secure/Dashboard.jspa http://jira.eigenbase.org/secure/Dashboard.jspa]]&lt;br /&gt;
&lt;br /&gt;
== Presentations / Blogs ==&lt;br /&gt;
* [[Media:PerconaLucidDB.ppt|Percona LucidDB PowerPoint Slides]]&lt;br /&gt;
* [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive]&lt;br /&gt;
: Demonstrates loading data, defining an OLAP cube, and browsing the cube with Pentaho, Jaspersoft, SpagoBI and Saiku which all use Mondrian to drive their OLAP functionality.&lt;br /&gt;
* [http://wiki.pentaho.com/display/COM/January+20,+2010+-+Nick+Goodman+-+LucidDB,+DynamoBI+and+Mondrian Pentaho - January 20, 2010 - Nick Goodman - LucidDB, DynamoBI and Mondrian]&lt;br /&gt;
: Webex Presentation and PDF of slides presenting benefits and features of LucidDB 0.9.3 in conjunction with Pentaho's BI Suite.&lt;br /&gt;
* [http://www.nicholasgoodman.com/bt/blog/2011/06/08/a-different-vision-for-the-value-of-big-data/ A different vision for the value of Big Data]&lt;br /&gt;
: DynamoBI (Commercial Sponsor of LucidDB) - CEO Nick Goodman - shares vision about how LucidDB forms an information hub from which many different data sources can be presented and queried through normal SQL.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Tutorial Videos and Screencasts ==&lt;br /&gt;
&lt;br /&gt;
* [http://www.dynamobi.com/c/support/tutorial-videos/ DynamoBI - Getting started online videos.]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/installation.swf Installing LucidDB]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/sqllineclient.swf Connecting to LucidDB and using the Command Line Interface, sqllineClient]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/stopping_server.swf Stopping the server, with and without users connected]&lt;br /&gt;
* [http://youtu.be/sSYsVoVrp24 Installing and Loading LucidDB backed sample OLAP]&lt;br /&gt;
** Video from this blog: [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive] - By Slawomir Chodnicki, on March 12th, 2011&lt;br /&gt;
* [http://youtu.be/ZnY223u6q_Y Installing and running LucidDB as a daemon in Linux using a Java Service Wrapper]&lt;br /&gt;
: This is an approach that may also work well on Windows.  There is another approach, which is shorter and easier using the BASH shell under Linux. Documentation for both approaches can be found at [[LucidDbAsDaemonService]].&lt;br /&gt;
* Moving tables from one database to LucidDB&lt;br /&gt;
:[http://pub.eigenbase.org/wiki/LucidDbUpgrade#Downloads_-_Using_Pentaho_Data_Integration_to_generate_a_SQL_script_for_moving_tables Using Pentaho Data Integration to generate SQL for moving tables from an external database to LucidDB]&lt;br /&gt;
: This link is actually to a document about upgrading version to version of LucidDB, but because a PDI transformation file is used to generate SQL for the transition, the process can be generalized as moving from an external database to LucidDB with only minor modifications to the transformation.&lt;br /&gt;
&lt;br /&gt;
== Experimental ==&lt;br /&gt;
&lt;br /&gt;
*[http://kettle.pentaho.com/ Pentaho Data Integration (PDI)] - Bulk Loading Plugins&lt;br /&gt;
** [[LucidDbPDIStreamingLoader| Streaming Loader Step]] - Bulk load data the easy way. '''[RECOMMENDED]''' &lt;br /&gt;
**  [[LucidDbPdiBulkLoad | Bulk Load Step]] - '''[DEPRECATED after LucidDB 0.9.3]'''&lt;br /&gt;
**  [[LucidDbStreamingLoad |Streaming Loader]] : A good example for building bulk loaders from non-Java tools. '''[INFORMATIONAL]'''&lt;br /&gt;
* [[LucidDbHorizontalPartitioning | Horizontal Partitioning]]&lt;br /&gt;
: LucidDB does not currently support DDL for automatic [http://en.wikipedia.org/wiki/Partition_%28database%29 horizontal partitioning] of tables.  Although LucidDB's column-store architecture implements automatic vertical partitioning, horizontal partitioning is still a useful technique for scaling up to very large data volumes, so this page describes some manual approaches which can be used for very simple schemas.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbNonJavaClients | Using Non-Java Clients with LucidDB]]&lt;br /&gt;
: The main client API for LucidDB is JDBC.  This page discusses some options for overcoming the obstacle of developing an application in a language other than Java.&lt;br /&gt;
* [[LucidDbSqlDiffTesting | SQL Diff Testing]]&lt;br /&gt;
: Description of how to make use of some of the diff-based testing frameworks built into LucidDB for the purpose of test-driven ETL script development.&lt;br /&gt;
* [[LucidDbHive | Hive]]&lt;br /&gt;
: Walk-through document showing how to combine LucidDB with [http://hadoop.apache.org/hive/ Apache Hadoop's Hive].&lt;br /&gt;
&lt;br /&gt;
== Frequently Asked Questions ==&lt;br /&gt;
[[LucidDbUserFaq | Frequently Asked Questions]]&lt;br /&gt;
&lt;br /&gt;
= LucidDB Developer Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbBuildFromSourceDistribution | Building LucidDB from source code]]&lt;br /&gt;
* [[LucidDbBuildFromPerforce | Building LucidDB from Perforce (version control software, VCS)]]&lt;br /&gt;
* [[Main_Page#Collaboration | Main Developer Collaboration Section ]]&lt;br /&gt;
* [[DesignMeetings | Design Meetings - Feature Ideas and Roadmaps]]&lt;br /&gt;
&lt;br /&gt;
= LucidDB Design Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbEfficientUpdates | Efficient Updates]]&lt;br /&gt;
* [[LucidDbCommonRelationalSubExpressionMaterialization | Common Relational Sub-Expression Materialization]]&lt;br /&gt;
&lt;br /&gt;
= Trademark Notice =&lt;br /&gt;
&lt;br /&gt;
&amp;lt;sub&amp;gt;LucidDB and the LucidDB logo are trademarks of DynamoBI Corporation.&amp;lt;/sub&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbUserFaq</id>
		<title>LucidDbUserFaq</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbUserFaq"/>
				<updated>2012-01-03T19:14:05Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: Added information about which JDBC driver to use.&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;= FAQ List =&lt;br /&gt;
&lt;br /&gt;
This page is the FAQ list for LucidDB users.  For questions about the project, see [http://www.luciddb.org/projectFaq.html the project FAQ on the website].&lt;br /&gt;
&lt;br /&gt;
== Startup Error for libgcj ==&lt;br /&gt;
&lt;br /&gt;
'''Question'''&lt;br /&gt;
&lt;br /&gt;
I got an error about initializeClass on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Exception in thread &amp;quot;main&amp;quot; java.lang.NoClassDefFoundError: &lt;br /&gt;
net.sf.farrago.db.FarragoDatabase&lt;br /&gt;
    at java.lang.Class.initializeClass(libgcj.so.90)&lt;br /&gt;
    at &lt;br /&gt;
net.sf.farrago.db.FarragoDbSingleton.pinReference(FarragoDbSingleton.java:100)&lt;br /&gt;
    at &lt;br /&gt;
net.sf.farrago.server.FarragoAbstractServer.start(FarragoAbstractServer.java:232)&lt;br /&gt;
    at com.lucidera.farrago.LucidDbServer.main(LucidDbServer.java:61)&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
The GCJ virtual machine (packaged by default with many Linux distributions) is not sufficient for use with LucidDB.  Instead, please install a [http://java.sun.com/javase/downloads/index.jsp Sun Java JVM], set your JAVA_HOME to the Sun JRE, then do a fresh unzip/install.&lt;br /&gt;
&lt;br /&gt;
== Startup Error for xlib xcb ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I got an error similar to one of the ones below on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
java: xcb_xlib.c:50: xcb_xlib_unlock: Assertion `c-&amp;gt;xlib.lock' failed.&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Locking assertion failure. Backtrace:&lt;br /&gt;
#0 /usr/lib/libxcb-xlib.so.0 [0xb7361767]&lt;br /&gt;
#1 /usr/lib/libxcb-xlib.so.0(xcb_xlib_unlock+0x31) [0xb73618b1]&lt;br /&gt;
#2 /usr/lib/libX11.so.6(_XReply+0xfd) [0x99e591bd]&lt;br /&gt;
#3 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so [0x9b539dce]&lt;br /&gt;
#4 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so [0x9b523d77]&lt;br /&gt;
#5 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so [0x9b523ef3]&lt;br /&gt;
#6 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so(Java_sun_awt_X11GraphicsEnvironment_initDisplay+0x26) [0x9b524136] &lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
The easiest way is to edit the '''bin/lucidDbServer''' startup script and add '''-Dorg.eigenbase.util.AWT_WORKAROUND=off''' to the Java command line.  (This will be done as part of the out-of-the-box packaging in the next release since this seems to be a common problem.)&lt;br /&gt;
&lt;br /&gt;
See [http://sourceforge.net/mailarchive/message.php?msg_id=613385.33648.qm%40web30806.mail.mud.yahoo.com this mailing list thread] for more discussion.&lt;br /&gt;
&lt;br /&gt;
== Startup Error For libaio ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I got the error below on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Loading database...&lt;br /&gt;
Exception in thread &amp;quot;main&amp;quot; org.eigenbase.util.EigenbaseException: Failed to load database&lt;br /&gt;
    at net.sf.farrago.resource.FarragoResource$_Def1.ex(FarragoResource.java:1789)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDatabase.&amp;lt;init&amp;gt;(FarragoDatabase.java:269)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDbSingleton.pinReference(FarragoDbSingleton.java:89)&lt;br /&gt;
    at net.sf.farrago.server.FarragoAbstractServer.start(FarragoAbstractServer.java:183)&lt;br /&gt;
    at com.lucidera.farrago.LucidDbServer.main(LucidDbServer.java:61)&lt;br /&gt;
Caused by: org.eigenbase.util.EigenbaseException: FennelResource.en_US.libaioRequired()&lt;br /&gt;
    at net.sf.farrago.resource.FarragoResource$_Def0.ex(FarragoResource.java:1766)&lt;br /&gt;
    at net.sf.farrago.fennel.FennelDbHandle.handleNativeException(FennelDbHandle.java:315)&lt;br /&gt;
    at net.sf.farrago.fennel.FennelDbHandle.executeCmd(FennelDbHandle.java:242)&lt;br /&gt;
    at net.sf.farrago.fennel.FennelDbHandle.&amp;lt;init&amp;gt;(FennelDbHandle.java:90)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDatabase.loadFennel(FarragoDatabase.java:509)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDatabase.&amp;lt;init&amp;gt;(FarragoDatabase.java:189)&lt;br /&gt;
    ... 3 more&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
On a Debian-based system such as Ubuntu:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
apt-get install libaio1&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
(on older versions it may be libaio instead of libaio1)&lt;br /&gt;
&lt;br /&gt;
On A RedHat-based system:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
yum install libaio1&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
After that, you should be able to start the server.  If you keep the default setting of aioLinux, you'll want to increase LucidDB's buffer pool size, and also preallocate data files, as mentioned in [[LucidDbPerformanceTuning#I.2FO_Scheduler]].&lt;br /&gt;
&lt;br /&gt;
== Startup Error For mmap ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I got the error below on startup, or when trying to increase the [[LucidDbBufferPoolSizing|buffer pool size]].  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Error: System call failed:  mmap failed: Cannot allocate memory (state=,code=0)&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
Assuming you actually have sufficient physical memory, and are using a 64-bit build if trying to allocate a large buffer pool, check these:&lt;br /&gt;
&lt;br /&gt;
# Make sure '''ulimit -v''' returns the string &amp;quot;unlimited&amp;quot;.  Setting a quota on virtual memory size can cause the error above.&lt;br /&gt;
# Make sure you aren't accidentally using a [[#Debug Builds|debug build]].  Debug builds use '''mprotect''' to guard against buffer overruns, and this eats up a lot of additional memory and OS page table space.&lt;br /&gt;
&lt;br /&gt;
== Startup Error For Windows ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I got an error trying to load the native code DLL's on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
Make sure you have installed the [http://www.microsoft.com/downloads/details.aspx?FamilyID=9b2da534-3e03-4391-8a4d-074b9f2bc1bf&amp;amp;displaylang=en Visual C++ 2008 Redistributable Package].&lt;br /&gt;
&lt;br /&gt;
== Client Connectivity Problems ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I can't get sqllineClient, Squirrel, and other clients to talk to the LucidDB server.  What's wrong?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
You may need to follow the instructions in [[ClientServerLocalhost]] to fix '''/etc/hosts'''.&lt;br /&gt;
&lt;br /&gt;
== Loading Large Data Files ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I have a large data file in txt format. I need to bulk load it into Lucid tables. What's the best way to do this?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
Create a flat file foreign table corresponding to your flat file, and then use an INSERT-SELECT statement to load from the flat file table to your target table.&lt;br /&gt;
&lt;br /&gt;
See [[LucidDbFlatFileWrapper]] for details.&lt;br /&gt;
&lt;br /&gt;
[[LucidDbEtlTutorial#Define_Sources]] also has an example that shows you how to create a flatfile foreign data wrapper, import it, and then access tables within the imported foreign schema.&lt;br /&gt;
&lt;br /&gt;
== ETL Tutorial ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
In attempting to follow the ETL Tutorial I got an error because directory examples/etl/filedata/ does not exist.  What should I do?&lt;br /&gt;
&lt;br /&gt;
'''Answer'''&lt;br /&gt;
&lt;br /&gt;
Make sure you followed the instructions to start the server like this:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
bin/lucidDbServer&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
The tutorial relies on this for the relative paths to come out right.  Otherwise, you need to edit the scripts so that they supply absolute paths.&lt;br /&gt;
&lt;br /&gt;
== Case-Sensitive Foreign Schema Name ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to import a foreign schema from a server like PostgreSQL with case-sensitive identifiers, and I'm not getting any tables back.  How come?&lt;br /&gt;
&lt;br /&gt;
'''Answer'''&lt;br /&gt;
&lt;br /&gt;
Make sure you quote the foreign schema name in the IMPORT FOREIGN SCHEMA command:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
import foreign schema &amp;quot;public&amp;quot;&lt;br /&gt;
from server postgres_abc&lt;br /&gt;
into ldb_schema &lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Likewise for [http://sourceforge.net/mailarchive/forum.php?thread_name=4891317F.3040406%40gmail.com&amp;amp;forum_name=luciddb-users foreign tables].&lt;br /&gt;
&lt;br /&gt;
== Default Port ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
What is the default listening port number for LucidDB?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
By default, LucidDB listens for HTTP connections on port 8034.  If you want to specify it explicitly from the client side, use a URL like &lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
jdbc:luciddb:http://1.2.3.4:8034&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
You can change a server's port number by setting system parameter '''serverHttpPort'''; see [[LucidDbSystemParameters]] for more information.&lt;br /&gt;
&lt;br /&gt;
== JDBC Driver Class ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to connect to LucidDB from my own program, but I always get an exception like java.lang.ClassNotFoundException: org.luciddb.jdbc.LucidDbClientDriver.  What should I do to fix it?&lt;br /&gt;
&lt;br /&gt;
'''Answer''':&lt;br /&gt;
&lt;br /&gt;
Make sure you have '''luciddb/plugin/LucidDbClient.jar''' on your program's classpath.&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to use LucidDbLocalDriver to access the server from a client program running on the same (local) machine, but it doesn't work.  Why not?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
The &amp;quot;local&amp;quot; driver is local only in the sense &amp;quot;in the same java process&amp;quot;, not in the sense &amp;quot;on the same machine&amp;quot;, so you'll need to  &lt;br /&gt;
use the HTTP driver.  Use driver class '''org.luciddb.jdbc.LucidDbClientDriver''' unless the client and server are actually running in the same JVM.&lt;br /&gt;
&lt;br /&gt;
== JDBC Driver Jar files ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
In luciddb-0.9.4/plugin there are two files, '''LucidDbClient.jar and LucidDbClient-minimal.jar''' that look like they could be used by applications to connect to LucidDB.  Which should I use?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
Only applications that already have corresponding libraries (log4j/etc) like PDI/etc should use LucidDbClient-minimal.jar.  Pentaho Data Integration is an example of such an application.  The Pentaho BI Server itself can also use the LucidDbClient-minimal.jar.&lt;br /&gt;
&lt;br /&gt;
Squirrel SQL client and most other applications will use the LucidDbClient.jar&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Slow INSERT performance ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to INSERT lots of rows using the INSERT command, but the performance is terrible!  What can I do to improve the performance?&lt;br /&gt;
&lt;br /&gt;
'''Answer''':&lt;br /&gt;
&lt;br /&gt;
There are inherent issues with single row INSERTs in a column store database.  Bulk INSERTs or UPDATEs are best accomplished (with orders of magnitude increases in performance) via a bulk loading method (see [[LucidDbEtlTutorial]] for an example).&lt;br /&gt;
&lt;br /&gt;
== Missing Columns ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I created a wide table, and some of the columns seem to have gone AWOL.  What gives?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
If you're using sqlline, see this [http://sourceforge.net/mailarchive/forum.php?thread_name=221131.98865.qm%40web51307.mail.re2.yahoo.com&amp;amp;forum_name=luciddb-users mailing list thread].&lt;br /&gt;
&lt;br /&gt;
== Running As A Service Or Daemon ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
How do I run LucidDB as a service on Windows or a daemon on Unix?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
See [[LucidDbAsDaemonService]].&lt;br /&gt;
&lt;br /&gt;
== J2EE Embedding ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
How do I run LucidDB inside of a J2EE app server?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
See [[LucidDbAsManagedBean]].&lt;br /&gt;
&lt;br /&gt;
== Catalog File Locking ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I got an exception about &amp;quot;Failed to lock catalog file&amp;quot; on server startup; what does this mean?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
It means you already have a server process running from the same installation, and only one can be running at a time.  See this [http://sourceforge.net/mailarchive/forum.php?thread_name=381602.46904.qm%40web51306.mail.re2.yahoo.com&amp;amp;forum_name=luciddb-users mailing list thread].  For information on how to start LucidDB on a remote server, see [http://sourceforge.net/mailarchive/forum.php?thread_name=4890A61F.3050505%40gmail.com&amp;amp;forum_name=luciddb-users this thread].&lt;br /&gt;
&lt;br /&gt;
== Debug Builds ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I built LucidDB [[LucidDbBuildFromSourceDistribution|from source]] and now it's really slow.  How come?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
By default, '''initBuild.sh''' produces an unoptimized debug build, which is an order of magnitude slower than release builds.  Be sure to specify the '''--with-optimization --without-debug''' flags to match the release configuration, unless you're actually planning to hack on LucidDB native code and use gdb.&lt;br /&gt;
&lt;br /&gt;
== Beyond Java ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
Can I use LucidDB in a non-Java application?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
[[LucidDbNonJavaClients|Maybe]].&lt;br /&gt;
&lt;br /&gt;
== Compression Statistics ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
How can I tell how well compression is working?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
It can be difficult to determine this from the size of '''db.dat''', since not all of the pages may be currently in use.&lt;br /&gt;
&lt;br /&gt;
To find out how many pages are currently in use across all tables, across all page versions, execute this:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
alter system deallocate old;&lt;br /&gt;
select counter_value from sys_root.dba_performance_counters where counter_name='DatabasePagesAllocated';&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Multiply the result by 32KB (the size of one page).&lt;br /&gt;
&lt;br /&gt;
To study compression effectiveness for a particular table, execute this:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
alter system deallocate old;&lt;br /&gt;
analyze table t estimate statistics for all columns;&lt;br /&gt;
select index_name, pages from sys_boot.mgmt.page_counts_view where table_schem='YOUR_SCHEMA_NAME' and table_name='YOUR_TABLE_NAME';&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Indexes with names starting with &amp;quot;SYS$CLUSTERED&amp;quot; represent the compressed column storage.  Every table has a single &amp;quot;SYS$DELETION_INDEX&amp;quot; which tracks deleted rows.  A table may have SYS$ indexes corresponding to PRIMARY KEY and UNIQUE constraint defintions.  Any other indexes are named indexes you have created.&lt;br /&gt;
&lt;br /&gt;
== OpenSUSE Performance ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
Why is LucidDB so slow for short queries on OpenSUSE?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
See the discussion on the ext3 barrier setting in [http://n2.nabble.com/Row-has-too-many-columns-td2789557.html this thread], which contains a workaround.&lt;br /&gt;
&lt;br /&gt;
== Identifier Quoting - Dealing with mixed case Schema, Table and Column names ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
Why are the rules for this so confusing?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
LucidDB strictly adheres to SQL:2003 in this regard.  When you don't quote identifiers, they are implicitly uppercased as part of parsing (e.g. yoUr_table becomes YOUR_TABLE).  When you quote them, case is preserved (e.g. &amp;quot;yoUr_table&amp;quot; stays exactly like that).  You must quote them if they are reserved words or contain special characters.  For compound identifiers, the quotes go around each component, e.g. &amp;quot;yoUr_schema&amp;quot;.&amp;quot;yoUr_table&amp;quot; not &amp;quot;yoUr_schema.yoUr_table&amp;quot;).&lt;br /&gt;
&lt;br /&gt;
One point of confusion arises from the SET SCHEMA command.  The actual syntax is '''SET SCHEMA &amp;lt;character-expression&amp;gt;''', not '''SET SCHEMA &amp;lt;identifier&amp;gt;'''.  So, you have to write&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA '&amp;quot;yoUr_schema&amp;quot;'&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
not&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA &amp;quot;yoUr_schema&amp;quot;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
If you have a schema named EXTRACTION_SCHEMA (all upper case), this works:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA 'extraction_schema'&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
The reason this works is that the single quotes are delimiting the character literal (not the identifier).  The parsing for this expression first evaluates the character expression, then interprets the result as a (possibly-quoted) identifier.  This allows you to do things like&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA 'SCHEMA_FOR_' || CURRENT_USER&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
So if user FRANCISCO logs in, he'll get SCHEMA_FOR_FRANCISCO set as default after executing the expression above.&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''Normal SQL Queries with mixed case table or column names'''&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
When you use normal '''SELECT''' style queries you can expect to use double quotes to work around case issues.&lt;br /&gt;
Example:&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
select &amp;quot;tableOne&amp;quot;.&amp;quot;myColumn&amp;quot; from &amp;quot;SchemaName&amp;quot;.&amp;quot;tableOne&amp;quot;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''Function Calls with mixed case table or column names'''&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
Look at how the parameter itself is in single quotes, the column name is in double quotes.&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
create_table_as ('select &amp;quot;myCol&amp;quot; from &amp;quot;myTable&amp;quot;', '&amp;quot;TARGETtable&amp;quot;')&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== What is the difference between sqllineClient and sqllineEngine? ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
What is the difference between sqllineClient and sqllineEngine?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''sqllineEngine''' is LucidDB without the client/server part.&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
There are two typs of JDBC services&amp;lt;br&amp;gt;&lt;br /&gt;
Engine and vJDBC&amp;lt;br&amp;gt;&lt;br /&gt;
Engine allows something else in Java machine (ie, sqllineEngine) to connect&amp;lt;br&amp;gt;&lt;br /&gt;
JDBC starts listening on port 8034 to allow remote JDBC to connect&amp;lt;br&amp;gt;&lt;br /&gt;
sqllineEngine starts Engine&amp;lt;br&amp;gt;&lt;br /&gt;
lucidDbServer starts vJDBC&amp;lt;br&amp;gt;&lt;br /&gt;
sqllineClient connects to lucidDbServer via vJDBC&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''sqllineClient''' is a SQL client.&amp;lt;br&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/FarragoMedJdbcPlugin</id>
		<title>FarragoMedJdbcPlugin</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/FarragoMedJdbcPlugin"/>
				<updated>2011-12-16T22:27:22Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* MySQL */&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;= Farrago SQL/MED Plugin for JDBC =&lt;br /&gt;
&lt;br /&gt;
Farrago provides a plugin implementing [http://farrago.sourceforge.net/design/sqlmed.html SQL/MED access] to any foreign DBMS for which a JDBC driver is available.  &lt;br /&gt;
&lt;br /&gt;
Farrago supports the SQL standard three-level qualifier scheme for the names of tables: &amp;lt;tt&amp;gt;catalog.schema.table&amp;lt;/tt&amp;gt;.  When using the SQL/MED plugin for JDBC to make foreign data namespaces accessible from Farrago SQL queries, it is important to keep a number of points in mind:&lt;br /&gt;
&lt;br /&gt;
* Different JDBC drivers support different qualifier schemes.  Some support catalogs and schemas; others only support schemas; and still others support neither catalogs nor schemas.  Default values may or may not be in effect depending on the server connection URL.  For this reason, the user must be careful when defining the foreign server in Farrago to get the desired mapping.&lt;br /&gt;
* When referencing foreign tables directly via a virtual catalog (without importing their metadata into a local schema), use the foreign schema and table name.  In this case, the catalog name will be the name given the foreign server via CREATE SERVER.&lt;br /&gt;
* When referencing foreign table via locally defined or imported metadata, use the local schema and table name.  In this case, the catalog name will be LOCALDB.&lt;br /&gt;
&lt;br /&gt;
== JDBC Foreign Data Wrapper Definition ==&lt;br /&gt;
&lt;br /&gt;
Because this plugin is included as part of the standard Farrago distribution, a corresponding foreign data wrapper instance named &amp;lt;tt&amp;gt;SYS_JDBC&amp;lt;/tt&amp;gt; is predefined by Farrago's initialization scripts.  Normally, there is no need to define additional instances.&lt;br /&gt;
&lt;br /&gt;
However, it may be useful to define additional wrapper instances corresponding to specific DBMS types.  For the JDBC plugin, all SQL/MED options declared on the wrapper are propagated to the server, allowing common option settings to be factored out of individual server definitions.  (Note that this is not necessarily true for other plugins.)  Option settings on a server always take precedence over settings inherited from a wrapper.&lt;br /&gt;
&lt;br /&gt;
== JDBC Foreign Server Definition ==&lt;br /&gt;
&lt;br /&gt;
In order to access a particular JDBC data source, a corresponding foreign server must be defined.  The following server-level options can be specified:&lt;br /&gt;
&lt;br /&gt;
{| border=&amp;quot;1&amp;quot; cellspacing=&amp;quot;0&amp;quot; cellpadding=&amp;quot;2&amp;quot;&lt;br /&gt;
! Name&lt;br /&gt;
! Description&lt;br /&gt;
|- &lt;br /&gt;
| JNDI_NAME&lt;br /&gt;
| Name of the JNDI resource that contains a &amp;lt;tt&amp;gt;javax.sql.DataSource&amp;lt;/tt&amp;gt; suitable for use with the SQL/MED JDBC foreign data wrapper.  The DataSource '''must not''' block when connections are requested.  This option is mutually exclusive with the existing &amp;lt;tt&amp;gt;DRIVER_CLASS&amp;lt;/tt&amp;gt;, &amp;lt;tt&amp;gt;URL&amp;lt;/tt&amp;gt;, &amp;lt;tt&amp;gt;USER_NAME&amp;lt;/tt&amp;gt;, &amp;lt;tt&amp;gt;PASSWORD&amp;lt;/tt&amp;gt;, and &amp;lt;tt&amp;gt;EXTENDED_OPTIONS&amp;lt;/tt&amp;gt; parameters.  The following parameters are ignored if &amp;lt;tt&amp;gt;JNDI_NAME&amp;lt;/tt&amp;gt; is specified: &amp;lt;tt&amp;gt;LOGIN_TIMEOUT&amp;lt;/tt&amp;gt;, &amp;lt;tt&amp;gt;VALIDATION_QUERY&amp;lt;/tt&amp;gt;.  No default value.&lt;br /&gt;
|-&lt;br /&gt;
| DRIVER_CLASS&lt;br /&gt;
| Fully qualified name of the JDBC driver class to load; this must be available on the classpath.  Currently this requires either changing the classpath used to invoke Farrago, or rolling the JDBC driver classes into a new plugin jar combined with the default Farrago plugin contents. (We plan to eventually support the SQL:2003 jar dependencies feature to eliminate this repackaging burden.)&lt;br /&gt;
|-&lt;br /&gt;
| URL&lt;br /&gt;
| JDBC URL specifying the data source to access&lt;br /&gt;
|-&lt;br /&gt;
| USER_NAME&lt;br /&gt;
| User name for login to foreign server&lt;br /&gt;
|-&lt;br /&gt;
| PASSWORD&lt;br /&gt;
| Password for login to foreign server&lt;br /&gt;
|-&lt;br /&gt;
| USE_SCHEMA_NAME_AS_FOREIGN_QUALIFIER &lt;br /&gt;
| If set to 'TRUE', then for tables without a table-level SCHEMA_NAME specified, the server-level SCHEMA_NAME is used. The default is 'FALSE'.&lt;br /&gt;
|-&lt;br /&gt;
| SCHEMA_NAME &lt;br /&gt;
| If USE_SCHEMA_NAME_AS_FOREIGN_QUALIFIER is set to 'FALSE': &amp;lt;br /&amp;gt; Artificial foreign schema name.  This option is only required for servers which don't support schemas.  When specified, the plugin will accept this schema name as a foreign qualifier when importing foreign tables or accessing them directly, but will omit all schema references when sending SQL to the foreign server.  For servers that support schemas, this option should never be specified; reference the real foreign schema names instead. &amp;lt;br /&amp;gt;If USE_SCHEMA_NAME_AS_FOREIGN_QUALIFIER is set to 'TRUE': &amp;lt;br /&amp;gt;Server must support schemas. This SCHEMA_NAME will be used if the table-level SCHEMA_NAME is not set.&lt;br /&gt;
|-&lt;br /&gt;
| SCHEMA_MAPPING&lt;br /&gt;
| Semicolon-separated list of schema_name:mapped_schema_name pairs.  This option is only valid for servers which support schemas.  This allows for a single schema view of tables spanning multiple schemas. If set, TABLE_MAPPING and TABLE_PREFIX_MAPPING must not be set. A schema or table name may be quoted by the double quote character.  The double quote character can be used in a name, if escaped by itself (the double quote character). A single quote character can be used, if escaped by itself (the single quote character).&lt;br /&gt;
|-&lt;br /&gt;
| TABLE_MAPPING&lt;br /&gt;
| Semicolon-separated list of source_schema.source_table:mapped_schema.mapped_table pairs. This option is only valid for servers which support schemas.  This allows for a single schema view of the specified tables spanning multiple schemas. If set, SCHEMA_MAPPING and TABLE_PREFIX_MAPPING must not be set.  A schema or table name may be quoted by the double quote character.  The double quote character can be used in a name, if escaped by itself (the double quote character). A single quote character can be used, if escaped by itself (the single quote character). &lt;br /&gt;
|-&lt;br /&gt;
| TABLE_PREFIX_MAPPING&lt;br /&gt;
| Semicolon-separated list of source_schema.source_table_prefix:mapped_schema.mapped_table_prefix pairs. This allows multiple source tables, with a common prefix, to be mapped into a specific target schema with a different prefix. If set, SCHEMA_MAPPING and TABLE_MAPPING must not be set. If artificial foreign schema names are in use, the source schema name is ignored. A schema or table name may be quoted by the double quote character. The double quote character can be used in a name, if escaped by itself (the double quote character). A single quote character can be used, if escaped by itself (the single quote character). If the last character of either the source or target table prefix is a percent sign (%), it is interpreted as a wild card and stripped off. This allows a prefix to be appended to or removed from all tables (e.g., mapping definitions like 'SRC_SCHEMA.%:TGT_SCHEMA.PREFIX_%' or 'SRC_SCHEMA.PREFIX_%:TGT_SCHEMA.%'). As a consequence, if a prefix ends in % it must be doubled.&lt;br /&gt;
|-&lt;br /&gt;
| QUALIFYING_CATALOG_NAME &lt;br /&gt;
| Foreign catalog name to which this server should correspond.  This option should only be used for servers which support multiple catalogs.  Normally, a default catalog is always defined for a connection, so this option isn't usually required.  To access multiple catalogs from the same physical server, create multiple logical servers, each with a different value for this option.&lt;br /&gt;
|-&lt;br /&gt;
| TABLE_TYPES&lt;br /&gt;
| Comma-separated list of table types used to restrict metadata results for operations such as IMPORT FOREIGN SCHEMA.  For example, some servers mix system tables into the same schema with user tables and views.  To hide them, specify a value like 'TABLE,VIEW' for this option.  To retrieve only tables and system tables, but no views, use 'TABLE,SYSTEM TABLE'.  In general, table type names may vary across JDBC drivers, so check your driver's documentation or call your driver's DatabaseMetaData.getTableTypes() method to list the available types.  This option is never required; if not specified, metadata for all table types is returned.  No spaces are allowed in the list unless they make up part of the type name, e.g. 'SYSTEM TABLE'.&lt;br /&gt;
|-&lt;br /&gt;
| EXTENDED_OPTIONS&lt;br /&gt;
| If set to 'TRUE', unrecognized options are passed through to the JDBC driver as properties; otherwise, they are ignored.  The default is 'FALSE'.&lt;br /&gt;
|-&lt;br /&gt;
| TYPE_SUBSTITUTION&lt;br /&gt;
| If set to 'TRUE' (the default), datatypes which are not supported by Farrago are replaced with the best available substitute.  If set to 'FALSE', unsupported datatypes result in errors.  Note that any TYPE_MAPPING specified is executed before TYPE_SUBSTITUTION is run.&lt;br /&gt;
|-&lt;br /&gt;
| TYPE_MAPPING&lt;br /&gt;
| Semicolon-separated list of orig_datatype:subst_datatype pairs.  If set, Farrago will replace the type of foreign columns matching orig_datatype with the corresponding subst_datatype.  The format for both datatype strings is DATATYPE_NAME[(PRECISION[,SCALE])] with no spaces allowed.  On orig_datatype, precision and scale (if specified) are used to more precisely limit the matching datatype.  In other words, &amp;quot;DECIMAL&amp;quot; will match any decimal type, but &amp;quot;DECIMAL(10,2)&amp;quot; will only match that specific precision and scale.  If precision and scale are not specified on subst_datatype, the original precision and scale are kept.  If the 'subst_datatype' is not a supported Farrago datatype, the mapping is ignored.  Note that TYPE_MAPPING is run before TYPE_SUBSTITUTION and does not depend on TYPE_SUBSTITUTION.&lt;br /&gt;
|-&lt;br /&gt;
| LENIENT&lt;br /&gt;
| If set to 'TRUE', match target columns specified in the foreign table definition with data source columns using case-sensitive string comparison on column name.  Specified target columns which are missing in the source are filled in with null. Likewise, specified target columns with types that are cast-incompatible from matching source columns are filled in with null.  Other matching columns are cast to the target type (either the type specified explicitly, or the type stored in the catalog when the foreign table descriptor is created with implicit column types).  The default is 'FALSE', meaning columns are mapped by position rather than name, and mismatches in the mapping may lead to runtime errors. &amp;lt;p&amp;gt;Lenience makes the foreign table definition resilient to changes in the data source; strictness ensures that data is not accidentally lost or fabricated due to a mismapping.&lt;br /&gt;
|-&lt;br /&gt;
| SKIP_TYPE_CHECK&lt;br /&gt;
| If set to 'TRUE', assume target columns specified in the foreign table definition are compatible with data source columns in name, type and number.  The default is 'FALSE'.  This setting is ignored when LENIENT is 'TRUE'.  The purpose of this setting is to make it possible to skip metadata checks (possibly expensive depending on source DBMS) when referencing the foreign table (or even when defining it if column types are explicitly specified or imported).  The downside is that if the source is actually incompatible with the local catalog definition, then errors will not be detected until query execution, and diagnostics may be poor as a result.  ''Not available in versions before v0.9.2''&lt;br /&gt;
|-&lt;br /&gt;
| LOGIN_TIMEOUT&lt;br /&gt;
| The maximum time in seconds to wait while attempting to connect to foreign server.  Ignored if &amp;lt;tt&amp;gt;JNDI_NAME&amp;lt;/tt&amp;gt; is set.&lt;br /&gt;
|-&lt;br /&gt;
| VALIDATION_QUERY&lt;br /&gt;
| The SQL query to use to validate connections in the JDBC wrapper cache. If not specified, no connection validation will be done.  If specified, must be a query (in a dialect understood by the foreign JDBC driver being used) which will return at least one row without error.  Ignored if &amp;lt;tt&amp;gt;JNDI_NAME&amp;lt;/tt&amp;gt; is set.&lt;br /&gt;
|-&lt;br /&gt;
| DISABLED_PUSHDOWN_REL_PATTERN&lt;br /&gt;
| A regular expression matching the names of rules or logical relational expressions for which pushdown to data source should be disabled.  To enable all pushdown, the value can be left as empty string (the default).  To disable all pushdown, the value can be set to a match-anything regular expression ('.*').  To disable a particular expression, the value can be set to the corresponding optimizer RelNode class name, e.g. 'FilterRel', or internal rule description, e.g. '.*on proj'.&lt;br /&gt;
|-&lt;br /&gt;
| ASSUME_PUSHDOWN_VALID&lt;br /&gt;
| A boolean (true/false) expression that controls whether the Wrapper will check the pushdown SQL prior to executing it.  Setting it to true will execute the SQL without first preparing and checking the SQL is valid (vie PreparedStatement.getMetadata()).  Setting it to false (the default) will check the SQL first, including some very unnatural Oracle hacks since their thin driver does not support ps.getMetadata().  In general, this should be set to false, but if your JDBC driver lacks ps.getMetadata() this might be necessary, e.g. Oracle.&lt;br /&gt;
|-&lt;br /&gt;
| FETCH_SIZE&lt;br /&gt;
| An integer fetch size to set on cursors via Statement.setFetchSize.  Default is -1 (don't call setFetchSize at all).&lt;br /&gt;
|-&lt;br /&gt;
| AUTOCOMMIT&lt;br /&gt;
| If set to 'TRUE' (the default), leave connection in autocommit mode. Otherwise, request transaction mode.  For read-only usage, this normally doesn't matter, since the wrapper closes cursors as soon as it is done with them, but some JDBC drivers are sensitive (e.g. the PostgreSQL driver, which requires an explicit FETCH_SIZE and non-autocommit to avoid exhausting memory for large result sets).&lt;br /&gt;
|-&lt;br /&gt;
| MAX_IDLE_CONNECTIONS&lt;br /&gt;
| When creating a connection pool implicitly (e.g. JNDI_NAME is not set), this many connections are kept open.  If a connection is returned to the pool and this many idle connections are already in the pool, the newly returned connection is immediately closed.  Each &amp;lt;tt&amp;gt;MedJdbcDataServer&amp;lt;/tt&amp;gt; instance may hold this many connections open.  Ignored if &amp;lt;tt&amp;gt;JNDI_NAME&amp;lt;/tt&amp;gt; is specified.  Defaults to 1.&lt;br /&gt;
|-&lt;br /&gt;
| EVICTION_TIMER_PERIOD_MILLIS&lt;br /&gt;
| Controls how frequently idle connections are pruned from the pool.  If set to a value N &amp;amp;gt; 0 (zero), idle connections are removed from the pool and closed every N milliseconds. Ignored if &amp;lt;tt&amp;gt;JNDI_NAME&amp;lt;/tt&amp;gt; is specified.  Defaults to -1 (disabled).&lt;br /&gt;
|-&lt;br /&gt;
| MIN_EVICTION_IDLE_MILLIS&lt;br /&gt;
| Controls how long a connection must be idle before it is evicted.  If &amp;lt;tt&amp;gt;EVICTION_TIMER_PERIOD_MILLIS&amp;lt;/tt&amp;gt; is disabled, this setting has no effect.  Otherwise, when the eviction timer fires, idle connections are only closed if they have been idle for at least this many milliseconds.  Ignored if &amp;lt;tt&amp;gt;JNDI_NAME&amp;lt;/tt&amp;gt; is specified. Defaults to -1 (disabled).&lt;br /&gt;
|-&lt;br /&gt;
| VALIDATION_TIMING&lt;br /&gt;
| Controls when connections are validated.  Multiple values may be specified if separated by commas. The values are case insensitive. Possible values and their meanings: &amp;lt;tt&amp;gt;ON_BORROW&amp;lt;/tt&amp;gt; (validate when connection is borrowed from the connection pool), &amp;lt;tt&amp;gt;ON_RETURN&amp;lt;/tt&amp;gt; (validate when connection is returned to the connection pool), or &amp;lt;tt&amp;gt;WHILE_IDLE&amp;lt;/tt&amp;gt; (validate idle connections when the eviction timer fires and the connection has not been idle long enough to warrant eviction).  The WHILE_IDLE value only has effect when both &amp;lt;tt&amp;gt;EVICTION_TIMER_PERIOD_MILLIS&amp;lt;/tt&amp;gt; and &amp;lt;tt&amp;gt;MIN_EVICTION_IDLE_MILLIS&amp;lt;/tt&amp;gt; is positive.  This parameter is ignored if &amp;lt;tt&amp;gt;JNDI_NAME&amp;lt;/tt&amp;gt; is specified.  This parameter has no effect if &amp;lt;tt&amp;gt;VALIDATION_QUERY&amp;lt;/tt&amp;gt; is not specified.  Default value is &amp;lt;tt&amp;gt;ON_BORROW&amp;lt;/tt&amp;gt;.&lt;br /&gt;
|-&lt;br /&gt;
| DISABLE_CONNECTION_POOL&lt;br /&gt;
| Reverts connection management behavior to pre-connection pool semantics.  A single connection is re-used for all purposes.  Default value is false.&lt;br /&gt;
|}&lt;br /&gt;
&lt;br /&gt;
For example:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;blockquote&amp;gt;&amp;lt;pre&amp;gt;&lt;br /&gt;
create server ora_sales_server&lt;br /&gt;
foreign data wrapper sys_jdbc&lt;br /&gt;
options(&lt;br /&gt;
    driver_class 'oracle.jdbc.driver.OracleDriver',&lt;br /&gt;
    url 'jdbc:oracle:thin:@localhost:1521:ora1',&lt;br /&gt;
    user_name 'scott',&lt;br /&gt;
    password 'tiger',&lt;br /&gt;
    type_mapping 'DATE:TIMESTAMP;DECIMAL(22,0):DOUBLE',&lt;br /&gt;
    validation_query 'select 1 from dual');&lt;br /&gt;
&amp;lt;/pre&amp;gt;&amp;lt;/blockquote&amp;gt;&lt;br /&gt;
&lt;br /&gt;
(The Oracle JDBC driver incorrectly exposes datetime types without nanoseconds as DATE, and exposes floating-point numerics as DECIMAL(22,0), so the mappings above are usually required.)&lt;br /&gt;
&lt;br /&gt;
The following JDBC API calls are made in order to validate a foreign server definition:&lt;br /&gt;
&lt;br /&gt;
* DriverManager.getConnection&lt;br /&gt;
* Connection.getMetaData (if supported)&lt;br /&gt;
* Connection.setAutoCommit (only if &amp;lt;tt&amp;gt;AUTOCOMMIT&amp;lt;/tt&amp;gt; is set to false)&lt;br /&gt;
* DatabaseMetaData.XXX (various calls to test for supported features)&lt;br /&gt;
&lt;br /&gt;
== JDBC Foreign Table Definition ==&lt;br /&gt;
&lt;br /&gt;
The only option always required when defining a JDBC foreign table is &amp;lt;tt&amp;gt;TABLE_NAME&amp;lt;/tt&amp;gt; (or &amp;lt;tt&amp;gt;OBJECT&amp;lt;/tt&amp;gt;):&lt;br /&gt;
&lt;br /&gt;
&amp;lt;blockquote&amp;gt;&amp;lt;pre&amp;gt;&lt;br /&gt;
create schema ora_sales;&lt;br /&gt;
&lt;br /&gt;
create foreign table ora_sales.dept&lt;br /&gt;
server ora_sales_server&lt;br /&gt;
options(table_name 'DEPT');&lt;br /&gt;
&amp;lt;/pre&amp;gt;&amp;lt;/blockquote&amp;gt;&lt;br /&gt;
&lt;br /&gt;
For servers which support multiple schemas, the &amp;lt;tt&amp;gt;SCHEMA_NAME&amp;lt;/tt&amp;gt; option can be specified at the table level to choose a schema other than the default:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;blockquote&amp;gt;&amp;lt;pre&amp;gt;&lt;br /&gt;
create schema sqlsrvr_sales;&lt;br /&gt;
&lt;br /&gt;
create foreign table sqlsrvr_sales.dept&lt;br /&gt;
server sqlsrvr_sales_server&lt;br /&gt;
options(schema_name 'DBO', table_name 'DEPT');&lt;br /&gt;
&amp;lt;/pre&amp;gt;&amp;lt;/blockquote&amp;gt;&lt;br /&gt;
&lt;br /&gt;
The following JDBC API calls are made in order to validate a foreign table definition:&lt;br /&gt;
&lt;br /&gt;
* Connection.getMetaData&lt;br /&gt;
* Connection.prepareStatement (if supported)&lt;br /&gt;
* PreparedStatement.getMetaData (if supported)&lt;br /&gt;
* PreparedStatement.executeQuery (if supported)&lt;br /&gt;
* Connection.createStatement (only if PreparedStatement not supported)&lt;br /&gt;
* Statement.executeQuery (only if PreparedStatement not supported)&lt;br /&gt;
* ResultSet.getMetaData (only if PreparedStatement not supported)&lt;br /&gt;
* ResultSetMetaData.getColumnCount&lt;br /&gt;
* ResultSetMetaData.getColumnName&lt;br /&gt;
* ResultSetMetaData.getColumnType&lt;br /&gt;
* ResultSetMetaData.getPrecision&lt;br /&gt;
* ResultSetMetaData.getScale&lt;br /&gt;
* ResultSetMetaData.isNullable&lt;br /&gt;
&lt;br /&gt;
== Querying JDBC Foreign Tables ==&lt;br /&gt;
&lt;br /&gt;
Once defined, JDBC foreign tables may be queried just like local tables.  The following two queries are equivalent (the first one references the virtual catalog, while the second one references the local metadata copy):&lt;br /&gt;
&lt;br /&gt;
&amp;lt;blockquote&amp;gt;&amp;lt;pre&amp;gt;&lt;br /&gt;
select * from ora_sales_server.scott.dept;&lt;br /&gt;
&lt;br /&gt;
select * from ora_sales.dept;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&amp;lt;/blockquote&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Currently, relational operators such as filters, projections, aggregations, and joins are not pushed down into the SQL query used to access the foreign server.  For example, to implement the following query, all &amp;lt;tt&amp;gt;dept&amp;lt;/tt&amp;gt; rows are fetched from Oracle, and then the filter is applied locally inside of Farrago:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;blockquote&amp;gt;&amp;lt;pre&amp;gt;&lt;br /&gt;
select * from ora_sales.dept&lt;br /&gt;
where deptno=10;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&amp;lt;/blockquote&amp;gt;&lt;br /&gt;
&lt;br /&gt;
True distributed query optimization will be implemented in a future Farrago release.&lt;br /&gt;
&lt;br /&gt;
The following JDBC API calls are made in order to execute a query against&lt;br /&gt;
a foreign table:&lt;br /&gt;
&lt;br /&gt;
* Connection.createStatement&lt;br /&gt;
* Statement.executeQuery&lt;br /&gt;
* Statement.setFetchSize (only if FETCH_SIZE is set)&lt;br /&gt;
* ResultSet.getXXX (where XXX depends on datatype of column queried)&lt;br /&gt;
&lt;br /&gt;
By default, connections to JDBC data sources are in autocommit mode, meaning that each foreign query runs in its own read-only transaction which ends automatically when the top-level Farrago query is closed. (If a single Farrago query accesses multiple foreign tables, then multiple foreign queries may be issued, even if all of the foreign tables are from the same data source.)  The default isolation level is DBMS-dependent, and so the effect of SQL/MED queries on foreign concurrency control (e.g. read locks) also varies by DBMS.&lt;br /&gt;
&lt;br /&gt;
== JDBC Metadata Import ==&lt;br /&gt;
&lt;br /&gt;
Multiple foreign table definitions can be imported into Farrago automatically with the IMPORT FOREIGN SCHEMA statement:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;blockquote&amp;gt;&amp;lt;pre&amp;gt;&lt;br /&gt;
import foreign schema sales&lt;br /&gt;
from server ora_sales_server&lt;br /&gt;
into ora_sales;&lt;br /&gt;
&lt;br /&gt;
select * from ora_sales.emp;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&amp;lt;/blockquote&amp;gt;&lt;br /&gt;
&lt;br /&gt;
The following JDBC API calls are made in order to perform the import:&lt;br /&gt;
&lt;br /&gt;
* DatabaseMetaData.getTables&lt;br /&gt;
* DatabaseMetaData.getColumns&lt;br /&gt;
&lt;br /&gt;
== Updating JDBC Foreign Tables ==&lt;br /&gt;
&lt;br /&gt;
''NOTE'': update functionality is not yet implemented; this section describes the planned support.&lt;br /&gt;
&lt;br /&gt;
The Farrago SQL/MED plugin for JDBC will support the standard INSERT/UPDATE/DELETE DML statements with a foreign table as the target, e.g.&lt;br /&gt;
&lt;br /&gt;
&amp;lt;blockquote&amp;gt;&amp;lt;pre&amp;gt;&lt;br /&gt;
insert into ora_sales.dept &lt;br /&gt;
select * from sales.depts;&lt;br /&gt;
&lt;br /&gt;
delete from ora_sales.dept&lt;br /&gt;
where deptno=10;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&amp;lt;/blockquote&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Each row to be modified by the query corresponds to an individual execution of a prepared statement.  The existence of a primary key is required for DELETE or UPDATE.&lt;br /&gt;
&lt;br /&gt;
New SQL/MED options govern the transactional characteristics of the DML:&lt;br /&gt;
&lt;br /&gt;
{| border=&amp;quot;1&amp;quot; cellspacing=&amp;quot;0&amp;quot; cellpadding=&amp;quot;2&amp;quot;&lt;br /&gt;
! Name&lt;br /&gt;
! Scope&lt;br /&gt;
! Description&lt;br /&gt;
|-&lt;br /&gt;
| DISTRIBUTED_TRANSACTIONS &lt;br /&gt;
| server &lt;br /&gt;
| A setting of 0 (the default) means that when a non-autocommit Farrago transaction accessing this server spans multiple DML statements, all of those statements must target the same server.  A setting of 1 requests that non-autocommit Farrago transactions which access this  server should be implemented as distributed transactions (this requires all foreign servers involved to support the javax.sql.XAConnection interface).&lt;br /&gt;
|-&lt;br /&gt;
| READ_ONLY &lt;br /&gt;
| server &lt;br /&gt;
| 0 to request DML support.  1 for read-only connection (the default).&lt;br /&gt;
|-&lt;br /&gt;
| ISOLATION_LEVEL &lt;br /&gt;
| server &lt;br /&gt;
| Isolation level to use for all access to this server.  If unspecified, default is DBMS-dependent.  This setting is ignored for distributed transactions (for which the isolation level is based on the Farrago session).&lt;br /&gt;
|-&lt;br /&gt;
| TRANSACTION_ROW_LIMIT &lt;br /&gt;
| server or table (table overrides server) &lt;br /&gt;
| Number of rows to modify before committing transaction and starting a new one.  Default is 0 (only commit once all rows have been processed).  This option is ignored when autocommit is disabled in the Farrago session, because then the Farrago-level transaction governs the foreign transaction.  This option is also ignored when this wrapper's AUTOCOMMIT option is set to 'TRUE' (the default), because then every update is committed immediately.&lt;br /&gt;
|-&lt;br /&gt;
| BATCH_ROW_LIMIT &lt;br /&gt;
| server or table (table overrides server) &lt;br /&gt;
| Number of rows to send to foreign server per batch.  Default is 1.&lt;br /&gt;
|}&lt;br /&gt;
&lt;br /&gt;
The following JDBC API calls are made in order to execute DML against&lt;br /&gt;
a foreign table:&lt;br /&gt;
&lt;br /&gt;
* Connection.prepareStatement&lt;br /&gt;
* PreparedStatement.setXXX (where XXX depends on datatype of column updated)&lt;br /&gt;
* PreparedStatement.executeUpdate&lt;br /&gt;
* PreparedStatement.addBatch (if BATCH_ROW_LIMIT specified)&lt;br /&gt;
* Statement.executeBatch (if BATCH_ROW_LIMIT specified)&lt;br /&gt;
* Connection.setReadOnly (if supported)&lt;br /&gt;
* Connection.setTransactionIsolation  (if &amp;lt;tt&amp;gt;ISOLATION_LEVEL&amp;lt;/tt&amp;gt; specified)&lt;br /&gt;
* Connection.commit (if &amp;lt;tt&amp;gt;AUTOCOMMIT&amp;lt;/tt&amp;gt; set to false)&lt;br /&gt;
* Connection.rollback (if &amp;lt;tt&amp;gt;AUTOCOMMIT&amp;lt;/tt&amp;gt; set to false)&lt;br /&gt;
* DatabaseMetaData.getPrimaryKeys (for UPDATE/DELETE)&lt;br /&gt;
&lt;br /&gt;
= Examples =&lt;br /&gt;
== MySQL ==&lt;br /&gt;
&lt;br /&gt;
Create a remote server connection profile first.  This profile will later be used to show foreign tables and interact with the MySQL server.&lt;br /&gt;
&amp;lt;blockquote&amp;gt;&amp;lt;pre&amp;gt;&lt;br /&gt;
create server mysql_jbond&lt;br /&gt;
foreign data wrapper sys_jdbc&lt;br /&gt;
options(&lt;br /&gt;
    driver_class 'com.mysql.jdbc.Driver',&lt;br /&gt;
    url 'jdbc:mysql://172.27.0.204/sandbox',&lt;br /&gt;
    user_name 'jbond',&lt;br /&gt;
    password 'MyEyesOnly',&lt;br /&gt;
    validation_query 'select 1 from dual');&lt;br /&gt;
&amp;lt;/pre&amp;gt;&amp;lt;/blockquote&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''mysql_jbond''' - name given to the 'server connection' which is saved in LucidDB.&amp;lt;br&amp;gt;&lt;br /&gt;
'''com.mysql.jdbc.Driver''' - is a specific java class name of the MySQL JDBC driver.&amp;lt;br&amp;gt;&lt;br /&gt;
'''jbond''' - user that connects to the remote MySQL server.&amp;lt;br&amp;gt;&lt;br /&gt;
'''MyEyesOnly''' - password belonging to the user connecting to the remote MySQL server.&amp;lt;br&amp;gt;&lt;br /&gt;
'''select 1 from dual''' - SQL query that will succeed if a connection is established.&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;blockquote&amp;gt;&amp;lt;pre&amp;gt;&lt;br /&gt;
create schema bond_schema;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&amp;lt;/blockquote&amp;gt;&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
Next we want to have a place for the foreign tables to show up.&amp;lt;br&amp;gt;&lt;br /&gt;
'''bond_schema''' - is a schema where Mr. Bond wants his tables to show up from the remote server.&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Finally we tell LucidDB to create a table called '''SOURCE_BUDGET_FINANCIALS''' in the newly created '''bond_schema''' with the structure and data being provided through the connection called '''mysql_jbond''' which reaches a MySQL server, digs in a schema called '''evil_operations''' with a specific table also called '''SOURCE_BUDGET_FINANCIALS'''.&lt;br /&gt;
&amp;lt;blockquote&amp;gt;&amp;lt;pre&amp;gt;&lt;br /&gt;
create foreign table bond_schema.SOURCE_BUDGET_FINANCIALS &lt;br /&gt;
server mysql_jbond&lt;br /&gt;
options(schema_name 'evil_operations', table_name 'SOURCE_BUDGET_FINANCIALS');&lt;br /&gt;
&amp;lt;/pre&amp;gt;&amp;lt;/blockquote&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/FarragoMedJdbcPlugin</id>
		<title>FarragoMedJdbcPlugin</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/FarragoMedJdbcPlugin"/>
				<updated>2011-12-16T17:28:46Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: Added an example for created a connection to MySQL&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;= Farrago SQL/MED Plugin for JDBC =&lt;br /&gt;
&lt;br /&gt;
Farrago provides a plugin implementing [http://farrago.sourceforge.net/design/sqlmed.html SQL/MED access] to any foreign DBMS for which a JDBC driver is available.  &lt;br /&gt;
&lt;br /&gt;
Farrago supports the SQL standard three-level qualifier scheme for the names of tables: &amp;lt;tt&amp;gt;catalog.schema.table&amp;lt;/tt&amp;gt;.  When using the SQL/MED plugin for JDBC to make foreign data namespaces accessible from Farrago SQL queries, it is important to keep a number of points in mind:&lt;br /&gt;
&lt;br /&gt;
* Different JDBC drivers support different qualifier schemes.  Some support catalogs and schemas; others only support schemas; and still others support neither catalogs nor schemas.  Default values may or may not be in effect depending on the server connection URL.  For this reason, the user must be careful when defining the foreign server in Farrago to get the desired mapping.&lt;br /&gt;
* When referencing foreign tables directly via a virtual catalog (without importing their metadata into a local schema), use the foreign schema and table name.  In this case, the catalog name will be the name given the foreign server via CREATE SERVER.&lt;br /&gt;
* When referencing foreign table via locally defined or imported metadata, use the local schema and table name.  In this case, the catalog name will be LOCALDB.&lt;br /&gt;
&lt;br /&gt;
== JDBC Foreign Data Wrapper Definition ==&lt;br /&gt;
&lt;br /&gt;
Because this plugin is included as part of the standard Farrago distribution, a corresponding foreign data wrapper instance named &amp;lt;tt&amp;gt;SYS_JDBC&amp;lt;/tt&amp;gt; is predefined by Farrago's initialization scripts.  Normally, there is no need to define additional instances.&lt;br /&gt;
&lt;br /&gt;
However, it may be useful to define additional wrapper instances corresponding to specific DBMS types.  For the JDBC plugin, all SQL/MED options declared on the wrapper are propagated to the server, allowing common option settings to be factored out of individual server definitions.  (Note that this is not necessarily true for other plugins.)  Option settings on a server always take precedence over settings inherited from a wrapper.&lt;br /&gt;
&lt;br /&gt;
== JDBC Foreign Server Definition ==&lt;br /&gt;
&lt;br /&gt;
In order to access a particular JDBC data source, a corresponding foreign server must be defined.  The following server-level options can be specified:&lt;br /&gt;
&lt;br /&gt;
{| border=&amp;quot;1&amp;quot; cellspacing=&amp;quot;0&amp;quot; cellpadding=&amp;quot;2&amp;quot;&lt;br /&gt;
! Name&lt;br /&gt;
! Description&lt;br /&gt;
|- &lt;br /&gt;
| JNDI_NAME&lt;br /&gt;
| Name of the JNDI resource that contains a &amp;lt;tt&amp;gt;javax.sql.DataSource&amp;lt;/tt&amp;gt; suitable for use with the SQL/MED JDBC foreign data wrapper.  The DataSource '''must not''' block when connections are requested.  This option is mutually exclusive with the existing &amp;lt;tt&amp;gt;DRIVER_CLASS&amp;lt;/tt&amp;gt;, &amp;lt;tt&amp;gt;URL&amp;lt;/tt&amp;gt;, &amp;lt;tt&amp;gt;USER_NAME&amp;lt;/tt&amp;gt;, &amp;lt;tt&amp;gt;PASSWORD&amp;lt;/tt&amp;gt;, and &amp;lt;tt&amp;gt;EXTENDED_OPTIONS&amp;lt;/tt&amp;gt; parameters.  The following parameters are ignored if &amp;lt;tt&amp;gt;JNDI_NAME&amp;lt;/tt&amp;gt; is specified: &amp;lt;tt&amp;gt;LOGIN_TIMEOUT&amp;lt;/tt&amp;gt;, &amp;lt;tt&amp;gt;VALIDATION_QUERY&amp;lt;/tt&amp;gt;.  No default value.&lt;br /&gt;
|-&lt;br /&gt;
| DRIVER_CLASS&lt;br /&gt;
| Fully qualified name of the JDBC driver class to load; this must be available on the classpath.  Currently this requires either changing the classpath used to invoke Farrago, or rolling the JDBC driver classes into a new plugin jar combined with the default Farrago plugin contents. (We plan to eventually support the SQL:2003 jar dependencies feature to eliminate this repackaging burden.)&lt;br /&gt;
|-&lt;br /&gt;
| URL&lt;br /&gt;
| JDBC URL specifying the data source to access&lt;br /&gt;
|-&lt;br /&gt;
| USER_NAME&lt;br /&gt;
| User name for login to foreign server&lt;br /&gt;
|-&lt;br /&gt;
| PASSWORD&lt;br /&gt;
| Password for login to foreign server&lt;br /&gt;
|-&lt;br /&gt;
| USE_SCHEMA_NAME_AS_FOREIGN_QUALIFIER &lt;br /&gt;
| If set to 'TRUE', then for tables without a table-level SCHEMA_NAME specified, the server-level SCHEMA_NAME is used. The default is 'FALSE'.&lt;br /&gt;
|-&lt;br /&gt;
| SCHEMA_NAME &lt;br /&gt;
| If USE_SCHEMA_NAME_AS_FOREIGN_QUALIFIER is set to 'FALSE': &amp;lt;br /&amp;gt; Artificial foreign schema name.  This option is only required for servers which don't support schemas.  When specified, the plugin will accept this schema name as a foreign qualifier when importing foreign tables or accessing them directly, but will omit all schema references when sending SQL to the foreign server.  For servers that support schemas, this option should never be specified; reference the real foreign schema names instead. &amp;lt;br /&amp;gt;If USE_SCHEMA_NAME_AS_FOREIGN_QUALIFIER is set to 'TRUE': &amp;lt;br /&amp;gt;Server must support schemas. This SCHEMA_NAME will be used if the table-level SCHEMA_NAME is not set.&lt;br /&gt;
|-&lt;br /&gt;
| SCHEMA_MAPPING&lt;br /&gt;
| Semicolon-separated list of schema_name:mapped_schema_name pairs.  This option is only valid for servers which support schemas.  This allows for a single schema view of tables spanning multiple schemas. If set, TABLE_MAPPING and TABLE_PREFIX_MAPPING must not be set. A schema or table name may be quoted by the double quote character.  The double quote character can be used in a name, if escaped by itself (the double quote character). A single quote character can be used, if escaped by itself (the single quote character).&lt;br /&gt;
|-&lt;br /&gt;
| TABLE_MAPPING&lt;br /&gt;
| Semicolon-separated list of source_schema.source_table:mapped_schema.mapped_table pairs. This option is only valid for servers which support schemas.  This allows for a single schema view of the specified tables spanning multiple schemas. If set, SCHEMA_MAPPING and TABLE_PREFIX_MAPPING must not be set.  A schema or table name may be quoted by the double quote character.  The double quote character can be used in a name, if escaped by itself (the double quote character). A single quote character can be used, if escaped by itself (the single quote character). &lt;br /&gt;
|-&lt;br /&gt;
| TABLE_PREFIX_MAPPING&lt;br /&gt;
| Semicolon-separated list of source_schema.source_table_prefix:mapped_schema.mapped_table_prefix pairs. This allows multiple source tables, with a common prefix, to be mapped into a specific target schema with a different prefix. If set, SCHEMA_MAPPING and TABLE_MAPPING must not be set. If artificial foreign schema names are in use, the source schema name is ignored. A schema or table name may be quoted by the double quote character. The double quote character can be used in a name, if escaped by itself (the double quote character). A single quote character can be used, if escaped by itself (the single quote character). If the last character of either the source or target table prefix is a percent sign (%), it is interpreted as a wild card and stripped off. This allows a prefix to be appended to or removed from all tables (e.g., mapping definitions like 'SRC_SCHEMA.%:TGT_SCHEMA.PREFIX_%' or 'SRC_SCHEMA.PREFIX_%:TGT_SCHEMA.%'). As a consequence, if a prefix ends in % it must be doubled.&lt;br /&gt;
|-&lt;br /&gt;
| QUALIFYING_CATALOG_NAME &lt;br /&gt;
| Foreign catalog name to which this server should correspond.  This option should only be used for servers which support multiple catalogs.  Normally, a default catalog is always defined for a connection, so this option isn't usually required.  To access multiple catalogs from the same physical server, create multiple logical servers, each with a different value for this option.&lt;br /&gt;
|-&lt;br /&gt;
| TABLE_TYPES&lt;br /&gt;
| Comma-separated list of table types used to restrict metadata results for operations such as IMPORT FOREIGN SCHEMA.  For example, some servers mix system tables into the same schema with user tables and views.  To hide them, specify a value like 'TABLE,VIEW' for this option.  To retrieve only tables and system tables, but no views, use 'TABLE,SYSTEM TABLE'.  In general, table type names may vary across JDBC drivers, so check your driver's documentation or call your driver's DatabaseMetaData.getTableTypes() method to list the available types.  This option is never required; if not specified, metadata for all table types is returned.  No spaces are allowed in the list unless they make up part of the type name, e.g. 'SYSTEM TABLE'.&lt;br /&gt;
|-&lt;br /&gt;
| EXTENDED_OPTIONS&lt;br /&gt;
| If set to 'TRUE', unrecognized options are passed through to the JDBC driver as properties; otherwise, they are ignored.  The default is 'FALSE'.&lt;br /&gt;
|-&lt;br /&gt;
| TYPE_SUBSTITUTION&lt;br /&gt;
| If set to 'TRUE' (the default), datatypes which are not supported by Farrago are replaced with the best available substitute.  If set to 'FALSE', unsupported datatypes result in errors.  Note that any TYPE_MAPPING specified is executed before TYPE_SUBSTITUTION is run.&lt;br /&gt;
|-&lt;br /&gt;
| TYPE_MAPPING&lt;br /&gt;
| Semicolon-separated list of orig_datatype:subst_datatype pairs.  If set, Farrago will replace the type of foreign columns matching orig_datatype with the corresponding subst_datatype.  The format for both datatype strings is DATATYPE_NAME[(PRECISION[,SCALE])] with no spaces allowed.  On orig_datatype, precision and scale (if specified) are used to more precisely limit the matching datatype.  In other words, &amp;quot;DECIMAL&amp;quot; will match any decimal type, but &amp;quot;DECIMAL(10,2)&amp;quot; will only match that specific precision and scale.  If precision and scale are not specified on subst_datatype, the original precision and scale are kept.  If the 'subst_datatype' is not a supported Farrago datatype, the mapping is ignored.  Note that TYPE_MAPPING is run before TYPE_SUBSTITUTION and does not depend on TYPE_SUBSTITUTION.&lt;br /&gt;
|-&lt;br /&gt;
| LENIENT&lt;br /&gt;
| If set to 'TRUE', match target columns specified in the foreign table definition with data source columns using case-sensitive string comparison on column name.  Specified target columns which are missing in the source are filled in with null. Likewise, specified target columns with types that are cast-incompatible from matching source columns are filled in with null.  Other matching columns are cast to the target type (either the type specified explicitly, or the type stored in the catalog when the foreign table descriptor is created with implicit column types).  The default is 'FALSE', meaning columns are mapped by position rather than name, and mismatches in the mapping may lead to runtime errors. &amp;lt;p&amp;gt;Lenience makes the foreign table definition resilient to changes in the data source; strictness ensures that data is not accidentally lost or fabricated due to a mismapping.&lt;br /&gt;
|-&lt;br /&gt;
| SKIP_TYPE_CHECK&lt;br /&gt;
| If set to 'TRUE', assume target columns specified in the foreign table definition are compatible with data source columns in name, type and number.  The default is 'FALSE'.  This setting is ignored when LENIENT is 'TRUE'.  The purpose of this setting is to make it possible to skip metadata checks (possibly expensive depending on source DBMS) when referencing the foreign table (or even when defining it if column types are explicitly specified or imported).  The downside is that if the source is actually incompatible with the local catalog definition, then errors will not be detected until query execution, and diagnostics may be poor as a result.  ''Not available in versions before v0.9.2''&lt;br /&gt;
|-&lt;br /&gt;
| LOGIN_TIMEOUT&lt;br /&gt;
| The maximum time in seconds to wait while attempting to connect to foreign server.  Ignored if &amp;lt;tt&amp;gt;JNDI_NAME&amp;lt;/tt&amp;gt; is set.&lt;br /&gt;
|-&lt;br /&gt;
| VALIDATION_QUERY&lt;br /&gt;
| The SQL query to use to validate connections in the JDBC wrapper cache. If not specified, no connection validation will be done.  If specified, must be a query (in a dialect understood by the foreign JDBC driver being used) which will return at least one row without error.  Ignored if &amp;lt;tt&amp;gt;JNDI_NAME&amp;lt;/tt&amp;gt; is set.&lt;br /&gt;
|-&lt;br /&gt;
| DISABLED_PUSHDOWN_REL_PATTERN&lt;br /&gt;
| A regular expression matching the names of rules or logical relational expressions for which pushdown to data source should be disabled.  To enable all pushdown, the value can be left as empty string (the default).  To disable all pushdown, the value can be set to a match-anything regular expression ('.*').  To disable a particular expression, the value can be set to the corresponding optimizer RelNode class name, e.g. 'FilterRel', or internal rule description, e.g. '.*on proj'.&lt;br /&gt;
|-&lt;br /&gt;
| ASSUME_PUSHDOWN_VALID&lt;br /&gt;
| A boolean (true/false) expression that controls whether the Wrapper will check the pushdown SQL prior to executing it.  Setting it to true will execute the SQL without first preparing and checking the SQL is valid (vie PreparedStatement.getMetadata()).  Setting it to false (the default) will check the SQL first, including some very unnatural Oracle hacks since their thin driver does not support ps.getMetadata().  In general, this should be set to false, but if your JDBC driver lacks ps.getMetadata() this might be necessary, e.g. Oracle.&lt;br /&gt;
|-&lt;br /&gt;
| FETCH_SIZE&lt;br /&gt;
| An integer fetch size to set on cursors via Statement.setFetchSize.  Default is -1 (don't call setFetchSize at all).&lt;br /&gt;
|-&lt;br /&gt;
| AUTOCOMMIT&lt;br /&gt;
| If set to 'TRUE' (the default), leave connection in autocommit mode. Otherwise, request transaction mode.  For read-only usage, this normally doesn't matter, since the wrapper closes cursors as soon as it is done with them, but some JDBC drivers are sensitive (e.g. the PostgreSQL driver, which requires an explicit FETCH_SIZE and non-autocommit to avoid exhausting memory for large result sets).&lt;br /&gt;
|-&lt;br /&gt;
| MAX_IDLE_CONNECTIONS&lt;br /&gt;
| When creating a connection pool implicitly (e.g. JNDI_NAME is not set), this many connections are kept open.  If a connection is returned to the pool and this many idle connections are already in the pool, the newly returned connection is immediately closed.  Each &amp;lt;tt&amp;gt;MedJdbcDataServer&amp;lt;/tt&amp;gt; instance may hold this many connections open.  Ignored if &amp;lt;tt&amp;gt;JNDI_NAME&amp;lt;/tt&amp;gt; is specified.  Defaults to 1.&lt;br /&gt;
|-&lt;br /&gt;
| EVICTION_TIMER_PERIOD_MILLIS&lt;br /&gt;
| Controls how frequently idle connections are pruned from the pool.  If set to a value N &amp;amp;gt; 0 (zero), idle connections are removed from the pool and closed every N milliseconds. Ignored if &amp;lt;tt&amp;gt;JNDI_NAME&amp;lt;/tt&amp;gt; is specified.  Defaults to -1 (disabled).&lt;br /&gt;
|-&lt;br /&gt;
| MIN_EVICTION_IDLE_MILLIS&lt;br /&gt;
| Controls how long a connection must be idle before it is evicted.  If &amp;lt;tt&amp;gt;EVICTION_TIMER_PERIOD_MILLIS&amp;lt;/tt&amp;gt; is disabled, this setting has no effect.  Otherwise, when the eviction timer fires, idle connections are only closed if they have been idle for at least this many milliseconds.  Ignored if &amp;lt;tt&amp;gt;JNDI_NAME&amp;lt;/tt&amp;gt; is specified. Defaults to -1 (disabled).&lt;br /&gt;
|-&lt;br /&gt;
| VALIDATION_TIMING&lt;br /&gt;
| Controls when connections are validated.  Multiple values may be specified if separated by commas. The values are case insensitive. Possible values and their meanings: &amp;lt;tt&amp;gt;ON_BORROW&amp;lt;/tt&amp;gt; (validate when connection is borrowed from the connection pool), &amp;lt;tt&amp;gt;ON_RETURN&amp;lt;/tt&amp;gt; (validate when connection is returned to the connection pool), or &amp;lt;tt&amp;gt;WHILE_IDLE&amp;lt;/tt&amp;gt; (validate idle connections when the eviction timer fires and the connection has not been idle long enough to warrant eviction).  The WHILE_IDLE value only has effect when both &amp;lt;tt&amp;gt;EVICTION_TIMER_PERIOD_MILLIS&amp;lt;/tt&amp;gt; and &amp;lt;tt&amp;gt;MIN_EVICTION_IDLE_MILLIS&amp;lt;/tt&amp;gt; is positive.  This parameter is ignored if &amp;lt;tt&amp;gt;JNDI_NAME&amp;lt;/tt&amp;gt; is specified.  This parameter has no effect if &amp;lt;tt&amp;gt;VALIDATION_QUERY&amp;lt;/tt&amp;gt; is not specified.  Default value is &amp;lt;tt&amp;gt;ON_BORROW&amp;lt;/tt&amp;gt;.&lt;br /&gt;
|-&lt;br /&gt;
| DISABLE_CONNECTION_POOL&lt;br /&gt;
| Reverts connection management behavior to pre-connection pool semantics.  A single connection is re-used for all purposes.  Default value is false.&lt;br /&gt;
|}&lt;br /&gt;
&lt;br /&gt;
For example:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;blockquote&amp;gt;&amp;lt;pre&amp;gt;&lt;br /&gt;
create server ora_sales_server&lt;br /&gt;
foreign data wrapper sys_jdbc&lt;br /&gt;
options(&lt;br /&gt;
    driver_class 'oracle.jdbc.driver.OracleDriver',&lt;br /&gt;
    url 'jdbc:oracle:thin:@localhost:1521:ora1',&lt;br /&gt;
    user_name 'scott',&lt;br /&gt;
    password 'tiger',&lt;br /&gt;
    type_mapping 'DATE:TIMESTAMP;DECIMAL(22,0):DOUBLE',&lt;br /&gt;
    validation_query 'select 1 from dual');&lt;br /&gt;
&amp;lt;/pre&amp;gt;&amp;lt;/blockquote&amp;gt;&lt;br /&gt;
&lt;br /&gt;
(The Oracle JDBC driver incorrectly exposes datetime types without nanoseconds as DATE, and exposes floating-point numerics as DECIMAL(22,0), so the mappings above are usually required.)&lt;br /&gt;
&lt;br /&gt;
The following JDBC API calls are made in order to validate a foreign server definition:&lt;br /&gt;
&lt;br /&gt;
* DriverManager.getConnection&lt;br /&gt;
* Connection.getMetaData (if supported)&lt;br /&gt;
* Connection.setAutoCommit (only if &amp;lt;tt&amp;gt;AUTOCOMMIT&amp;lt;/tt&amp;gt; is set to false)&lt;br /&gt;
* DatabaseMetaData.XXX (various calls to test for supported features)&lt;br /&gt;
&lt;br /&gt;
== JDBC Foreign Table Definition ==&lt;br /&gt;
&lt;br /&gt;
The only option always required when defining a JDBC foreign table is &amp;lt;tt&amp;gt;TABLE_NAME&amp;lt;/tt&amp;gt; (or &amp;lt;tt&amp;gt;OBJECT&amp;lt;/tt&amp;gt;):&lt;br /&gt;
&lt;br /&gt;
&amp;lt;blockquote&amp;gt;&amp;lt;pre&amp;gt;&lt;br /&gt;
create schema ora_sales;&lt;br /&gt;
&lt;br /&gt;
create foreign table ora_sales.dept&lt;br /&gt;
server ora_sales_server&lt;br /&gt;
options(table_name 'DEPT');&lt;br /&gt;
&amp;lt;/pre&amp;gt;&amp;lt;/blockquote&amp;gt;&lt;br /&gt;
&lt;br /&gt;
For servers which support multiple schemas, the &amp;lt;tt&amp;gt;SCHEMA_NAME&amp;lt;/tt&amp;gt; option can be specified at the table level to choose a schema other than the default:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;blockquote&amp;gt;&amp;lt;pre&amp;gt;&lt;br /&gt;
create schema sqlsrvr_sales;&lt;br /&gt;
&lt;br /&gt;
create foreign table sqlsrvr_sales.dept&lt;br /&gt;
server sqlsrvr_sales_server&lt;br /&gt;
options(schema_name 'DBO', table_name 'DEPT');&lt;br /&gt;
&amp;lt;/pre&amp;gt;&amp;lt;/blockquote&amp;gt;&lt;br /&gt;
&lt;br /&gt;
The following JDBC API calls are made in order to validate a foreign table definition:&lt;br /&gt;
&lt;br /&gt;
* Connection.getMetaData&lt;br /&gt;
* Connection.prepareStatement (if supported)&lt;br /&gt;
* PreparedStatement.getMetaData (if supported)&lt;br /&gt;
* PreparedStatement.executeQuery (if supported)&lt;br /&gt;
* Connection.createStatement (only if PreparedStatement not supported)&lt;br /&gt;
* Statement.executeQuery (only if PreparedStatement not supported)&lt;br /&gt;
* ResultSet.getMetaData (only if PreparedStatement not supported)&lt;br /&gt;
* ResultSetMetaData.getColumnCount&lt;br /&gt;
* ResultSetMetaData.getColumnName&lt;br /&gt;
* ResultSetMetaData.getColumnType&lt;br /&gt;
* ResultSetMetaData.getPrecision&lt;br /&gt;
* ResultSetMetaData.getScale&lt;br /&gt;
* ResultSetMetaData.isNullable&lt;br /&gt;
&lt;br /&gt;
== Querying JDBC Foreign Tables ==&lt;br /&gt;
&lt;br /&gt;
Once defined, JDBC foreign tables may be queried just like local tables.  The following two queries are equivalent (the first one references the virtual catalog, while the second one references the local metadata copy):&lt;br /&gt;
&lt;br /&gt;
&amp;lt;blockquote&amp;gt;&amp;lt;pre&amp;gt;&lt;br /&gt;
select * from ora_sales_server.scott.dept;&lt;br /&gt;
&lt;br /&gt;
select * from ora_sales.dept;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&amp;lt;/blockquote&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Currently, relational operators such as filters, projections, aggregations, and joins are not pushed down into the SQL query used to access the foreign server.  For example, to implement the following query, all &amp;lt;tt&amp;gt;dept&amp;lt;/tt&amp;gt; rows are fetched from Oracle, and then the filter is applied locally inside of Farrago:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;blockquote&amp;gt;&amp;lt;pre&amp;gt;&lt;br /&gt;
select * from ora_sales.dept&lt;br /&gt;
where deptno=10;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&amp;lt;/blockquote&amp;gt;&lt;br /&gt;
&lt;br /&gt;
True distributed query optimization will be implemented in a future Farrago release.&lt;br /&gt;
&lt;br /&gt;
The following JDBC API calls are made in order to execute a query against&lt;br /&gt;
a foreign table:&lt;br /&gt;
&lt;br /&gt;
* Connection.createStatement&lt;br /&gt;
* Statement.executeQuery&lt;br /&gt;
* Statement.setFetchSize (only if FETCH_SIZE is set)&lt;br /&gt;
* ResultSet.getXXX (where XXX depends on datatype of column queried)&lt;br /&gt;
&lt;br /&gt;
By default, connections to JDBC data sources are in autocommit mode, meaning that each foreign query runs in its own read-only transaction which ends automatically when the top-level Farrago query is closed. (If a single Farrago query accesses multiple foreign tables, then multiple foreign queries may be issued, even if all of the foreign tables are from the same data source.)  The default isolation level is DBMS-dependent, and so the effect of SQL/MED queries on foreign concurrency control (e.g. read locks) also varies by DBMS.&lt;br /&gt;
&lt;br /&gt;
== JDBC Metadata Import ==&lt;br /&gt;
&lt;br /&gt;
Multiple foreign table definitions can be imported into Farrago automatically with the IMPORT FOREIGN SCHEMA statement:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;blockquote&amp;gt;&amp;lt;pre&amp;gt;&lt;br /&gt;
import foreign schema sales&lt;br /&gt;
from server ora_sales_server&lt;br /&gt;
into ora_sales;&lt;br /&gt;
&lt;br /&gt;
select * from ora_sales.emp;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&amp;lt;/blockquote&amp;gt;&lt;br /&gt;
&lt;br /&gt;
The following JDBC API calls are made in order to perform the import:&lt;br /&gt;
&lt;br /&gt;
* DatabaseMetaData.getTables&lt;br /&gt;
* DatabaseMetaData.getColumns&lt;br /&gt;
&lt;br /&gt;
== Updating JDBC Foreign Tables ==&lt;br /&gt;
&lt;br /&gt;
''NOTE'': update functionality is not yet implemented; this section describes the planned support.&lt;br /&gt;
&lt;br /&gt;
The Farrago SQL/MED plugin for JDBC will support the standard INSERT/UPDATE/DELETE DML statements with a foreign table as the target, e.g.&lt;br /&gt;
&lt;br /&gt;
&amp;lt;blockquote&amp;gt;&amp;lt;pre&amp;gt;&lt;br /&gt;
insert into ora_sales.dept &lt;br /&gt;
select * from sales.depts;&lt;br /&gt;
&lt;br /&gt;
delete from ora_sales.dept&lt;br /&gt;
where deptno=10;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&amp;lt;/blockquote&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Each row to be modified by the query corresponds to an individual execution of a prepared statement.  The existence of a primary key is required for DELETE or UPDATE.&lt;br /&gt;
&lt;br /&gt;
New SQL/MED options govern the transactional characteristics of the DML:&lt;br /&gt;
&lt;br /&gt;
{| border=&amp;quot;1&amp;quot; cellspacing=&amp;quot;0&amp;quot; cellpadding=&amp;quot;2&amp;quot;&lt;br /&gt;
! Name&lt;br /&gt;
! Scope&lt;br /&gt;
! Description&lt;br /&gt;
|-&lt;br /&gt;
| DISTRIBUTED_TRANSACTIONS &lt;br /&gt;
| server &lt;br /&gt;
| A setting of 0 (the default) means that when a non-autocommit Farrago transaction accessing this server spans multiple DML statements, all of those statements must target the same server.  A setting of 1 requests that non-autocommit Farrago transactions which access this  server should be implemented as distributed transactions (this requires all foreign servers involved to support the javax.sql.XAConnection interface).&lt;br /&gt;
|-&lt;br /&gt;
| READ_ONLY &lt;br /&gt;
| server &lt;br /&gt;
| 0 to request DML support.  1 for read-only connection (the default).&lt;br /&gt;
|-&lt;br /&gt;
| ISOLATION_LEVEL &lt;br /&gt;
| server &lt;br /&gt;
| Isolation level to use for all access to this server.  If unspecified, default is DBMS-dependent.  This setting is ignored for distributed transactions (for which the isolation level is based on the Farrago session).&lt;br /&gt;
|-&lt;br /&gt;
| TRANSACTION_ROW_LIMIT &lt;br /&gt;
| server or table (table overrides server) &lt;br /&gt;
| Number of rows to modify before committing transaction and starting a new one.  Default is 0 (only commit once all rows have been processed).  This option is ignored when autocommit is disabled in the Farrago session, because then the Farrago-level transaction governs the foreign transaction.  This option is also ignored when this wrapper's AUTOCOMMIT option is set to 'TRUE' (the default), because then every update is committed immediately.&lt;br /&gt;
|-&lt;br /&gt;
| BATCH_ROW_LIMIT &lt;br /&gt;
| server or table (table overrides server) &lt;br /&gt;
| Number of rows to send to foreign server per batch.  Default is 1.&lt;br /&gt;
|}&lt;br /&gt;
&lt;br /&gt;
The following JDBC API calls are made in order to execute DML against&lt;br /&gt;
a foreign table:&lt;br /&gt;
&lt;br /&gt;
* Connection.prepareStatement&lt;br /&gt;
* PreparedStatement.setXXX (where XXX depends on datatype of column updated)&lt;br /&gt;
* PreparedStatement.executeUpdate&lt;br /&gt;
* PreparedStatement.addBatch (if BATCH_ROW_LIMIT specified)&lt;br /&gt;
* Statement.executeBatch (if BATCH_ROW_LIMIT specified)&lt;br /&gt;
* Connection.setReadOnly (if supported)&lt;br /&gt;
* Connection.setTransactionIsolation  (if &amp;lt;tt&amp;gt;ISOLATION_LEVEL&amp;lt;/tt&amp;gt; specified)&lt;br /&gt;
* Connection.commit (if &amp;lt;tt&amp;gt;AUTOCOMMIT&amp;lt;/tt&amp;gt; set to false)&lt;br /&gt;
* Connection.rollback (if &amp;lt;tt&amp;gt;AUTOCOMMIT&amp;lt;/tt&amp;gt; set to false)&lt;br /&gt;
* DatabaseMetaData.getPrimaryKeys (for UPDATE/DELETE)&lt;br /&gt;
&lt;br /&gt;
= Examples =&lt;br /&gt;
== MySQL ==&lt;br /&gt;
&amp;lt;blockquote&amp;gt;&amp;lt;pre&amp;gt;&lt;br /&gt;
create server mysql_jbond&lt;br /&gt;
foreign data wrapper sys_jdbc&lt;br /&gt;
options(&lt;br /&gt;
    driver_class 'com.mysql.jdbc.Driver',&lt;br /&gt;
    url 'jdbc:mysql://172.27.0.204/sandbox',&lt;br /&gt;
    user_name 'jbond',&lt;br /&gt;
    password 'MyEyesOnly',&lt;br /&gt;
    validation_query 'select 1 from dual');&lt;br /&gt;
&amp;lt;/pre&amp;gt;&amp;lt;/blockquote&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbUserFaq</id>
		<title>LucidDbUserFaq</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbUserFaq"/>
				<updated>2011-11-21T22:29:50Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* What is the difference between sqllineClient and sqllineEngine? */&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;= FAQ List =&lt;br /&gt;
&lt;br /&gt;
This page is the FAQ list for LucidDB users.  For questions about the project, see [http://www.luciddb.org/projectFaq.html the project FAQ on the website].&lt;br /&gt;
&lt;br /&gt;
== Startup Error for libgcj ==&lt;br /&gt;
&lt;br /&gt;
'''Question'''&lt;br /&gt;
&lt;br /&gt;
I got an error about initializeClass on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Exception in thread &amp;quot;main&amp;quot; java.lang.NoClassDefFoundError: &lt;br /&gt;
net.sf.farrago.db.FarragoDatabase&lt;br /&gt;
    at java.lang.Class.initializeClass(libgcj.so.90)&lt;br /&gt;
    at &lt;br /&gt;
net.sf.farrago.db.FarragoDbSingleton.pinReference(FarragoDbSingleton.java:100)&lt;br /&gt;
    at &lt;br /&gt;
net.sf.farrago.server.FarragoAbstractServer.start(FarragoAbstractServer.java:232)&lt;br /&gt;
    at com.lucidera.farrago.LucidDbServer.main(LucidDbServer.java:61)&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
The GCJ virtual machine (packaged by default with many Linux distributions) is not sufficient for use with LucidDB.  Instead, please install a [http://java.sun.com/javase/downloads/index.jsp Sun Java JVM], set your JAVA_HOME to the Sun JRE, then do a fresh unzip/install.&lt;br /&gt;
&lt;br /&gt;
== Startup Error for xlib xcb ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I got an error similar to one of the ones below on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
java: xcb_xlib.c:50: xcb_xlib_unlock: Assertion `c-&amp;gt;xlib.lock' failed.&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Locking assertion failure. Backtrace:&lt;br /&gt;
#0 /usr/lib/libxcb-xlib.so.0 [0xb7361767]&lt;br /&gt;
#1 /usr/lib/libxcb-xlib.so.0(xcb_xlib_unlock+0x31) [0xb73618b1]&lt;br /&gt;
#2 /usr/lib/libX11.so.6(_XReply+0xfd) [0x99e591bd]&lt;br /&gt;
#3 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so [0x9b539dce]&lt;br /&gt;
#4 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so [0x9b523d77]&lt;br /&gt;
#5 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so [0x9b523ef3]&lt;br /&gt;
#6 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so(Java_sun_awt_X11GraphicsEnvironment_initDisplay+0x26) [0x9b524136] &lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
The easiest way is to edit the '''bin/lucidDbServer''' startup script and add '''-Dorg.eigenbase.util.AWT_WORKAROUND=off''' to the Java command line.  (This will be done as part of the out-of-the-box packaging in the next release since this seems to be a common problem.)&lt;br /&gt;
&lt;br /&gt;
See [http://sourceforge.net/mailarchive/message.php?msg_id=613385.33648.qm%40web30806.mail.mud.yahoo.com this mailing list thread] for more discussion.&lt;br /&gt;
&lt;br /&gt;
== Startup Error For libaio ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I got the error below on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Loading database...&lt;br /&gt;
Exception in thread &amp;quot;main&amp;quot; org.eigenbase.util.EigenbaseException: Failed to load database&lt;br /&gt;
    at net.sf.farrago.resource.FarragoResource$_Def1.ex(FarragoResource.java:1789)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDatabase.&amp;lt;init&amp;gt;(FarragoDatabase.java:269)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDbSingleton.pinReference(FarragoDbSingleton.java:89)&lt;br /&gt;
    at net.sf.farrago.server.FarragoAbstractServer.start(FarragoAbstractServer.java:183)&lt;br /&gt;
    at com.lucidera.farrago.LucidDbServer.main(LucidDbServer.java:61)&lt;br /&gt;
Caused by: org.eigenbase.util.EigenbaseException: FennelResource.en_US.libaioRequired()&lt;br /&gt;
    at net.sf.farrago.resource.FarragoResource$_Def0.ex(FarragoResource.java:1766)&lt;br /&gt;
    at net.sf.farrago.fennel.FennelDbHandle.handleNativeException(FennelDbHandle.java:315)&lt;br /&gt;
    at net.sf.farrago.fennel.FennelDbHandle.executeCmd(FennelDbHandle.java:242)&lt;br /&gt;
    at net.sf.farrago.fennel.FennelDbHandle.&amp;lt;init&amp;gt;(FennelDbHandle.java:90)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDatabase.loadFennel(FarragoDatabase.java:509)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDatabase.&amp;lt;init&amp;gt;(FarragoDatabase.java:189)&lt;br /&gt;
    ... 3 more&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
On a Debian-based system such as Ubuntu:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
apt-get install libaio1&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
(on older versions it may be libaio instead of libaio1)&lt;br /&gt;
&lt;br /&gt;
On A RedHat-based system:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
yum install libaio1&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
After that, you should be able to start the server.  If you keep the default setting of aioLinux, you'll want to increase LucidDB's buffer pool size, and also preallocate data files, as mentioned in [[LucidDbPerformanceTuning#I.2FO_Scheduler]].&lt;br /&gt;
&lt;br /&gt;
== Startup Error For mmap ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I got the error below on startup, or when trying to increase the [[LucidDbBufferPoolSizing|buffer pool size]].  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Error: System call failed:  mmap failed: Cannot allocate memory (state=,code=0)&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
Assuming you actually have sufficient physical memory, and are using a 64-bit build if trying to allocate a large buffer pool, check these:&lt;br /&gt;
&lt;br /&gt;
# Make sure '''ulimit -v''' returns the string &amp;quot;unlimited&amp;quot;.  Setting a quota on virtual memory size can cause the error above.&lt;br /&gt;
# Make sure you aren't accidentally using a [[#Debug Builds|debug build]].  Debug builds use '''mprotect''' to guard against buffer overruns, and this eats up a lot of additional memory and OS page table space.&lt;br /&gt;
&lt;br /&gt;
== Startup Error For Windows ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I got an error trying to load the native code DLL's on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
Make sure you have installed the [http://www.microsoft.com/downloads/details.aspx?FamilyID=9b2da534-3e03-4391-8a4d-074b9f2bc1bf&amp;amp;displaylang=en Visual C++ 2008 Redistributable Package].&lt;br /&gt;
&lt;br /&gt;
== Client Connectivity Problems ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I can't get sqllineClient, Squirrel, and other clients to talk to the LucidDB server.  What's wrong?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
You may need to follow the instructions in [[ClientServerLocalhost]] to fix '''/etc/hosts'''.&lt;br /&gt;
&lt;br /&gt;
== Loading Large Data Files ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I have a large data file in txt format. I need to bulk load it into Lucid tables. What's the best way to do this?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
Create a flat file foreign table corresponding to your flat file, and then use an INSERT-SELECT statement to load from the flat file table to your target table.&lt;br /&gt;
&lt;br /&gt;
See [[LucidDbFlatFileWrapper]] for details.&lt;br /&gt;
&lt;br /&gt;
[[LucidDbEtlTutorial#Define_Sources]] also has an example that shows you how to create a flatfile foreign data wrapper, import it, and then access tables within the imported foreign schema.&lt;br /&gt;
&lt;br /&gt;
== ETL Tutorial ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
In attempting to follow the ETL Tutorial I got an error because directory examples/etl/filedata/ does not exist.  What should I do?&lt;br /&gt;
&lt;br /&gt;
'''Answer'''&lt;br /&gt;
&lt;br /&gt;
Make sure you followed the instructions to start the server like this:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
bin/lucidDbServer&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
The tutorial relies on this for the relative paths to come out right.  Otherwise, you need to edit the scripts so that they supply absolute paths.&lt;br /&gt;
&lt;br /&gt;
== Case-Sensitive Foreign Schema Name ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to import a foreign schema from a server like PostgreSQL with case-sensitive identifiers, and I'm not getting any tables back.  How come?&lt;br /&gt;
&lt;br /&gt;
'''Answer'''&lt;br /&gt;
&lt;br /&gt;
Make sure you quote the foreign schema name in the IMPORT FOREIGN SCHEMA command:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
import foreign schema &amp;quot;public&amp;quot;&lt;br /&gt;
from server postgres_abc&lt;br /&gt;
into ldb_schema &lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Likewise for [http://sourceforge.net/mailarchive/forum.php?thread_name=4891317F.3040406%40gmail.com&amp;amp;forum_name=luciddb-users foreign tables].&lt;br /&gt;
&lt;br /&gt;
== Default Port ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
What is the default listening port number for LucidDB?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
By default, LucidDB listens for HTTP connections on port 8034.  If you want to specify it explicitly from the client side, use a URL like &lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
jdbc:luciddb:http://1.2.3.4:8034&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
You can change a server's port number by setting system parameter '''serverHttpPort'''; see [[LucidDbSystemParameters]] for more information.&lt;br /&gt;
&lt;br /&gt;
== JDBC Driver Class ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to connect to LucidDB from my own program, but I always get an exception like java.lang.ClassNotFoundException: org.luciddb.jdbc.LucidDbClientDriver.  What should I do to fix it?&lt;br /&gt;
&lt;br /&gt;
'''Answer''':&lt;br /&gt;
&lt;br /&gt;
Make sure you have '''luciddb/plugin/LucidDbClient.jar''' on your program's classpath.&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to use LucidDbLocalDriver to access the server from a client program running on the same (local) machine, but it doesn't work.  Why not?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
The &amp;quot;local&amp;quot; driver is local only in the sense &amp;quot;in the same java process&amp;quot;, not in the sense &amp;quot;on the same machine&amp;quot;, so you'll need to  &lt;br /&gt;
use the HTTP driver.  Use driver class '''org.luciddb.jdbc.LucidDbClientDriver''' unless the client and server are actually running in the same JVM.&lt;br /&gt;
&lt;br /&gt;
== Slow INSERT performance ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to INSERT lots of rows using the INSERT command, but the performance is terrible!  What can I do to improve the performance?&lt;br /&gt;
&lt;br /&gt;
'''Answer''':&lt;br /&gt;
&lt;br /&gt;
There are inherent issues with single row INSERTs in a column store database.  Bulk INSERTs or UPDATEs are best accomplished (with orders of magnitude increases in performance) via a bulk loading method (see [[LucidDbEtlTutorial]] for an example).&lt;br /&gt;
&lt;br /&gt;
== Missing Columns ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I created a wide table, and some of the columns seem to have gone AWOL.  What gives?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
If you're using sqlline, see this [http://sourceforge.net/mailarchive/forum.php?thread_name=221131.98865.qm%40web51307.mail.re2.yahoo.com&amp;amp;forum_name=luciddb-users mailing list thread].&lt;br /&gt;
&lt;br /&gt;
== Running As A Service Or Daemon ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
How do I run LucidDB as a service on Windows or a daemon on Unix?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
See [[LucidDbAsDaemonService]].&lt;br /&gt;
&lt;br /&gt;
== J2EE Embedding ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
How do I run LucidDB inside of a J2EE app server?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
See [[LucidDbAsManagedBean]].&lt;br /&gt;
&lt;br /&gt;
== Catalog File Locking ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I got an exception about &amp;quot;Failed to lock catalog file&amp;quot; on server startup; what does this mean?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
It means you already have a server process running from the same installation, and only one can be running at a time.  See this [http://sourceforge.net/mailarchive/forum.php?thread_name=381602.46904.qm%40web51306.mail.re2.yahoo.com&amp;amp;forum_name=luciddb-users mailing list thread].  For information on how to start LucidDB on a remote server, see [http://sourceforge.net/mailarchive/forum.php?thread_name=4890A61F.3050505%40gmail.com&amp;amp;forum_name=luciddb-users this thread].&lt;br /&gt;
&lt;br /&gt;
== Debug Builds ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I built LucidDB [[LucidDbBuildFromSourceDistribution|from source]] and now it's really slow.  How come?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
By default, '''initBuild.sh''' produces an unoptimized debug build, which is an order of magnitude slower than release builds.  Be sure to specify the '''--with-optimization --without-debug''' flags to match the release configuration, unless you're actually planning to hack on LucidDB native code and use gdb.&lt;br /&gt;
&lt;br /&gt;
== Beyond Java ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
Can I use LucidDB in a non-Java application?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
[[LucidDbNonJavaClients|Maybe]].&lt;br /&gt;
&lt;br /&gt;
== Compression Statistics ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
How can I tell how well compression is working?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
It can be difficult to determine this from the size of '''db.dat''', since not all of the pages may be currently in use.&lt;br /&gt;
&lt;br /&gt;
To find out how many pages are currently in use across all tables, across all page versions, execute this:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
alter system deallocate old;&lt;br /&gt;
select counter_value from sys_root.dba_performance_counters where counter_name='DatabasePagesAllocated';&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Multiply the result by 32KB (the size of one page).&lt;br /&gt;
&lt;br /&gt;
To study compression effectiveness for a particular table, execute this:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
alter system deallocate old;&lt;br /&gt;
analyze table t estimate statistics for all columns;&lt;br /&gt;
select index_name, pages from sys_boot.mgmt.page_counts_view where table_schem='YOUR_SCHEMA_NAME' and table_name='YOUR_TABLE_NAME';&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Indexes with names starting with &amp;quot;SYS$CLUSTERED&amp;quot; represent the compressed column storage.  Every table has a single &amp;quot;SYS$DELETION_INDEX&amp;quot; which tracks deleted rows.  A table may have SYS$ indexes corresponding to PRIMARY KEY and UNIQUE constraint defintions.  Any other indexes are named indexes you have created.&lt;br /&gt;
&lt;br /&gt;
== OpenSUSE Performance ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
Why is LucidDB so slow for short queries on OpenSUSE?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
See the discussion on the ext3 barrier setting in [http://n2.nabble.com/Row-has-too-many-columns-td2789557.html this thread], which contains a workaround.&lt;br /&gt;
&lt;br /&gt;
== Identifier Quoting - Dealing with mixed case Schema, Table and Column names ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
Why are the rules for this so confusing?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
LucidDB strictly adheres to SQL:2003 in this regard.  When you don't quote identifiers, they are implicitly uppercased as part of parsing (e.g. yoUr_table becomes YOUR_TABLE).  When you quote them, case is preserved (e.g. &amp;quot;yoUr_table&amp;quot; stays exactly like that).  You must quote them if they are reserved words or contain special characters.  For compound identifiers, the quotes go around each component, e.g. &amp;quot;yoUr_schema&amp;quot;.&amp;quot;yoUr_table&amp;quot; not &amp;quot;yoUr_schema.yoUr_table&amp;quot;).&lt;br /&gt;
&lt;br /&gt;
One point of confusion arises from the SET SCHEMA command.  The actual syntax is '''SET SCHEMA &amp;lt;character-expression&amp;gt;''', not '''SET SCHEMA &amp;lt;identifier&amp;gt;'''.  So, you have to write&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA '&amp;quot;yoUr_schema&amp;quot;'&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
not&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA &amp;quot;yoUr_schema&amp;quot;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
If you have a schema named EXTRACTION_SCHEMA (all upper case), this works:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA 'extraction_schema'&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
The reason this works is that the single quotes are delimiting the character literal (not the identifier).  The parsing for this expression first evaluates the character expression, then interprets the result as a (possibly-quoted) identifier.  This allows you to do things like&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA 'SCHEMA_FOR_' || CURRENT_USER&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
So if user FRANCISCO logs in, he'll get SCHEMA_FOR_FRANCISCO set as default after executing the expression above.&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''Normal SQL Queries with mixed case table or column names'''&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
When you use normal '''SELECT''' style queries you can expect to use double quotes to work around case issues.&lt;br /&gt;
Example:&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
select &amp;quot;tableOne&amp;quot;.&amp;quot;myColumn&amp;quot; from &amp;quot;SchemaName&amp;quot;.&amp;quot;tableOne&amp;quot;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''Function Calls with mixed case table or column names'''&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
Look at how the parameter itself is in single quotes, the column name is in double quotes.&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
create_table_as ('select &amp;quot;myCol&amp;quot; from &amp;quot;myTable&amp;quot;', '&amp;quot;TARGETtable&amp;quot;')&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== What is the difference between sqllineClient and sqllineEngine? ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
What is the difference between sqllineClient and sqllineEngine?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''sqllineEngine''' is LucidDB without the client/server part.&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
There are two typs of JDBC services&amp;lt;br&amp;gt;&lt;br /&gt;
Engine and vJDBC&amp;lt;br&amp;gt;&lt;br /&gt;
Engine allows something else in Java machine (ie, sqllineEngine) to connect&amp;lt;br&amp;gt;&lt;br /&gt;
JDBC starts listening on port 8034 to allow remote JDBC to connect&amp;lt;br&amp;gt;&lt;br /&gt;
sqllineEngine starts Engine&amp;lt;br&amp;gt;&lt;br /&gt;
lucidDbServer starts vJDBC&amp;lt;br&amp;gt;&lt;br /&gt;
sqllineClient connects to lucidDbServer via vJDBC&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''sqllineClient''' is a SQL client.&amp;lt;br&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbUserFaq</id>
		<title>LucidDbUserFaq</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbUserFaq"/>
				<updated>2011-11-21T22:18:08Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: Added FAQ - difference between sqllineClient and sqllineEngine&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;= FAQ List =&lt;br /&gt;
&lt;br /&gt;
This page is the FAQ list for LucidDB users.  For questions about the project, see [http://www.luciddb.org/projectFaq.html the project FAQ on the website].&lt;br /&gt;
&lt;br /&gt;
== Startup Error for libgcj ==&lt;br /&gt;
&lt;br /&gt;
'''Question'''&lt;br /&gt;
&lt;br /&gt;
I got an error about initializeClass on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Exception in thread &amp;quot;main&amp;quot; java.lang.NoClassDefFoundError: &lt;br /&gt;
net.sf.farrago.db.FarragoDatabase&lt;br /&gt;
    at java.lang.Class.initializeClass(libgcj.so.90)&lt;br /&gt;
    at &lt;br /&gt;
net.sf.farrago.db.FarragoDbSingleton.pinReference(FarragoDbSingleton.java:100)&lt;br /&gt;
    at &lt;br /&gt;
net.sf.farrago.server.FarragoAbstractServer.start(FarragoAbstractServer.java:232)&lt;br /&gt;
    at com.lucidera.farrago.LucidDbServer.main(LucidDbServer.java:61)&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
The GCJ virtual machine (packaged by default with many Linux distributions) is not sufficient for use with LucidDB.  Instead, please install a [http://java.sun.com/javase/downloads/index.jsp Sun Java JVM], set your JAVA_HOME to the Sun JRE, then do a fresh unzip/install.&lt;br /&gt;
&lt;br /&gt;
== Startup Error for xlib xcb ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I got an error similar to one of the ones below on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
java: xcb_xlib.c:50: xcb_xlib_unlock: Assertion `c-&amp;gt;xlib.lock' failed.&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Locking assertion failure. Backtrace:&lt;br /&gt;
#0 /usr/lib/libxcb-xlib.so.0 [0xb7361767]&lt;br /&gt;
#1 /usr/lib/libxcb-xlib.so.0(xcb_xlib_unlock+0x31) [0xb73618b1]&lt;br /&gt;
#2 /usr/lib/libX11.so.6(_XReply+0xfd) [0x99e591bd]&lt;br /&gt;
#3 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so [0x9b539dce]&lt;br /&gt;
#4 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so [0x9b523d77]&lt;br /&gt;
#5 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so [0x9b523ef3]&lt;br /&gt;
#6 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so(Java_sun_awt_X11GraphicsEnvironment_initDisplay+0x26) [0x9b524136] &lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
The easiest way is to edit the '''bin/lucidDbServer''' startup script and add '''-Dorg.eigenbase.util.AWT_WORKAROUND=off''' to the Java command line.  (This will be done as part of the out-of-the-box packaging in the next release since this seems to be a common problem.)&lt;br /&gt;
&lt;br /&gt;
See [http://sourceforge.net/mailarchive/message.php?msg_id=613385.33648.qm%40web30806.mail.mud.yahoo.com this mailing list thread] for more discussion.&lt;br /&gt;
&lt;br /&gt;
== Startup Error For libaio ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I got the error below on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Loading database...&lt;br /&gt;
Exception in thread &amp;quot;main&amp;quot; org.eigenbase.util.EigenbaseException: Failed to load database&lt;br /&gt;
    at net.sf.farrago.resource.FarragoResource$_Def1.ex(FarragoResource.java:1789)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDatabase.&amp;lt;init&amp;gt;(FarragoDatabase.java:269)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDbSingleton.pinReference(FarragoDbSingleton.java:89)&lt;br /&gt;
    at net.sf.farrago.server.FarragoAbstractServer.start(FarragoAbstractServer.java:183)&lt;br /&gt;
    at com.lucidera.farrago.LucidDbServer.main(LucidDbServer.java:61)&lt;br /&gt;
Caused by: org.eigenbase.util.EigenbaseException: FennelResource.en_US.libaioRequired()&lt;br /&gt;
    at net.sf.farrago.resource.FarragoResource$_Def0.ex(FarragoResource.java:1766)&lt;br /&gt;
    at net.sf.farrago.fennel.FennelDbHandle.handleNativeException(FennelDbHandle.java:315)&lt;br /&gt;
    at net.sf.farrago.fennel.FennelDbHandle.executeCmd(FennelDbHandle.java:242)&lt;br /&gt;
    at net.sf.farrago.fennel.FennelDbHandle.&amp;lt;init&amp;gt;(FennelDbHandle.java:90)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDatabase.loadFennel(FarragoDatabase.java:509)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDatabase.&amp;lt;init&amp;gt;(FarragoDatabase.java:189)&lt;br /&gt;
    ... 3 more&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
On a Debian-based system such as Ubuntu:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
apt-get install libaio1&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
(on older versions it may be libaio instead of libaio1)&lt;br /&gt;
&lt;br /&gt;
On A RedHat-based system:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
yum install libaio1&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
After that, you should be able to start the server.  If you keep the default setting of aioLinux, you'll want to increase LucidDB's buffer pool size, and also preallocate data files, as mentioned in [[LucidDbPerformanceTuning#I.2FO_Scheduler]].&lt;br /&gt;
&lt;br /&gt;
== Startup Error For mmap ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I got the error below on startup, or when trying to increase the [[LucidDbBufferPoolSizing|buffer pool size]].  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Error: System call failed:  mmap failed: Cannot allocate memory (state=,code=0)&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
Assuming you actually have sufficient physical memory, and are using a 64-bit build if trying to allocate a large buffer pool, check these:&lt;br /&gt;
&lt;br /&gt;
# Make sure '''ulimit -v''' returns the string &amp;quot;unlimited&amp;quot;.  Setting a quota on virtual memory size can cause the error above.&lt;br /&gt;
# Make sure you aren't accidentally using a [[#Debug Builds|debug build]].  Debug builds use '''mprotect''' to guard against buffer overruns, and this eats up a lot of additional memory and OS page table space.&lt;br /&gt;
&lt;br /&gt;
== Startup Error For Windows ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I got an error trying to load the native code DLL's on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
Make sure you have installed the [http://www.microsoft.com/downloads/details.aspx?FamilyID=9b2da534-3e03-4391-8a4d-074b9f2bc1bf&amp;amp;displaylang=en Visual C++ 2008 Redistributable Package].&lt;br /&gt;
&lt;br /&gt;
== Client Connectivity Problems ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I can't get sqllineClient, Squirrel, and other clients to talk to the LucidDB server.  What's wrong?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
You may need to follow the instructions in [[ClientServerLocalhost]] to fix '''/etc/hosts'''.&lt;br /&gt;
&lt;br /&gt;
== Loading Large Data Files ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I have a large data file in txt format. I need to bulk load it into Lucid tables. What's the best way to do this?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
Create a flat file foreign table corresponding to your flat file, and then use an INSERT-SELECT statement to load from the flat file table to your target table.&lt;br /&gt;
&lt;br /&gt;
See [[LucidDbFlatFileWrapper]] for details.&lt;br /&gt;
&lt;br /&gt;
[[LucidDbEtlTutorial#Define_Sources]] also has an example that shows you how to create a flatfile foreign data wrapper, import it, and then access tables within the imported foreign schema.&lt;br /&gt;
&lt;br /&gt;
== ETL Tutorial ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
In attempting to follow the ETL Tutorial I got an error because directory examples/etl/filedata/ does not exist.  What should I do?&lt;br /&gt;
&lt;br /&gt;
'''Answer'''&lt;br /&gt;
&lt;br /&gt;
Make sure you followed the instructions to start the server like this:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
bin/lucidDbServer&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
The tutorial relies on this for the relative paths to come out right.  Otherwise, you need to edit the scripts so that they supply absolute paths.&lt;br /&gt;
&lt;br /&gt;
== Case-Sensitive Foreign Schema Name ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to import a foreign schema from a server like PostgreSQL with case-sensitive identifiers, and I'm not getting any tables back.  How come?&lt;br /&gt;
&lt;br /&gt;
'''Answer'''&lt;br /&gt;
&lt;br /&gt;
Make sure you quote the foreign schema name in the IMPORT FOREIGN SCHEMA command:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
import foreign schema &amp;quot;public&amp;quot;&lt;br /&gt;
from server postgres_abc&lt;br /&gt;
into ldb_schema &lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Likewise for [http://sourceforge.net/mailarchive/forum.php?thread_name=4891317F.3040406%40gmail.com&amp;amp;forum_name=luciddb-users foreign tables].&lt;br /&gt;
&lt;br /&gt;
== Default Port ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
What is the default listening port number for LucidDB?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
By default, LucidDB listens for HTTP connections on port 8034.  If you want to specify it explicitly from the client side, use a URL like &lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
jdbc:luciddb:http://1.2.3.4:8034&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
You can change a server's port number by setting system parameter '''serverHttpPort'''; see [[LucidDbSystemParameters]] for more information.&lt;br /&gt;
&lt;br /&gt;
== JDBC Driver Class ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to connect to LucidDB from my own program, but I always get an exception like java.lang.ClassNotFoundException: org.luciddb.jdbc.LucidDbClientDriver.  What should I do to fix it?&lt;br /&gt;
&lt;br /&gt;
'''Answer''':&lt;br /&gt;
&lt;br /&gt;
Make sure you have '''luciddb/plugin/LucidDbClient.jar''' on your program's classpath.&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to use LucidDbLocalDriver to access the server from a client program running on the same (local) machine, but it doesn't work.  Why not?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
The &amp;quot;local&amp;quot; driver is local only in the sense &amp;quot;in the same java process&amp;quot;, not in the sense &amp;quot;on the same machine&amp;quot;, so you'll need to  &lt;br /&gt;
use the HTTP driver.  Use driver class '''org.luciddb.jdbc.LucidDbClientDriver''' unless the client and server are actually running in the same JVM.&lt;br /&gt;
&lt;br /&gt;
== Slow INSERT performance ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to INSERT lots of rows using the INSERT command, but the performance is terrible!  What can I do to improve the performance?&lt;br /&gt;
&lt;br /&gt;
'''Answer''':&lt;br /&gt;
&lt;br /&gt;
There are inherent issues with single row INSERTs in a column store database.  Bulk INSERTs or UPDATEs are best accomplished (with orders of magnitude increases in performance) via a bulk loading method (see [[LucidDbEtlTutorial]] for an example).&lt;br /&gt;
&lt;br /&gt;
== Missing Columns ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I created a wide table, and some of the columns seem to have gone AWOL.  What gives?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
If you're using sqlline, see this [http://sourceforge.net/mailarchive/forum.php?thread_name=221131.98865.qm%40web51307.mail.re2.yahoo.com&amp;amp;forum_name=luciddb-users mailing list thread].&lt;br /&gt;
&lt;br /&gt;
== Running As A Service Or Daemon ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
How do I run LucidDB as a service on Windows or a daemon on Unix?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
See [[LucidDbAsDaemonService]].&lt;br /&gt;
&lt;br /&gt;
== J2EE Embedding ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
How do I run LucidDB inside of a J2EE app server?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
See [[LucidDbAsManagedBean]].&lt;br /&gt;
&lt;br /&gt;
== Catalog File Locking ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I got an exception about &amp;quot;Failed to lock catalog file&amp;quot; on server startup; what does this mean?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
It means you already have a server process running from the same installation, and only one can be running at a time.  See this [http://sourceforge.net/mailarchive/forum.php?thread_name=381602.46904.qm%40web51306.mail.re2.yahoo.com&amp;amp;forum_name=luciddb-users mailing list thread].  For information on how to start LucidDB on a remote server, see [http://sourceforge.net/mailarchive/forum.php?thread_name=4890A61F.3050505%40gmail.com&amp;amp;forum_name=luciddb-users this thread].&lt;br /&gt;
&lt;br /&gt;
== Debug Builds ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I built LucidDB [[LucidDbBuildFromSourceDistribution|from source]] and now it's really slow.  How come?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
By default, '''initBuild.sh''' produces an unoptimized debug build, which is an order of magnitude slower than release builds.  Be sure to specify the '''--with-optimization --without-debug''' flags to match the release configuration, unless you're actually planning to hack on LucidDB native code and use gdb.&lt;br /&gt;
&lt;br /&gt;
== Beyond Java ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
Can I use LucidDB in a non-Java application?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
[[LucidDbNonJavaClients|Maybe]].&lt;br /&gt;
&lt;br /&gt;
== Compression Statistics ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
How can I tell how well compression is working?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
It can be difficult to determine this from the size of '''db.dat''', since not all of the pages may be currently in use.&lt;br /&gt;
&lt;br /&gt;
To find out how many pages are currently in use across all tables, across all page versions, execute this:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
alter system deallocate old;&lt;br /&gt;
select counter_value from sys_root.dba_performance_counters where counter_name='DatabasePagesAllocated';&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Multiply the result by 32KB (the size of one page).&lt;br /&gt;
&lt;br /&gt;
To study compression effectiveness for a particular table, execute this:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
alter system deallocate old;&lt;br /&gt;
analyze table t estimate statistics for all columns;&lt;br /&gt;
select index_name, pages from sys_boot.mgmt.page_counts_view where table_schem='YOUR_SCHEMA_NAME' and table_name='YOUR_TABLE_NAME';&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Indexes with names starting with &amp;quot;SYS$CLUSTERED&amp;quot; represent the compressed column storage.  Every table has a single &amp;quot;SYS$DELETION_INDEX&amp;quot; which tracks deleted rows.  A table may have SYS$ indexes corresponding to PRIMARY KEY and UNIQUE constraint defintions.  Any other indexes are named indexes you have created.&lt;br /&gt;
&lt;br /&gt;
== OpenSUSE Performance ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
Why is LucidDB so slow for short queries on OpenSUSE?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
See the discussion on the ext3 barrier setting in [http://n2.nabble.com/Row-has-too-many-columns-td2789557.html this thread], which contains a workaround.&lt;br /&gt;
&lt;br /&gt;
== Identifier Quoting - Dealing with mixed case Schema, Table and Column names ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
Why are the rules for this so confusing?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
LucidDB strictly adheres to SQL:2003 in this regard.  When you don't quote identifiers, they are implicitly uppercased as part of parsing (e.g. yoUr_table becomes YOUR_TABLE).  When you quote them, case is preserved (e.g. &amp;quot;yoUr_table&amp;quot; stays exactly like that).  You must quote them if they are reserved words or contain special characters.  For compound identifiers, the quotes go around each component, e.g. &amp;quot;yoUr_schema&amp;quot;.&amp;quot;yoUr_table&amp;quot; not &amp;quot;yoUr_schema.yoUr_table&amp;quot;).&lt;br /&gt;
&lt;br /&gt;
One point of confusion arises from the SET SCHEMA command.  The actual syntax is '''SET SCHEMA &amp;lt;character-expression&amp;gt;''', not '''SET SCHEMA &amp;lt;identifier&amp;gt;'''.  So, you have to write&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA '&amp;quot;yoUr_schema&amp;quot;'&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
not&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA &amp;quot;yoUr_schema&amp;quot;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
If you have a schema named EXTRACTION_SCHEMA (all upper case), this works:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA 'extraction_schema'&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
The reason this works is that the single quotes are delimiting the character literal (not the identifier).  The parsing for this expression first evaluates the character expression, then interprets the result as a (possibly-quoted) identifier.  This allows you to do things like&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA 'SCHEMA_FOR_' || CURRENT_USER&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
So if user FRANCISCO logs in, he'll get SCHEMA_FOR_FRANCISCO set as default after executing the expression above.&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''Normal SQL Queries with mixed case table or column names'''&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
When you use normal '''SELECT''' style queries you can expect to use double quotes to work around case issues.&lt;br /&gt;
Example:&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
select &amp;quot;tableOne&amp;quot;.&amp;quot;myColumn&amp;quot; from &amp;quot;SchemaName&amp;quot;.&amp;quot;tableOne&amp;quot;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''Function Calls with mixed case table or column names'''&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
Look at how the parameter itself is in single quotes, the column name is in double quotes.&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
create_table_as ('select &amp;quot;myCol&amp;quot; from &amp;quot;myTable&amp;quot;', '&amp;quot;TARGETtable&amp;quot;')&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== What is the difference between sqllineClient and sqllineEngine? ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
What is the difference between sqllineClient and sqllineEngine?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
sqllineEngine is LucidDB without the client/server part.&amp;lt;br&amp;gt;&lt;br /&gt;
Starts the server, connects via JDBC.  When you &amp;quot;quit&amp;quot; engine, the database shuts down&lt;br /&gt;
sqllineEngine is like single user mode.&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbUserFaq</id>
		<title>LucidDbUserFaq</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbUserFaq"/>
				<updated>2011-11-16T20:50:43Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* Identifier Quoting */&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;= FAQ List =&lt;br /&gt;
&lt;br /&gt;
This page is the FAQ list for LucidDB users.  For questions about the project, see [http://www.luciddb.org/projectFaq.html the project FAQ on the website].&lt;br /&gt;
&lt;br /&gt;
== Startup Error for libgcj ==&lt;br /&gt;
&lt;br /&gt;
'''Question'''&lt;br /&gt;
&lt;br /&gt;
I got an error about initializeClass on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Exception in thread &amp;quot;main&amp;quot; java.lang.NoClassDefFoundError: &lt;br /&gt;
net.sf.farrago.db.FarragoDatabase&lt;br /&gt;
    at java.lang.Class.initializeClass(libgcj.so.90)&lt;br /&gt;
    at &lt;br /&gt;
net.sf.farrago.db.FarragoDbSingleton.pinReference(FarragoDbSingleton.java:100)&lt;br /&gt;
    at &lt;br /&gt;
net.sf.farrago.server.FarragoAbstractServer.start(FarragoAbstractServer.java:232)&lt;br /&gt;
    at com.lucidera.farrago.LucidDbServer.main(LucidDbServer.java:61)&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
The GCJ virtual machine (packaged by default with many Linux distributions) is not sufficient for use with LucidDB.  Instead, please install a [http://java.sun.com/javase/downloads/index.jsp Sun Java JVM], set your JAVA_HOME to the Sun JRE, then do a fresh unzip/install.&lt;br /&gt;
&lt;br /&gt;
== Startup Error for xlib xcb ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I got an error similar to one of the ones below on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
java: xcb_xlib.c:50: xcb_xlib_unlock: Assertion `c-&amp;gt;xlib.lock' failed.&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Locking assertion failure. Backtrace:&lt;br /&gt;
#0 /usr/lib/libxcb-xlib.so.0 [0xb7361767]&lt;br /&gt;
#1 /usr/lib/libxcb-xlib.so.0(xcb_xlib_unlock+0x31) [0xb73618b1]&lt;br /&gt;
#2 /usr/lib/libX11.so.6(_XReply+0xfd) [0x99e591bd]&lt;br /&gt;
#3 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so [0x9b539dce]&lt;br /&gt;
#4 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so [0x9b523d77]&lt;br /&gt;
#5 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so [0x9b523ef3]&lt;br /&gt;
#6 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so(Java_sun_awt_X11GraphicsEnvironment_initDisplay+0x26) [0x9b524136] &lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
The easiest way is to edit the '''bin/lucidDbServer''' startup script and add '''-Dorg.eigenbase.util.AWT_WORKAROUND=off''' to the Java command line.  (This will be done as part of the out-of-the-box packaging in the next release since this seems to be a common problem.)&lt;br /&gt;
&lt;br /&gt;
See [http://sourceforge.net/mailarchive/message.php?msg_id=613385.33648.qm%40web30806.mail.mud.yahoo.com this mailing list thread] for more discussion.&lt;br /&gt;
&lt;br /&gt;
== Startup Error For libaio ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I got the error below on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Loading database...&lt;br /&gt;
Exception in thread &amp;quot;main&amp;quot; org.eigenbase.util.EigenbaseException: Failed to load database&lt;br /&gt;
    at net.sf.farrago.resource.FarragoResource$_Def1.ex(FarragoResource.java:1789)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDatabase.&amp;lt;init&amp;gt;(FarragoDatabase.java:269)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDbSingleton.pinReference(FarragoDbSingleton.java:89)&lt;br /&gt;
    at net.sf.farrago.server.FarragoAbstractServer.start(FarragoAbstractServer.java:183)&lt;br /&gt;
    at com.lucidera.farrago.LucidDbServer.main(LucidDbServer.java:61)&lt;br /&gt;
Caused by: org.eigenbase.util.EigenbaseException: FennelResource.en_US.libaioRequired()&lt;br /&gt;
    at net.sf.farrago.resource.FarragoResource$_Def0.ex(FarragoResource.java:1766)&lt;br /&gt;
    at net.sf.farrago.fennel.FennelDbHandle.handleNativeException(FennelDbHandle.java:315)&lt;br /&gt;
    at net.sf.farrago.fennel.FennelDbHandle.executeCmd(FennelDbHandle.java:242)&lt;br /&gt;
    at net.sf.farrago.fennel.FennelDbHandle.&amp;lt;init&amp;gt;(FennelDbHandle.java:90)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDatabase.loadFennel(FarragoDatabase.java:509)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDatabase.&amp;lt;init&amp;gt;(FarragoDatabase.java:189)&lt;br /&gt;
    ... 3 more&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
On a Debian-based system such as Ubuntu:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
apt-get install libaio1&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
(on older versions it may be libaio instead of libaio1)&lt;br /&gt;
&lt;br /&gt;
On A RedHat-based system:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
yum install libaio1&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
After that, you should be able to start the server.  If you keep the default setting of aioLinux, you'll want to increase LucidDB's buffer pool size, and also preallocate data files, as mentioned in [[LucidDbPerformanceTuning#I.2FO_Scheduler]].&lt;br /&gt;
&lt;br /&gt;
== Startup Error For mmap ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I got the error below on startup, or when trying to increase the [[LucidDbBufferPoolSizing|buffer pool size]].  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Error: System call failed:  mmap failed: Cannot allocate memory (state=,code=0)&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
Assuming you actually have sufficient physical memory, and are using a 64-bit build if trying to allocate a large buffer pool, check these:&lt;br /&gt;
&lt;br /&gt;
# Make sure '''ulimit -v''' returns the string &amp;quot;unlimited&amp;quot;.  Setting a quota on virtual memory size can cause the error above.&lt;br /&gt;
# Make sure you aren't accidentally using a [[#Debug Builds|debug build]].  Debug builds use '''mprotect''' to guard against buffer overruns, and this eats up a lot of additional memory and OS page table space.&lt;br /&gt;
&lt;br /&gt;
== Startup Error For Windows ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I got an error trying to load the native code DLL's on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
Make sure you have installed the [http://www.microsoft.com/downloads/details.aspx?FamilyID=9b2da534-3e03-4391-8a4d-074b9f2bc1bf&amp;amp;displaylang=en Visual C++ 2008 Redistributable Package].&lt;br /&gt;
&lt;br /&gt;
== Client Connectivity Problems ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I can't get sqllineClient, Squirrel, and other clients to talk to the LucidDB server.  What's wrong?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
You may need to follow the instructions in [[ClientServerLocalhost]] to fix '''/etc/hosts'''.&lt;br /&gt;
&lt;br /&gt;
== Loading Large Data Files ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I have a large data file in txt format. I need to bulk load it into Lucid tables. What's the best way to do this?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
Create a flat file foreign table corresponding to your flat file, and then use an INSERT-SELECT statement to load from the flat file table to your target table.&lt;br /&gt;
&lt;br /&gt;
See [[LucidDbFlatFileWrapper]] for details.&lt;br /&gt;
&lt;br /&gt;
[[LucidDbEtlTutorial#Define_Sources]] also has an example that shows you how to create a flatfile foreign data wrapper, import it, and then access tables within the imported foreign schema.&lt;br /&gt;
&lt;br /&gt;
== ETL Tutorial ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
In attempting to follow the ETL Tutorial I got an error because directory examples/etl/filedata/ does not exist.  What should I do?&lt;br /&gt;
&lt;br /&gt;
'''Answer'''&lt;br /&gt;
&lt;br /&gt;
Make sure you followed the instructions to start the server like this:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
bin/lucidDbServer&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
The tutorial relies on this for the relative paths to come out right.  Otherwise, you need to edit the scripts so that they supply absolute paths.&lt;br /&gt;
&lt;br /&gt;
== Case-Sensitive Foreign Schema Name ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to import a foreign schema from a server like PostgreSQL with case-sensitive identifiers, and I'm not getting any tables back.  How come?&lt;br /&gt;
&lt;br /&gt;
'''Answer'''&lt;br /&gt;
&lt;br /&gt;
Make sure you quote the foreign schema name in the IMPORT FOREIGN SCHEMA command:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
import foreign schema &amp;quot;public&amp;quot;&lt;br /&gt;
from server postgres_abc&lt;br /&gt;
into ldb_schema &lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Likewise for [http://sourceforge.net/mailarchive/forum.php?thread_name=4891317F.3040406%40gmail.com&amp;amp;forum_name=luciddb-users foreign tables].&lt;br /&gt;
&lt;br /&gt;
== Default Port ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
What is the default listening port number for LucidDB?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
By default, LucidDB listens for HTTP connections on port 8034.  If you want to specify it explicitly from the client side, use a URL like &lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
jdbc:luciddb:http://1.2.3.4:8034&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
You can change a server's port number by setting system parameter '''serverHttpPort'''; see [[LucidDbSystemParameters]] for more information.&lt;br /&gt;
&lt;br /&gt;
== JDBC Driver Class ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to connect to LucidDB from my own program, but I always get an exception like java.lang.ClassNotFoundException: org.luciddb.jdbc.LucidDbClientDriver.  What should I do to fix it?&lt;br /&gt;
&lt;br /&gt;
'''Answer''':&lt;br /&gt;
&lt;br /&gt;
Make sure you have '''luciddb/plugin/LucidDbClient.jar''' on your program's classpath.&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to use LucidDbLocalDriver to access the server from a client program running on the same (local) machine, but it doesn't work.  Why not?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
The &amp;quot;local&amp;quot; driver is local only in the sense &amp;quot;in the same java process&amp;quot;, not in the sense &amp;quot;on the same machine&amp;quot;, so you'll need to  &lt;br /&gt;
use the HTTP driver.  Use driver class '''org.luciddb.jdbc.LucidDbClientDriver''' unless the client and server are actually running in the same JVM.&lt;br /&gt;
&lt;br /&gt;
== Slow INSERT performance ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to INSERT lots of rows using the INSERT command, but the performance is terrible!  What can I do to improve the performance?&lt;br /&gt;
&lt;br /&gt;
'''Answer''':&lt;br /&gt;
&lt;br /&gt;
There are inherent issues with single row INSERTs in a column store database.  Bulk INSERTs or UPDATEs are best accomplished (with orders of magnitude increases in performance) via a bulk loading method (see [[LucidDbEtlTutorial]] for an example).&lt;br /&gt;
&lt;br /&gt;
== Missing Columns ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I created a wide table, and some of the columns seem to have gone AWOL.  What gives?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
If you're using sqlline, see this [http://sourceforge.net/mailarchive/forum.php?thread_name=221131.98865.qm%40web51307.mail.re2.yahoo.com&amp;amp;forum_name=luciddb-users mailing list thread].&lt;br /&gt;
&lt;br /&gt;
== Running As A Service Or Daemon ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
How do I run LucidDB as a service on Windows or a daemon on Unix?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
See [[LucidDbAsDaemonService]].&lt;br /&gt;
&lt;br /&gt;
== J2EE Embedding ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
How do I run LucidDB inside of a J2EE app server?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
See [[LucidDbAsManagedBean]].&lt;br /&gt;
&lt;br /&gt;
== Catalog File Locking ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I got an exception about &amp;quot;Failed to lock catalog file&amp;quot; on server startup; what does this mean?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
It means you already have a server process running from the same installation, and only one can be running at a time.  See this [http://sourceforge.net/mailarchive/forum.php?thread_name=381602.46904.qm%40web51306.mail.re2.yahoo.com&amp;amp;forum_name=luciddb-users mailing list thread].  For information on how to start LucidDB on a remote server, see [http://sourceforge.net/mailarchive/forum.php?thread_name=4890A61F.3050505%40gmail.com&amp;amp;forum_name=luciddb-users this thread].&lt;br /&gt;
&lt;br /&gt;
== Debug Builds ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I built LucidDB [[LucidDbBuildFromSourceDistribution|from source]] and now it's really slow.  How come?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
By default, '''initBuild.sh''' produces an unoptimized debug build, which is an order of magnitude slower than release builds.  Be sure to specify the '''--with-optimization --without-debug''' flags to match the release configuration, unless you're actually planning to hack on LucidDB native code and use gdb.&lt;br /&gt;
&lt;br /&gt;
== Beyond Java ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
Can I use LucidDB in a non-Java application?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
[[LucidDbNonJavaClients|Maybe]].&lt;br /&gt;
&lt;br /&gt;
== Compression Statistics ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
How can I tell how well compression is working?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
It can be difficult to determine this from the size of '''db.dat''', since not all of the pages may be currently in use.&lt;br /&gt;
&lt;br /&gt;
To find out how many pages are currently in use across all tables, across all page versions, execute this:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
alter system deallocate old;&lt;br /&gt;
select counter_value from sys_root.dba_performance_counters where counter_name='DatabasePagesAllocated';&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Multiply the result by 32KB (the size of one page).&lt;br /&gt;
&lt;br /&gt;
To study compression effectiveness for a particular table, execute this:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
alter system deallocate old;&lt;br /&gt;
analyze table t estimate statistics for all columns;&lt;br /&gt;
select index_name, pages from sys_boot.mgmt.page_counts_view where table_schem='YOUR_SCHEMA_NAME' and table_name='YOUR_TABLE_NAME';&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Indexes with names starting with &amp;quot;SYS$CLUSTERED&amp;quot; represent the compressed column storage.  Every table has a single &amp;quot;SYS$DELETION_INDEX&amp;quot; which tracks deleted rows.  A table may have SYS$ indexes corresponding to PRIMARY KEY and UNIQUE constraint defintions.  Any other indexes are named indexes you have created.&lt;br /&gt;
&lt;br /&gt;
== OpenSUSE Performance ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
Why is LucidDB so slow for short queries on OpenSUSE?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
See the discussion on the ext3 barrier setting in [http://n2.nabble.com/Row-has-too-many-columns-td2789557.html this thread], which contains a workaround.&lt;br /&gt;
&lt;br /&gt;
== Identifier Quoting - Dealing with mixed case Schema, Table and Column names ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
Why are the rules for this so confusing?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
LucidDB strictly adheres to SQL:2003 in this regard.  When you don't quote identifiers, they are implicitly uppercased as part of parsing (e.g. yoUr_table becomes YOUR_TABLE).  When you quote them, case is preserved (e.g. &amp;quot;yoUr_table&amp;quot; stays exactly like that).  You must quote them if they are reserved words or contain special characters.  For compound identifiers, the quotes go around each component, e.g. &amp;quot;yoUr_schema&amp;quot;.&amp;quot;yoUr_table&amp;quot; not &amp;quot;yoUr_schema.yoUr_table&amp;quot;).&lt;br /&gt;
&lt;br /&gt;
One point of confusion arises from the SET SCHEMA command.  The actual syntax is '''SET SCHEMA &amp;lt;character-expression&amp;gt;''', not '''SET SCHEMA &amp;lt;identifier&amp;gt;'''.  So, you have to write&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA '&amp;quot;yoUr_schema&amp;quot;'&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
not&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA &amp;quot;yoUr_schema&amp;quot;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
If you have a schema named EXTRACTION_SCHEMA (all upper case), this works:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA 'extraction_schema'&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
The reason this works is that the single quotes are delimiting the character literal (not the identifier).  The parsing for this expression first evaluates the character expression, then interprets the result as a (possibly-quoted) identifier.  This allows you to do things like&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA 'SCHEMA_FOR_' || CURRENT_USER&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
So if user FRANCISCO logs in, he'll get SCHEMA_FOR_FRANCISCO set as default after executing the expression above.&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''Normal SQL Queries with mixed case table or column names'''&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
When you use normal '''SELECT''' style queries you can expect to use double quotes to work around case issues.&lt;br /&gt;
Example:&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
select &amp;quot;tableOne&amp;quot;.&amp;quot;myColumn&amp;quot; from &amp;quot;SchemaName&amp;quot;.&amp;quot;tableOne&amp;quot;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''Function Calls with mixed case table or column names'''&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
Look at how the parameter itself is in single quotes, the column name is in double quotes.&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
create_table_as ('select &amp;quot;myCol&amp;quot; from &amp;quot;myTable&amp;quot;', '&amp;quot;TARGETtable&amp;quot;')&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbUserFaq</id>
		<title>LucidDbUserFaq</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbUserFaq"/>
				<updated>2011-11-16T20:49:04Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* Identifier Quoting */ Updated quoting examples&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;= FAQ List =&lt;br /&gt;
&lt;br /&gt;
This page is the FAQ list for LucidDB users.  For questions about the project, see [http://www.luciddb.org/projectFaq.html the project FAQ on the website].&lt;br /&gt;
&lt;br /&gt;
== Startup Error for libgcj ==&lt;br /&gt;
&lt;br /&gt;
'''Question'''&lt;br /&gt;
&lt;br /&gt;
I got an error about initializeClass on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Exception in thread &amp;quot;main&amp;quot; java.lang.NoClassDefFoundError: &lt;br /&gt;
net.sf.farrago.db.FarragoDatabase&lt;br /&gt;
    at java.lang.Class.initializeClass(libgcj.so.90)&lt;br /&gt;
    at &lt;br /&gt;
net.sf.farrago.db.FarragoDbSingleton.pinReference(FarragoDbSingleton.java:100)&lt;br /&gt;
    at &lt;br /&gt;
net.sf.farrago.server.FarragoAbstractServer.start(FarragoAbstractServer.java:232)&lt;br /&gt;
    at com.lucidera.farrago.LucidDbServer.main(LucidDbServer.java:61)&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
The GCJ virtual machine (packaged by default with many Linux distributions) is not sufficient for use with LucidDB.  Instead, please install a [http://java.sun.com/javase/downloads/index.jsp Sun Java JVM], set your JAVA_HOME to the Sun JRE, then do a fresh unzip/install.&lt;br /&gt;
&lt;br /&gt;
== Startup Error for xlib xcb ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I got an error similar to one of the ones below on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
java: xcb_xlib.c:50: xcb_xlib_unlock: Assertion `c-&amp;gt;xlib.lock' failed.&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Locking assertion failure. Backtrace:&lt;br /&gt;
#0 /usr/lib/libxcb-xlib.so.0 [0xb7361767]&lt;br /&gt;
#1 /usr/lib/libxcb-xlib.so.0(xcb_xlib_unlock+0x31) [0xb73618b1]&lt;br /&gt;
#2 /usr/lib/libX11.so.6(_XReply+0xfd) [0x99e591bd]&lt;br /&gt;
#3 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so [0x9b539dce]&lt;br /&gt;
#4 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so [0x9b523d77]&lt;br /&gt;
#5 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so [0x9b523ef3]&lt;br /&gt;
#6 /usr/lib/jvm/java-1.5.0-sun-1.5.0.16/jre/lib/i386/xawt/libmawt.so(Java_sun_awt_X11GraphicsEnvironment_initDisplay+0x26) [0x9b524136] &lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
The easiest way is to edit the '''bin/lucidDbServer''' startup script and add '''-Dorg.eigenbase.util.AWT_WORKAROUND=off''' to the Java command line.  (This will be done as part of the out-of-the-box packaging in the next release since this seems to be a common problem.)&lt;br /&gt;
&lt;br /&gt;
See [http://sourceforge.net/mailarchive/message.php?msg_id=613385.33648.qm%40web30806.mail.mud.yahoo.com this mailing list thread] for more discussion.&lt;br /&gt;
&lt;br /&gt;
== Startup Error For libaio ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I got the error below on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Loading database...&lt;br /&gt;
Exception in thread &amp;quot;main&amp;quot; org.eigenbase.util.EigenbaseException: Failed to load database&lt;br /&gt;
    at net.sf.farrago.resource.FarragoResource$_Def1.ex(FarragoResource.java:1789)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDatabase.&amp;lt;init&amp;gt;(FarragoDatabase.java:269)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDbSingleton.pinReference(FarragoDbSingleton.java:89)&lt;br /&gt;
    at net.sf.farrago.server.FarragoAbstractServer.start(FarragoAbstractServer.java:183)&lt;br /&gt;
    at com.lucidera.farrago.LucidDbServer.main(LucidDbServer.java:61)&lt;br /&gt;
Caused by: org.eigenbase.util.EigenbaseException: FennelResource.en_US.libaioRequired()&lt;br /&gt;
    at net.sf.farrago.resource.FarragoResource$_Def0.ex(FarragoResource.java:1766)&lt;br /&gt;
    at net.sf.farrago.fennel.FennelDbHandle.handleNativeException(FennelDbHandle.java:315)&lt;br /&gt;
    at net.sf.farrago.fennel.FennelDbHandle.executeCmd(FennelDbHandle.java:242)&lt;br /&gt;
    at net.sf.farrago.fennel.FennelDbHandle.&amp;lt;init&amp;gt;(FennelDbHandle.java:90)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDatabase.loadFennel(FarragoDatabase.java:509)&lt;br /&gt;
    at net.sf.farrago.db.FarragoDatabase.&amp;lt;init&amp;gt;(FarragoDatabase.java:189)&lt;br /&gt;
    ... 3 more&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
On a Debian-based system such as Ubuntu:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
apt-get install libaio1&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
(on older versions it may be libaio instead of libaio1)&lt;br /&gt;
&lt;br /&gt;
On A RedHat-based system:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
yum install libaio1&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
After that, you should be able to start the server.  If you keep the default setting of aioLinux, you'll want to increase LucidDB's buffer pool size, and also preallocate data files, as mentioned in [[LucidDbPerformanceTuning#I.2FO_Scheduler]].&lt;br /&gt;
&lt;br /&gt;
== Startup Error For mmap ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I got the error below on startup, or when trying to increase the [[LucidDbBufferPoolSizing|buffer pool size]].  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
Error: System call failed:  mmap failed: Cannot allocate memory (state=,code=0)&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
Assuming you actually have sufficient physical memory, and are using a 64-bit build if trying to allocate a large buffer pool, check these:&lt;br /&gt;
&lt;br /&gt;
# Make sure '''ulimit -v''' returns the string &amp;quot;unlimited&amp;quot;.  Setting a quota on virtual memory size can cause the error above.&lt;br /&gt;
# Make sure you aren't accidentally using a [[#Debug Builds|debug build]].  Debug builds use '''mprotect''' to guard against buffer overruns, and this eats up a lot of additional memory and OS page table space.&lt;br /&gt;
&lt;br /&gt;
== Startup Error For Windows ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I got an error trying to load the native code DLL's on startup.  How do I fix it?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
Make sure you have installed the [http://www.microsoft.com/downloads/details.aspx?FamilyID=9b2da534-3e03-4391-8a4d-074b9f2bc1bf&amp;amp;displaylang=en Visual C++ 2008 Redistributable Package].&lt;br /&gt;
&lt;br /&gt;
== Client Connectivity Problems ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I can't get sqllineClient, Squirrel, and other clients to talk to the LucidDB server.  What's wrong?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
You may need to follow the instructions in [[ClientServerLocalhost]] to fix '''/etc/hosts'''.&lt;br /&gt;
&lt;br /&gt;
== Loading Large Data Files ==&lt;br /&gt;
&lt;br /&gt;
'''Question:''' &lt;br /&gt;
&lt;br /&gt;
I have a large data file in txt format. I need to bulk load it into Lucid tables. What's the best way to do this?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
Create a flat file foreign table corresponding to your flat file, and then use an INSERT-SELECT statement to load from the flat file table to your target table.&lt;br /&gt;
&lt;br /&gt;
See [[LucidDbFlatFileWrapper]] for details.&lt;br /&gt;
&lt;br /&gt;
[[LucidDbEtlTutorial#Define_Sources]] also has an example that shows you how to create a flatfile foreign data wrapper, import it, and then access tables within the imported foreign schema.&lt;br /&gt;
&lt;br /&gt;
== ETL Tutorial ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
In attempting to follow the ETL Tutorial I got an error because directory examples/etl/filedata/ does not exist.  What should I do?&lt;br /&gt;
&lt;br /&gt;
'''Answer'''&lt;br /&gt;
&lt;br /&gt;
Make sure you followed the instructions to start the server like this:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
bin/lucidDbServer&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
The tutorial relies on this for the relative paths to come out right.  Otherwise, you need to edit the scripts so that they supply absolute paths.&lt;br /&gt;
&lt;br /&gt;
== Case-Sensitive Foreign Schema Name ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to import a foreign schema from a server like PostgreSQL with case-sensitive identifiers, and I'm not getting any tables back.  How come?&lt;br /&gt;
&lt;br /&gt;
'''Answer'''&lt;br /&gt;
&lt;br /&gt;
Make sure you quote the foreign schema name in the IMPORT FOREIGN SCHEMA command:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
import foreign schema &amp;quot;public&amp;quot;&lt;br /&gt;
from server postgres_abc&lt;br /&gt;
into ldb_schema &lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Likewise for [http://sourceforge.net/mailarchive/forum.php?thread_name=4891317F.3040406%40gmail.com&amp;amp;forum_name=luciddb-users foreign tables].&lt;br /&gt;
&lt;br /&gt;
== Default Port ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
What is the default listening port number for LucidDB?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
By default, LucidDB listens for HTTP connections on port 8034.  If you want to specify it explicitly from the client side, use a URL like &lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
jdbc:luciddb:http://1.2.3.4:8034&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
You can change a server's port number by setting system parameter '''serverHttpPort'''; see [[LucidDbSystemParameters]] for more information.&lt;br /&gt;
&lt;br /&gt;
== JDBC Driver Class ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to connect to LucidDB from my own program, but I always get an exception like java.lang.ClassNotFoundException: org.luciddb.jdbc.LucidDbClientDriver.  What should I do to fix it?&lt;br /&gt;
&lt;br /&gt;
'''Answer''':&lt;br /&gt;
&lt;br /&gt;
Make sure you have '''luciddb/plugin/LucidDbClient.jar''' on your program's classpath.&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to use LucidDbLocalDriver to access the server from a client program running on the same (local) machine, but it doesn't work.  Why not?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
The &amp;quot;local&amp;quot; driver is local only in the sense &amp;quot;in the same java process&amp;quot;, not in the sense &amp;quot;on the same machine&amp;quot;, so you'll need to  &lt;br /&gt;
use the HTTP driver.  Use driver class '''org.luciddb.jdbc.LucidDbClientDriver''' unless the client and server are actually running in the same JVM.&lt;br /&gt;
&lt;br /&gt;
== Slow INSERT performance ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I'm trying to INSERT lots of rows using the INSERT command, but the performance is terrible!  What can I do to improve the performance?&lt;br /&gt;
&lt;br /&gt;
'''Answer''':&lt;br /&gt;
&lt;br /&gt;
There are inherent issues with single row INSERTs in a column store database.  Bulk INSERTs or UPDATEs are best accomplished (with orders of magnitude increases in performance) via a bulk loading method (see [[LucidDbEtlTutorial]] for an example).&lt;br /&gt;
&lt;br /&gt;
== Missing Columns ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I created a wide table, and some of the columns seem to have gone AWOL.  What gives?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
If you're using sqlline, see this [http://sourceforge.net/mailarchive/forum.php?thread_name=221131.98865.qm%40web51307.mail.re2.yahoo.com&amp;amp;forum_name=luciddb-users mailing list thread].&lt;br /&gt;
&lt;br /&gt;
== Running As A Service Or Daemon ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
How do I run LucidDB as a service on Windows or a daemon on Unix?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
See [[LucidDbAsDaemonService]].&lt;br /&gt;
&lt;br /&gt;
== J2EE Embedding ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
How do I run LucidDB inside of a J2EE app server?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
See [[LucidDbAsManagedBean]].&lt;br /&gt;
&lt;br /&gt;
== Catalog File Locking ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I got an exception about &amp;quot;Failed to lock catalog file&amp;quot; on server startup; what does this mean?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
It means you already have a server process running from the same installation, and only one can be running at a time.  See this [http://sourceforge.net/mailarchive/forum.php?thread_name=381602.46904.qm%40web51306.mail.re2.yahoo.com&amp;amp;forum_name=luciddb-users mailing list thread].  For information on how to start LucidDB on a remote server, see [http://sourceforge.net/mailarchive/forum.php?thread_name=4890A61F.3050505%40gmail.com&amp;amp;forum_name=luciddb-users this thread].&lt;br /&gt;
&lt;br /&gt;
== Debug Builds ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
I built LucidDB [[LucidDbBuildFromSourceDistribution|from source]] and now it's really slow.  How come?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
By default, '''initBuild.sh''' produces an unoptimized debug build, which is an order of magnitude slower than release builds.  Be sure to specify the '''--with-optimization --without-debug''' flags to match the release configuration, unless you're actually planning to hack on LucidDB native code and use gdb.&lt;br /&gt;
&lt;br /&gt;
== Beyond Java ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
Can I use LucidDB in a non-Java application?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
[[LucidDbNonJavaClients|Maybe]].&lt;br /&gt;
&lt;br /&gt;
== Compression Statistics ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
How can I tell how well compression is working?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
It can be difficult to determine this from the size of '''db.dat''', since not all of the pages may be currently in use.&lt;br /&gt;
&lt;br /&gt;
To find out how many pages are currently in use across all tables, across all page versions, execute this:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
alter system deallocate old;&lt;br /&gt;
select counter_value from sys_root.dba_performance_counters where counter_name='DatabasePagesAllocated';&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Multiply the result by 32KB (the size of one page).&lt;br /&gt;
&lt;br /&gt;
To study compression effectiveness for a particular table, execute this:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
alter system deallocate old;&lt;br /&gt;
analyze table t estimate statistics for all columns;&lt;br /&gt;
select index_name, pages from sys_boot.mgmt.page_counts_view where table_schem='YOUR_SCHEMA_NAME' and table_name='YOUR_TABLE_NAME';&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
Indexes with names starting with &amp;quot;SYS$CLUSTERED&amp;quot; represent the compressed column storage.  Every table has a single &amp;quot;SYS$DELETION_INDEX&amp;quot; which tracks deleted rows.  A table may have SYS$ indexes corresponding to PRIMARY KEY and UNIQUE constraint defintions.  Any other indexes are named indexes you have created.&lt;br /&gt;
&lt;br /&gt;
== OpenSUSE Performance ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
Why is LucidDB so slow for short queries on OpenSUSE?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
See the discussion on the ext3 barrier setting in [http://n2.nabble.com/Row-has-too-many-columns-td2789557.html this thread], which contains a workaround.&lt;br /&gt;
&lt;br /&gt;
== Identifier Quoting ==&lt;br /&gt;
&lt;br /&gt;
'''Question:'''&lt;br /&gt;
&lt;br /&gt;
Why are the rules for this so confusing?&lt;br /&gt;
&lt;br /&gt;
'''Answer:'''&lt;br /&gt;
&lt;br /&gt;
LucidDB strictly adheres to SQL:2003 in this regard.  When you don't quote identifiers, they are implicitly uppercased as part of parsing (e.g. yoUr_table becomes YOUR_TABLE).  When you quote them, case is preserved (e.g. &amp;quot;yoUr_table&amp;quot; stays exactly like that).  You must quote them if they are reserved words or contain special characters.  For compound identifiers, the quotes go around each component, e.g. &amp;quot;yoUr_schema&amp;quot;.&amp;quot;yoUr_table&amp;quot; not &amp;quot;yoUr_schema.yoUr_table&amp;quot;).&lt;br /&gt;
&lt;br /&gt;
One point of confusion arises from the SET SCHEMA command.  The actual syntax is '''SET SCHEMA &amp;lt;character-expression&amp;gt;''', not '''SET SCHEMA &amp;lt;identifier&amp;gt;'''.  So, you have to write&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA '&amp;quot;yoUr_schema&amp;quot;'&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
not&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA &amp;quot;yoUr_schema&amp;quot;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
If you have a schema named EXTRACTION_SCHEMA (all upper case), this works:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA 'extraction_schema'&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
The reason this works is that the single quotes are delimiting the character literal (not the identifier).  The parsing for this expression first evaluates the character expression, then interprets the result as a (possibly-quoted) identifier.  This allows you to do things like&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
SET SCHEMA 'SCHEMA_FOR_' || CURRENT_USER&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
So if user FRANCISCO logs in, he'll get SCHEMA_FOR_FRANCISCO set as default after executing the expression above.&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''Normal SQL Queries with mixed case table or column names'''&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
When you use normal '''SELECT''' style queries you can expect to use double quotes to work around case issues.&lt;br /&gt;
Example:&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
select &amp;quot;tableOne&amp;quot;.&amp;quot;myColumn&amp;quot; from &amp;quot;SchemaName&amp;quot;.&amp;quot;tableOne&amp;quot;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''Function Calls with mixed case table or column names'''&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
Look at how the parameter itself is in single quotes, the column name is in double quotes.&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
create_table_as ('select &amp;quot;myCol&amp;quot; from &amp;quot;myTable&amp;quot;', '&amp;quot;TARGETtable&amp;quot;')&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbDocs</id>
		<title>LucidDbDocs</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbDocs"/>
				<updated>2011-11-14T17:17:49Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* Connectors to External Data Sources (SQL/MED) ([http://farrago.sourceforge.net/design/sqlmed.html Management of External Data]) */  Added first dirty information about installing CouchDB connector.&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;This is the main index page for documentation about the [[LucidDB]] open-source project, a DBMS optimized for business intelligence.  LucidDB is part of [http://www.eigenbase.org The Eigenbase Project].&amp;lt;br&amp;gt;&lt;br /&gt;
[[Image:Lucid db logo PMS 2010.png|400px|right]] __TOC__&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
= LucidDB User Documentation =&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Getting Started ==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''LucidDB Server''' [[Image:AdminUI 11-4-2011 1-07-28 PM.jpg|[[http://pub.eigenbase.org/wiki/DynamoBIAdminUI AdminUI v1.0]]|thumb|200px]]&lt;br /&gt;
* [[LucidDbGettingStarted | Getting Started - An Installation Guide]]&lt;br /&gt;
* [[LucidDbUserFaq | Frequently Asked Questions]]&lt;br /&gt;
* [[DynamoBIAdminUI | LucidDB AdminUI - Web Based Server Management Tool]] &lt;br /&gt;
: A graphical browser-based frontend from DynamoBI specifically built for LucidDB&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''External Software'''[[Image:Squirrel SQL 11-4-2011 1-24-26 PM.jpg|Squirrel SQL client running on Windows 7|thumb|200px]]&lt;br /&gt;
* [[LucidDbSquirrel | Squirrel SQL Client]] &lt;br /&gt;
: A graphical SQL client for accessing many database platforms, including LucidDB&lt;br /&gt;
* [[LucidDbPowerArchitect | Power Architect]]&lt;br /&gt;
: A data modeling tool&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== User Guides ==&lt;br /&gt;
* [[LucidDbUdfHowto | User Defined Functions (UDF) Howto]]&lt;br /&gt;
* [[LucidDbUdfJavaHowto | User Defined Functions (UDF) Java Howto]]&lt;br /&gt;
* [[LucidDbUdxJavaHowto | User Defined Transformation (UDX) Java Howto]]&lt;br /&gt;
* [[LucidDbEtlTutorial | Extract, Transform and Load (ETL) Tutorial]]&lt;br /&gt;
* [[LucidDbOlap| Online Analytical Processing (OLAP)]]&lt;br /&gt;
** [[LucidDbMondrianReplication | Using Pentaho Mondrian Replication]]&lt;br /&gt;
** [[LucidDbAggregateDesigner | Using Pentaho Aggregate Designer for Mondrian]]&lt;br /&gt;
* [[LucidDbConcurrencyControl | Concurrency Control]]&lt;br /&gt;
* [[LucidDbDataStorageAndAccess | Data Storage And Access]]&lt;br /&gt;
* [[LucidDbErrorHandling | Error Handling]]&lt;br /&gt;
* [[LucidDbIndexAccess | Index Access]]&lt;br /&gt;
* [[LucidDbJoinOptimization | Join Optimization]]&lt;br /&gt;
* [[LucidDbJoinImplementation | Join Implementation]]&lt;br /&gt;
* [[LucidDbSlowQueryDiagnosis | Slow Query Diagnosis]]:  Diagnosing slow queries using EXPLAIN PLAN and other tools&lt;br /&gt;
* [[LucidDbSubqueries | Subqueries]]&lt;br /&gt;
* [[LucidDbWarehouseLabels | Warehouse Labels]]&lt;br /&gt;
:  Labels allow users to have read-only query access to a snapshot of the database at an earlier point in time. Snapshots are accessible regardless of  concurrent activities on other connections, like ETL, preparing new data.&lt;br /&gt;
* [[LucidDbQueryExecution | Query Execution]]&lt;br /&gt;
* [[LucidDbServerContainer | Server Container]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Administrator Guides ==&lt;br /&gt;
&lt;br /&gt;
LucidDB is designed to require as little administration as possible, so we hope this section can remain short :)&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbMemoryManagement | Memory Management]]&lt;br /&gt;
** [[LucidDbBufferPoolSizing | Buffer Pool Sizing]] &amp;lt;br&amp;gt;You should also increase the buffer pool sizing to increase the amount of memory that LucidDB uses to &amp;quot;run queries&amp;quot; &amp;lt;br&amp;gt;(the Java adjustments will only increase the catalog/parsing/optimizer memory settings but not the actual execution engine).&lt;br /&gt;
* [[LucidDbSystemProcedures | System Procedures]]&lt;br /&gt;
: Useful for: Backup/Restore, Generating DDL for tables and other objects, managing sessions.&lt;br /&gt;
* [[LucidDbSystemParameters | System Parameters]]&lt;br /&gt;
: Useful information about tweaking: Memory usage, network settings, execution, and storage functionality.&lt;br /&gt;
* [[LucidDbSessionParameters| Session Parameters]]&lt;br /&gt;
* [[LucidDbSystemViews | System Views]]&lt;br /&gt;
: The DBA views defined by LucidDB provide a global picture of the contents of the system catalog (tables, columns, etc) and the volatile state of the system (sessions, cache utilization, etc).&lt;br /&gt;
* [[LucidDbPerformanceTuning | Performance Tuning]]&lt;br /&gt;
** [[LucidDbPerformanceCounters | Performance Counters]]&lt;br /&gt;
** [[LucidDbMonitor | Monitor]] Active monitoring&lt;br /&gt;
* [[LucidDbTracing | Tracing]] Debug Logs in LucidDB&lt;br /&gt;
* [[LucidDbBackupRestore | Performing Backups and Restores]]&lt;br /&gt;
* [[LucidDbUpgrade | How to upgrade to each new release.]]&lt;br /&gt;
* [[LucidDbAsDaemonService | Running LucidDB as a Service / Daemon]]&lt;br /&gt;
* [[LucidDbAsManagedBean | Running LucidDB as a Managed Java Bean]]&lt;br /&gt;
* [[LucidDbMoveCatalog | Moving the LucidDB Database Catalog]]&lt;br /&gt;
* [[LucidDbScriptingLucidUsingBASH | Scripting LucidDB using BASH shell scripts]]&lt;br /&gt;
&lt;br /&gt;
== Function and SQL Language Reference Guides ==&lt;br /&gt;
* [[AppLib]] - Description of the utility function library in LucidDB&lt;br /&gt;
* [[LucidDbDataTypes | Supported Data Types]]&lt;br /&gt;
* [[LucidDbSqlConformance | SQL Standard Conformance]]&lt;br /&gt;
* [[LucidDbSqlReference | SQL Language Reference]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Connectors to External Data Sources (SQL/MED) ([http://farrago.sourceforge.net/design/sqlmed.html Management of External Data])==&lt;br /&gt;
[[Image:Connectors.jpg|thumb|200px|right|See more general information about connectors here [[http://www.dynamobi.com/c/products/luciddb/connectors http://www.dynamobi.com]].]]&lt;br /&gt;
These connectors wrap up external datasources and allow them to present their data as foreign tables inside of LucidDB.  Connectors are an adapters that generally allow normal SQL queries to be run against datasources that may not support the SQL language directly.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbFlatFileWrapper | Flat File Wrapper]] - Connector enabling read-only SQL accesses to text files&lt;br /&gt;
* [[FarragoMedJdbcPlugin | JDBC Data Wrapper]] - Connector enabling presentation of external database tables in LucidDB&lt;br /&gt;
* [[FarragoMedSalesforcePlugin|Salesforce Data Wrapper]] - Connector for presenting Salesforce tables in LucidDB&lt;br /&gt;
* CouchDB connections:&lt;br /&gt;
** Blog: [http://www.nicholasgoodman.com/bt/blog/2011/06/08/sql-access-to-couchdb-views/ SQL access to couchdb views]&lt;br /&gt;
** Blog: [http://www.nicholasgoodman.com/bt/blog/2011/06/22/sql-access-to-couchdb-views-easy-reporting/ SQL access to CouchDB views : Easy Reporting]&lt;br /&gt;
** Forum: Installing the CouchDB connector [http://www.luciddb.org/forums/discussion/comment/1313#Comment_1313]&lt;br /&gt;
** Download the connector from [http://www.dynamobi.com/c/downloads/stable/]&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Benchmark Studies ==&lt;br /&gt;
* [[LucidDbTpch|TPCH Benchmarks]]&lt;br /&gt;
* [[LucidDbSqbm | SQBM]]&lt;br /&gt;
* [[LucidDbOtp| OTP Benchmark using Bureau of Transportation Statistics]], [http://www.mysqlperformanceblog.com/2010/01/07/star-schema-bechmark-infobright-infinidb-and-luciddb SSB Benchmark]&lt;br /&gt;
* [[LucidDbBenchmarkCandidates| Benchmark Candidates]] - Published benchmarks and applications which could serve as good showcases for LucidDB's architecture&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
== Commercial Support ==&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
Quick, reliable service and support is available to you from DynamoBI, the commercial sponsor of LucidDB.&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''DynamoBI Global Headquarters'''[[Image:Dynamobi logo large2.png|right|200px]]&amp;lt;br&amp;gt;&lt;br /&gt;
42nd Floor&amp;lt;br&amp;gt;&lt;br /&gt;
601 Union Street&amp;lt;br&amp;gt;&lt;br /&gt;
Two Union Square&amp;lt;br&amp;gt;&lt;br /&gt;
Seattle, WA 98101 USA&amp;lt;br&amp;gt;&lt;br /&gt;
Tel. +1 888 LucidDB (582-4332)&amp;lt;br&amp;gt;&lt;br /&gt;
Time Zone: PDT&amp;lt;br&amp;gt;&lt;br /&gt;
Business Hours: 8-6 PDT&amp;lt;br&amp;gt;&lt;br /&gt;
[[http://www.dynamobi.com/c/company/contact-us Contact us!]]&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Community Involvement ==&lt;br /&gt;
LucidDB is one of the best databases in the world because of the people, not just the technology.&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Community Support Forum'''&lt;br /&gt;
: Please visit, ask questions and help others &lt;br /&gt;
: [[http://www.luciddb.org/forums/ http://www.luciddb.org/forums/]]&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Chat with us online'''&lt;br /&gt;
: Many LucidDB users hang out on an Internet Relay Chat channel (IRC) called ##luciddb, using Freenode's [http://freenode.net/irc_servers.shtml] servers.&lt;br /&gt;
: We would love to answer your questions and help you get up and going using LucidDB.&lt;br /&gt;
: When you connect to '''chat.us.freenode.net''' or other freenode server near your country, be sure to use the command '''/join ##luciddb''' to actually join the chat channel for LucidDB.&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
:{| {{table}}&lt;br /&gt;
| align=&amp;quot;Left&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Software Name'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Platform'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Download Location'''&lt;br /&gt;
|-&lt;br /&gt;
| qwebirc||Web-based client||http://webchat.freenode.net/&lt;br /&gt;
|-&lt;br /&gt;
| ChatZilla||Firefox Add-on||https://addons.mozilla.org/en-US/firefox/addon/chatzilla/&lt;br /&gt;
|-&lt;br /&gt;
| mIRC||MS Windows||http://www.mirc.com/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||MS Windows||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||Linux||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat Aqua||Mac OS||http://sourceforge.net/projects/xchataqua/&lt;br /&gt;
|-&lt;br /&gt;
| Colloquy||Apple iPad &amp;amp; iPhone||http://colloquy.info/&lt;br /&gt;
|-&lt;br /&gt;
| Android - Internet Relay Chat||Google Android||https://market.android.com/details?id=com.countercultured.irc&amp;amp;hl=en&lt;br /&gt;
|}&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
* '''Bug and Feature Tracking&lt;br /&gt;
: Make a feature request or report a problem you have experienced.&lt;br /&gt;
: [[http://jira.eigenbase.org/secure/Dashboard.jspa http://jira.eigenbase.org/secure/Dashboard.jspa]]&lt;br /&gt;
&lt;br /&gt;
== Presentations / Blogs ==&lt;br /&gt;
* [[Media:PerconaLucidDB.ppt|Percona LucidDB PowerPoint Slides]]&lt;br /&gt;
* [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive]&lt;br /&gt;
: Demonstrates loading data, defining an OLAP cube, and browsing the cube with Pentaho, Jaspersoft, SpagoBI and Saiku which all use Mondrian to drive their OLAP functionality.&lt;br /&gt;
* [http://wiki.pentaho.com/display/COM/January+20,+2010+-+Nick+Goodman+-+LucidDB,+DynamoBI+and+Mondrian Pentaho - January 20, 2010 - Nick Goodman - LucidDB, DynamoBI and Mondrian]&lt;br /&gt;
: Webex Presentation and PDF of slides presenting benefits and features of LucidDB 0.9.3 in conjunction with Pentaho's BI Suite.&lt;br /&gt;
* [http://www.nicholasgoodman.com/bt/blog/2011/06/08/a-different-vision-for-the-value-of-big-data/ A different vision for the value of Big Data]&lt;br /&gt;
: DynamoBI (Commercial Sponsor of LucidDB) - CEO Nick Goodman - shares vision about how LucidDB forms an information hub from which many different data sources can be presented and queried through normal SQL.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Tutorial Videos and Screencasts ==&lt;br /&gt;
&lt;br /&gt;
* [http://www.dynamobi.com/c/support/tutorial-videos/ DynamoBI - Getting started online videos.]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/installation.swf Installing LucidDB]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/sqllineclient.swf Connecting to LucidDB and using the Command Line Interface, sqllineClient]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/stopping_server.swf Stopping the server, with and without users connected]&lt;br /&gt;
* [http://youtu.be/sSYsVoVrp24 Installing and Loading LucidDB backed sample OLAP]&lt;br /&gt;
** Video from this blog: [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive] - By Slawomir Chodnicki, on March 12th, 2011&lt;br /&gt;
* [http://youtu.be/ZnY223u6q_Y Installing and running LucidDB as a daemon in Linux using a Java Service Wrapper]&lt;br /&gt;
: This is an approach that may also work well on Windows.  There is another approach, which is shorter and easier using the BASH shell under Linux. Documentation for both approaches can be found at [[LucidDbAsDaemonService]].&lt;br /&gt;
* Moving tables from one database to LucidDB&lt;br /&gt;
:[http://pub.eigenbase.org/wiki/LucidDbUpgrade#Downloads_-_Using_Pentaho_Data_Integration_to_generate_a_SQL_script_for_moving_tables Using Pentaho Data Integration to generate SQL for moving tables from an external database to LucidDB]&lt;br /&gt;
: This link is actually to a document about upgrading version to version of LucidDB, but because a PDI transformation file is used to generate SQL for the transition, the process can be generalized as moving from an external database to LucidDB with only minor modifications to the transformation.&lt;br /&gt;
&lt;br /&gt;
== Experimental ==&lt;br /&gt;
&lt;br /&gt;
*[http://kettle.pentaho.com/ Pentaho Data Integration (PDI)] - Bulk Loading Plugins&lt;br /&gt;
** [[LucidDbPDIStreamingLoader| Streaming Loader Step]] - Bulk load data the easy way. '''[RECOMMENDED]''' &lt;br /&gt;
**  [[LucidDbPdiBulkLoad | Bulk Load Step]] - '''[DEPRECATED after LucidDB 0.9.3]'''&lt;br /&gt;
**  [[LucidDbStreamingLoad |Streaming Loader]] : A good example for building bulk loaders from non-Java tools. '''[INFORMATIONAL]'''&lt;br /&gt;
* [[LucidDbHorizontalPartitioning | Horizontal Partitioning]]&lt;br /&gt;
: LucidDB does not currently support DDL for automatic [http://en.wikipedia.org/wiki/Partition_%28database%29 horizontal partitioning] of tables.  Although LucidDB's column-store architecture implements automatic vertical partitioning, horizontal partitioning is still a useful technique for scaling up to very large data volumes, so this page describes some manual approaches which can be used for very simple schemas.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbNonJavaClients | Using Non-Java Clients with LucidDB]]&lt;br /&gt;
: The main client API for LucidDB is JDBC.  This page discusses some options for overcoming the obstacle of developing an application in a language other than Java.&lt;br /&gt;
* [[LucidDbSqlDiffTesting | SQL Diff Testing]]&lt;br /&gt;
: Description of how to make use of some of the diff-based testing frameworks built into LucidDB for the purpose of test-driven ETL script development.&lt;br /&gt;
* [[LucidDbHive | Hive]]&lt;br /&gt;
: Walk-through document showing how to combine LucidDB with [http://hadoop.apache.org/hive/ Apache Hadoop's Hive].&lt;br /&gt;
&lt;br /&gt;
= LucidDB Developer Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbBuildFromSourceDistribution | Building LucidDB from source code]]&lt;br /&gt;
* [[LucidDbBuildFromPerforce | Building LucidDB from Perforce (version control software, VCS)]]&lt;br /&gt;
* [[Main_Page#Collaboration | Main Developer Collaboration Section ]]&lt;br /&gt;
* [[DesignMeetings | Design Meetings - Feature Ideas and Roadmaps]]&lt;br /&gt;
&lt;br /&gt;
= LucidDB Design Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbEfficientUpdates | Efficient Updates]]&lt;br /&gt;
* [[LucidDbCommonRelationalSubExpressionMaterialization | Common Relational Sub-Expression Materialization]]&lt;br /&gt;
&lt;br /&gt;
= Trademark Notice =&lt;br /&gt;
&lt;br /&gt;
&amp;lt;sub&amp;gt;LucidDB and the LucidDB logo are trademarks of DynamoBI Corporation.&amp;lt;/sub&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbBufferPoolSizing</id>
		<title>LucidDbBufferPoolSizing</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbBufferPoolSizing"/>
				<updated>2011-11-14T16:45:07Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* References */&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;This page explains how to change the size of the buffer pool LucidDB allocates from available RAM, and why you might need to do that.  For background on the buffer pool, read [[LucidDbMemoryManagement]].&lt;br /&gt;
= Introduction =&lt;br /&gt;
&lt;br /&gt;
You should also increase the buffer pool sizing to increase the amount of memory that LucidDB uses to &amp;quot;run queries&amp;quot;&lt;br /&gt;
(the Java adjustments will only increase the catalog/parsing/optimizer memory settings but not the actual execution engine). &lt;br /&gt;
&lt;br /&gt;
= What is the Default Buffer Pool Size? =&lt;br /&gt;
&lt;br /&gt;
For standard LucidDB packaging, it's 5000 pages of 32KB each, which works out to a little under 160MB (using the [http://kb.iu.edu/data/ackw.html common definition of KB and MB]).&lt;br /&gt;
&lt;br /&gt;
= How Do I Change the Buffer Pool Size? =&lt;br /&gt;
&lt;br /&gt;
The SQL command to change the buffer pool size is as follows, and it takes effect immediately (allocating or freeing the specified number of 32K pages of memory from the OS as needed):&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
alter system set &amp;quot;cachePagesInit&amp;quot; = 10000;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
However, if you are increasing the buffer pool size above its default for the very first time, it takes a little more work.  The reason is that there is a separate system parameter, '''cachePagesMax''', which imposes an upper bound:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
0: jdbc:luciddb:&amp;gt; alter system set &amp;quot;cachePagesInit&amp;quot;=50000;&lt;br /&gt;
Error: Invalid parameter setting.  Setting must be between 1 and 'cachePagesMax'. (state=,code=0)&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
In that case, use the following procedure:&lt;br /&gt;
&lt;br /&gt;
1. Raise the ceiling:&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
alter system set &amp;quot;cachePagesMax&amp;quot; = 10000;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
2. Restart LucidDB&lt;br /&gt;
&lt;br /&gt;
3. Change '''cachePagesInit''':&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
alter system set &amp;quot;cachePagesInit&amp;quot; = 10000;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
There's no need to restart LucidDB a second time.&lt;br /&gt;
&lt;br /&gt;
= How Do I Convert From Bytes to Pages? =&lt;br /&gt;
&lt;br /&gt;
This requires a bit of arithmetic (a system procedure taking a string like '512MB' as parameter would be nicer, but doesn't exist yet).&lt;br /&gt;
&lt;br /&gt;
Suppose you would like a 512MB buffer pool size.  That's 512*1048576 bytes = 536870912 bytes.  Since each pages is 32KB=32768 bytes, you want 536870912/32768=16384 pages.  If you're good with powers of two, you can avoid the big numbers (512MB=2^29; 32KB=2^15; 29-15=14; 2^14=16384).&lt;br /&gt;
&lt;br /&gt;
FORMULA SHORTCUTs: &lt;br /&gt;
* (Your desired size in MB * 32) = pages.  Example: 512*32 = 16384 (pages). (512MB)&lt;br /&gt;
* (Your desired size in GB * 32768) = pages.  Example 4*32768 = 131072 (pages). (4GB)&lt;br /&gt;
&lt;br /&gt;
= How High Can I Go? =&lt;br /&gt;
&lt;br /&gt;
There are a number of hard limits you should be aware of:&lt;br /&gt;
&lt;br /&gt;
* On a 32-bit operating system, LucidDB is limited by the size of the virtual address space of the process it runs in.  This varies by operating system, but will always be less than 4GB, possibly much less.  On a 64-bit operating system, the corresponding limit is so high as to be irrelevant.&lt;br /&gt;
** 32-bit Linux limits each process to a [http://lwn.net/Articles/91829/ 3 GB address space].&lt;br /&gt;
** 32-bit Windows limits each process to a 2 GB address space, though some versions provide a &amp;lt;tt&amp;gt;[http://www.microsoft.com/whdc/system/platform/server/PAE/PAEmem.mspx /3GB]&amp;lt;/tt&amp;gt; switch in &amp;lt;tt&amp;gt;boot.ini&amp;lt;/tt&amp;gt;  to switch to a 3 GB address space.&lt;br /&gt;
** In any event, part of the address space is consumed by application code.&lt;br /&gt;
* Regardless of operating system, LucidDB is limited by the available physical RAM.  &amp;lt;strike&amp;gt;LucidDB intentionally locks buffer pool pages into memory to discourage abuse of virtual memory, so you can't allocate more RAM than you actually have.&amp;lt;/strike&amp;gt;  (Locking buffer pool pages requires root access to increase '''ulimit -l''', so this is currently disabled.)&lt;br /&gt;
&lt;br /&gt;
The error message from exceeding a limit varies according to the operating system and type of limit.  In general, it's a good idea to be cautious when trying to set a higher limit (go up by increments).  Prior to version 0.7.1, you may end up with a database image which can't even be successfully started, so [[LucidDbBackupRestore|make a backup first]].  More recently, LucidDB will fall back to a relatively small default number of maximum cache pages (currently 1024) in the event that either &amp;lt;tt&amp;gt;cachePagesMax&amp;lt;/tt&amp;gt; or &amp;lt;tt&amp;gt;cachePagesInit&amp;lt;/tt&amp;gt; is too large.  You should verify that your changes are in effect by examining the [[#What_Are_My_Current_Settings.3F|performance counters]] system view.&lt;br /&gt;
&lt;br /&gt;
Besides hard limits, there are also other considerations to take into account:&lt;br /&gt;
&lt;br /&gt;
* Every byte locked up in the buffer pool is unavailable to LucidDB's Java VM (both in terms of available address space and physical RAM).  If the JVM can't allocate enough space for its heap, performance will suffer due to excessive garbage collection; eventually Java out-of-memory errors may also occur, causing SQL execution to fail.  Even if the JVM heap has space left, a huge buffer pool may prevent the JVM from managing native memory effectively, leading to performance problems or even an abrupt end to the process.  For example, Sun's JVM allocates memory from the process heap (in excess of its configured maximum Java heap size) for the purposes of dynamic compilation.  If these allocations fail, the JVM will terminate abruptly.&lt;br /&gt;
* Besides LucidDB's own JVM, other processes running on the machine will be affected if LucidDB's buffer pool eats up too much of the available RAM.  This [http://sourceforge.net/mailarchive/forum.php?thread_name=622835.33228.qm%40web51303.mail.re2.yahoo.com&amp;amp;forum_name=luciddb-users mailing list post] gives an example where it was no longer possible to start sqllineClient on the same machine to fix the problem!&lt;br /&gt;
&lt;br /&gt;
= How Low Can I Go? =&lt;br /&gt;
&lt;br /&gt;
The hard limit is 1 page, but you should never set the buffer pool anywhere near that low; the system is likely to lock up since it needs to keep a few pages in reserve at all times for critical transaction-processing purposes.  As with size increases, [[LucidDbBackupRestore|make a backup first]].&lt;br /&gt;
&lt;br /&gt;
Setting the buffer pool size too low will generally lead to poor performance, since many of LucidDB's algorithms perform better when given more scratch memory from the buffer pool.  A bigger buffer pool also allows more stored data to be kept in cache.&lt;br /&gt;
&lt;br /&gt;
Beyond a certain point, statement execution will not even be able to start if not enough scratch memory can be allocated from the buffer pool.  The minimum amount of memory needed per statement is in general proportional to the complexity of the statement; in particular, INSERT and MERGE statement complexity is proportional to the number of columns and indexes defined on the target table.  When you see the error below ('''Cache scratch memory exhausted'''), the remedy is to either increase the buffer pool size, or decrease the degree of concurrency.&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
0: jdbc:luciddb:&amp;gt; create schema s;&lt;br /&gt;
0: jdbc:luciddb:&amp;gt; create table s.t(i int, j int, k int, l int, m int, n int);&lt;br /&gt;
0: jdbc:luciddb:&amp;gt; alter system set &amp;quot;cachePagesInit&amp;quot;=10;&lt;br /&gt;
0: jdbc:luciddb:&amp;gt; insert into s.t values (1,2,3,4,5,6);&lt;br /&gt;
Error: Cache scratch memory exhausted (state=,code=0)&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
= Could I Get Some Hard Numbers, Please? =&lt;br /&gt;
&lt;br /&gt;
By this point, you're probably thinking this page is waving its hands a lot.  And you're right.  But it's for a reason...tuning memory settings for a DBMS is very much an application-specific and system-specific activity for which there are only rules of thumb.  Beyond that, there is no substitute for iterative tuning based on empirical results from benchmarking a specific configuration.&lt;br /&gt;
&lt;br /&gt;
LucidDB does provide performance counters such as cache hits; for that, see the [[LucidDbSystemViews#DBA_PERFORMANCE_COUNTERS|SYS_ROOT.DBA_PERFORMANCE_COUNTERS]] system view, and [[LucidDbMonitor]].  For more information, see [[LucidDbPerformanceTuning]].&lt;br /&gt;
&lt;br /&gt;
= What Are My Current Settings? =&lt;br /&gt;
&lt;br /&gt;
In case you forget what changes you've made to a system, or wish to verify that changes are working correctly:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
0: jdbc:luciddb:&amp;gt; select * from sys_root.dba_system_parameters where param_name like 'cachePages%';&lt;br /&gt;
+-----------------+--------------+&lt;br /&gt;
|   PARAM_NAME    | PARAM_VALUE  |&lt;br /&gt;
+-----------------+--------------+&lt;br /&gt;
| cachePagesMax   | 5000         |&lt;br /&gt;
| cachePagesInit  | 2500         |&lt;br /&gt;
+-----------------+--------------+&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
= Reference table of memory variables =&lt;br /&gt;
&lt;br /&gt;
Reference table clipped from: [[LucidDbSystemParameters | LucidDbSystemParameters]] where more variables can be found.&lt;br /&gt;
&lt;br /&gt;
&amp;lt;table {{table}}&amp;gt;&lt;br /&gt;
    &amp;lt;tr&amp;gt;&lt;br /&gt;
        &amp;lt;th align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;&amp;gt;'''Category'''&amp;lt;/th&amp;gt;&lt;br /&gt;
        &amp;lt;th align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;&amp;gt;'''Name'''&amp;lt;/th&amp;gt;&lt;br /&gt;
        &amp;lt;th align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;&amp;gt;'''Domain'''&amp;lt;/th&amp;gt;&lt;br /&gt;
        &amp;lt;th align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;&amp;gt;'''Default Value'''&amp;lt;/th&amp;gt;&lt;br /&gt;
        &amp;lt;th align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;&amp;gt;'''Update Policy'''&amp;lt;/th&amp;gt;&lt;br /&gt;
        &amp;lt;th align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;&amp;gt;'''Description'''&amp;lt;/th&amp;gt;&lt;br /&gt;
    &amp;lt;/tr&amp;gt;&lt;br /&gt;
&amp;lt;tr&amp;gt;&lt;br /&gt;
&amp;lt;td rowspan=7&amp;gt;Memory&amp;lt;/td&amp;gt;&lt;br /&gt;
&amp;lt;/tr&amp;gt;&lt;br /&gt;
    &amp;lt;tr&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;codeCacheMaxBytes&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;64-bit integer (number of bytes, 0 for disabled, -1 for unlimited)&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;2000000&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;Immediate&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;Sets the size of the LucidDB code cache, which is used for optimizer/executor plan caching and SQL/MED data wrapper pooling. Setting to MAX causes the cache to grow without bound except for the JVM heap size. Setting to MIN disables the code cache, discarding any currently cached entries. Setting to a finite value causes LRU victimization according to rough estimates on per-object memory usage.&amp;lt;/td&amp;gt;&lt;br /&gt;
    &amp;lt;/tr&amp;gt;&lt;br /&gt;
    &amp;lt;tr&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;cachePagesMax&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;32-bit integer (number of pages; page size is 32K for all parameters in this table)&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;5000&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;Takes effect on startup.&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;Determines upper bound for number of pages cache can allocate. On startup, actual upper bound is set to the larger of this parameter and cachePagesInit. Subsequently, changes to cachePagesInit are limited by upper bound calculated at startup.&amp;lt;/td&amp;gt;&lt;br /&gt;
&lt;br /&gt;
    &amp;lt;/tr&amp;gt;&lt;br /&gt;
    &amp;lt;tr&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;cachePagesInit&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;32-bit integer (number of pages)&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;5000 (corresponds to 160MB for the default 32K page size)&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;Immediate.&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;Sets number of memory buffers to allocate from the OS for LucidDB's data cache (also used as a pool for volatile scratch memory allocated by ExecStreams). Increasing it after startup causes new free buffers to be allocated; decreasing it causes buffers to be released (flushing them first if they contain dirty data). Note that this memory is NOT part of the JVM heap, although it shares the same virtual memory address space.  See [[LucidDbMemoryManagement]] and [[LucidDbBufferPoolSizing]] for more information.&amp;lt;/td&amp;gt;&lt;br /&gt;
    &amp;lt;/tr&amp;gt;&lt;br /&gt;
    &amp;lt;tr&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;cacheReservePercentage&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;32-bit integer (percentage expressed as an integer between 1 and 99, inclusive)&amp;lt;/td&amp;gt;&lt;br /&gt;
&lt;br /&gt;
        &amp;lt;td&amp;gt;5&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;Immediate.&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;The percentage of the LucidDB data cache that should be set aside for global resource usage. The remainder will be available to allocate to individual statements.&amp;lt;/td&amp;gt;&lt;br /&gt;
    &amp;lt;/tr&amp;gt;&lt;br /&gt;
    &amp;lt;tr&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;expectedConcurrentStatements&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;32-bit integer (number of statements)&amp;lt;/td&amp;gt;&lt;br /&gt;
&lt;br /&gt;
        &amp;lt;td&amp;gt;4&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;Immediate.&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;Indicates to the resource governor what is expected to be the maximum number of concurrent statements executing at any given time. It is used by the resource governor to determine the maximum resource allocation for each statement.&amp;lt;/td&amp;gt;&lt;br /&gt;
    &amp;lt;/tr&amp;gt;&lt;br /&gt;
    &amp;lt;tr&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;processorCacheBytes&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;32-bit integer (number of bytes)&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;-1&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;Takes effect on startup.&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;Controls the amount of last-level CPU cache (typically L2, sometimes L3) to be used by memory-conscious data structures for improved cache coherence.  The default value of -1 requests an automatic setting; currently this is 2MB, but may be changed to hardware autodetect in the future.  '''This parameter is not available before v0.9.2'''.&amp;lt;/td&amp;gt;&lt;br /&gt;
    &amp;lt;/tr&amp;gt;&lt;br /&gt;
&amp;lt;/table&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbBufferPoolSizing</id>
		<title>LucidDbBufferPoolSizing</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbBufferPoolSizing"/>
				<updated>2011-11-14T16:43:50Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: Added memory references&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;This page explains how to change the size of the buffer pool LucidDB allocates from available RAM, and why you might need to do that.  For background on the buffer pool, read [[LucidDbMemoryManagement]].&lt;br /&gt;
= Introduction =&lt;br /&gt;
&lt;br /&gt;
You should also increase the buffer pool sizing to increase the amount of memory that LucidDB uses to &amp;quot;run queries&amp;quot;&lt;br /&gt;
(the Java adjustments will only increase the catalog/parsing/optimizer memory settings but not the actual execution engine). &lt;br /&gt;
&lt;br /&gt;
= What is the Default Buffer Pool Size? =&lt;br /&gt;
&lt;br /&gt;
For standard LucidDB packaging, it's 5000 pages of 32KB each, which works out to a little under 160MB (using the [http://kb.iu.edu/data/ackw.html common definition of KB and MB]).&lt;br /&gt;
&lt;br /&gt;
= How Do I Change the Buffer Pool Size? =&lt;br /&gt;
&lt;br /&gt;
The SQL command to change the buffer pool size is as follows, and it takes effect immediately (allocating or freeing the specified number of 32K pages of memory from the OS as needed):&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
alter system set &amp;quot;cachePagesInit&amp;quot; = 10000;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
However, if you are increasing the buffer pool size above its default for the very first time, it takes a little more work.  The reason is that there is a separate system parameter, '''cachePagesMax''', which imposes an upper bound:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
0: jdbc:luciddb:&amp;gt; alter system set &amp;quot;cachePagesInit&amp;quot;=50000;&lt;br /&gt;
Error: Invalid parameter setting.  Setting must be between 1 and 'cachePagesMax'. (state=,code=0)&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
In that case, use the following procedure:&lt;br /&gt;
&lt;br /&gt;
1. Raise the ceiling:&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
alter system set &amp;quot;cachePagesMax&amp;quot; = 10000;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
2. Restart LucidDB&lt;br /&gt;
&lt;br /&gt;
3. Change '''cachePagesInit''':&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
alter system set &amp;quot;cachePagesInit&amp;quot; = 10000;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
There's no need to restart LucidDB a second time.&lt;br /&gt;
&lt;br /&gt;
= How Do I Convert From Bytes to Pages? =&lt;br /&gt;
&lt;br /&gt;
This requires a bit of arithmetic (a system procedure taking a string like '512MB' as parameter would be nicer, but doesn't exist yet).&lt;br /&gt;
&lt;br /&gt;
Suppose you would like a 512MB buffer pool size.  That's 512*1048576 bytes = 536870912 bytes.  Since each pages is 32KB=32768 bytes, you want 536870912/32768=16384 pages.  If you're good with powers of two, you can avoid the big numbers (512MB=2^29; 32KB=2^15; 29-15=14; 2^14=16384).&lt;br /&gt;
&lt;br /&gt;
FORMULA SHORTCUTs: &lt;br /&gt;
* (Your desired size in MB * 32) = pages.  Example: 512*32 = 16384 (pages). (512MB)&lt;br /&gt;
* (Your desired size in GB * 32768) = pages.  Example 4*32768 = 131072 (pages). (4GB)&lt;br /&gt;
&lt;br /&gt;
= How High Can I Go? =&lt;br /&gt;
&lt;br /&gt;
There are a number of hard limits you should be aware of:&lt;br /&gt;
&lt;br /&gt;
* On a 32-bit operating system, LucidDB is limited by the size of the virtual address space of the process it runs in.  This varies by operating system, but will always be less than 4GB, possibly much less.  On a 64-bit operating system, the corresponding limit is so high as to be irrelevant.&lt;br /&gt;
** 32-bit Linux limits each process to a [http://lwn.net/Articles/91829/ 3 GB address space].&lt;br /&gt;
** 32-bit Windows limits each process to a 2 GB address space, though some versions provide a &amp;lt;tt&amp;gt;[http://www.microsoft.com/whdc/system/platform/server/PAE/PAEmem.mspx /3GB]&amp;lt;/tt&amp;gt; switch in &amp;lt;tt&amp;gt;boot.ini&amp;lt;/tt&amp;gt;  to switch to a 3 GB address space.&lt;br /&gt;
** In any event, part of the address space is consumed by application code.&lt;br /&gt;
* Regardless of operating system, LucidDB is limited by the available physical RAM.  &amp;lt;strike&amp;gt;LucidDB intentionally locks buffer pool pages into memory to discourage abuse of virtual memory, so you can't allocate more RAM than you actually have.&amp;lt;/strike&amp;gt;  (Locking buffer pool pages requires root access to increase '''ulimit -l''', so this is currently disabled.)&lt;br /&gt;
&lt;br /&gt;
The error message from exceeding a limit varies according to the operating system and type of limit.  In general, it's a good idea to be cautious when trying to set a higher limit (go up by increments).  Prior to version 0.7.1, you may end up with a database image which can't even be successfully started, so [[LucidDbBackupRestore|make a backup first]].  More recently, LucidDB will fall back to a relatively small default number of maximum cache pages (currently 1024) in the event that either &amp;lt;tt&amp;gt;cachePagesMax&amp;lt;/tt&amp;gt; or &amp;lt;tt&amp;gt;cachePagesInit&amp;lt;/tt&amp;gt; is too large.  You should verify that your changes are in effect by examining the [[#What_Are_My_Current_Settings.3F|performance counters]] system view.&lt;br /&gt;
&lt;br /&gt;
Besides hard limits, there are also other considerations to take into account:&lt;br /&gt;
&lt;br /&gt;
* Every byte locked up in the buffer pool is unavailable to LucidDB's Java VM (both in terms of available address space and physical RAM).  If the JVM can't allocate enough space for its heap, performance will suffer due to excessive garbage collection; eventually Java out-of-memory errors may also occur, causing SQL execution to fail.  Even if the JVM heap has space left, a huge buffer pool may prevent the JVM from managing native memory effectively, leading to performance problems or even an abrupt end to the process.  For example, Sun's JVM allocates memory from the process heap (in excess of its configured maximum Java heap size) for the purposes of dynamic compilation.  If these allocations fail, the JVM will terminate abruptly.&lt;br /&gt;
* Besides LucidDB's own JVM, other processes running on the machine will be affected if LucidDB's buffer pool eats up too much of the available RAM.  This [http://sourceforge.net/mailarchive/forum.php?thread_name=622835.33228.qm%40web51303.mail.re2.yahoo.com&amp;amp;forum_name=luciddb-users mailing list post] gives an example where it was no longer possible to start sqllineClient on the same machine to fix the problem!&lt;br /&gt;
&lt;br /&gt;
= How Low Can I Go? =&lt;br /&gt;
&lt;br /&gt;
The hard limit is 1 page, but you should never set the buffer pool anywhere near that low; the system is likely to lock up since it needs to keep a few pages in reserve at all times for critical transaction-processing purposes.  As with size increases, [[LucidDbBackupRestore|make a backup first]].&lt;br /&gt;
&lt;br /&gt;
Setting the buffer pool size too low will generally lead to poor performance, since many of LucidDB's algorithms perform better when given more scratch memory from the buffer pool.  A bigger buffer pool also allows more stored data to be kept in cache.&lt;br /&gt;
&lt;br /&gt;
Beyond a certain point, statement execution will not even be able to start if not enough scratch memory can be allocated from the buffer pool.  The minimum amount of memory needed per statement is in general proportional to the complexity of the statement; in particular, INSERT and MERGE statement complexity is proportional to the number of columns and indexes defined on the target table.  When you see the error below ('''Cache scratch memory exhausted'''), the remedy is to either increase the buffer pool size, or decrease the degree of concurrency.&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
0: jdbc:luciddb:&amp;gt; create schema s;&lt;br /&gt;
0: jdbc:luciddb:&amp;gt; create table s.t(i int, j int, k int, l int, m int, n int);&lt;br /&gt;
0: jdbc:luciddb:&amp;gt; alter system set &amp;quot;cachePagesInit&amp;quot;=10;&lt;br /&gt;
0: jdbc:luciddb:&amp;gt; insert into s.t values (1,2,3,4,5,6);&lt;br /&gt;
Error: Cache scratch memory exhausted (state=,code=0)&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
= Could I Get Some Hard Numbers, Please? =&lt;br /&gt;
&lt;br /&gt;
By this point, you're probably thinking this page is waving its hands a lot.  And you're right.  But it's for a reason...tuning memory settings for a DBMS is very much an application-specific and system-specific activity for which there are only rules of thumb.  Beyond that, there is no substitute for iterative tuning based on empirical results from benchmarking a specific configuration.&lt;br /&gt;
&lt;br /&gt;
LucidDB does provide performance counters such as cache hits; for that, see the [[LucidDbSystemViews#DBA_PERFORMANCE_COUNTERS|SYS_ROOT.DBA_PERFORMANCE_COUNTERS]] system view, and [[LucidDbMonitor]].  For more information, see [[LucidDbPerformanceTuning]].&lt;br /&gt;
&lt;br /&gt;
= What Are My Current Settings? =&lt;br /&gt;
&lt;br /&gt;
In case you forget what changes you've made to a system, or wish to verify that changes are working correctly:&lt;br /&gt;
&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
0: jdbc:luciddb:&amp;gt; select * from sys_root.dba_system_parameters where param_name like 'cachePages%';&lt;br /&gt;
+-----------------+--------------+&lt;br /&gt;
|   PARAM_NAME    | PARAM_VALUE  |&lt;br /&gt;
+-----------------+--------------+&lt;br /&gt;
| cachePagesMax   | 5000         |&lt;br /&gt;
| cachePagesInit  | 2500         |&lt;br /&gt;
+-----------------+--------------+&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
&lt;br /&gt;
= References =&lt;br /&gt;
&lt;br /&gt;
Reference table clipped from: [[LucidDbSystemParameters | LucidDbSystemParameters]] where more variables can be found.&lt;br /&gt;
&lt;br /&gt;
&amp;lt;table {{table}}&amp;gt;&lt;br /&gt;
    &amp;lt;tr&amp;gt;&lt;br /&gt;
        &amp;lt;th align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;&amp;gt;'''Category'''&amp;lt;/th&amp;gt;&lt;br /&gt;
        &amp;lt;th align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;&amp;gt;'''Name'''&amp;lt;/th&amp;gt;&lt;br /&gt;
        &amp;lt;th align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;&amp;gt;'''Domain'''&amp;lt;/th&amp;gt;&lt;br /&gt;
        &amp;lt;th align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;&amp;gt;'''Default Value'''&amp;lt;/th&amp;gt;&lt;br /&gt;
        &amp;lt;th align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;&amp;gt;'''Update Policy'''&amp;lt;/th&amp;gt;&lt;br /&gt;
        &amp;lt;th align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;&amp;gt;'''Description'''&amp;lt;/th&amp;gt;&lt;br /&gt;
    &amp;lt;/tr&amp;gt;&lt;br /&gt;
&amp;lt;tr&amp;gt;&lt;br /&gt;
&amp;lt;td rowspan=7&amp;gt;Memory&amp;lt;/td&amp;gt;&lt;br /&gt;
&amp;lt;/tr&amp;gt;&lt;br /&gt;
    &amp;lt;tr&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;codeCacheMaxBytes&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;64-bit integer (number of bytes, 0 for disabled, -1 for unlimited)&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;2000000&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;Immediate&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;Sets the size of the LucidDB code cache, which is used for optimizer/executor plan caching and SQL/MED data wrapper pooling. Setting to MAX causes the cache to grow without bound except for the JVM heap size. Setting to MIN disables the code cache, discarding any currently cached entries. Setting to a finite value causes LRU victimization according to rough estimates on per-object memory usage.&amp;lt;/td&amp;gt;&lt;br /&gt;
    &amp;lt;/tr&amp;gt;&lt;br /&gt;
    &amp;lt;tr&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;cachePagesMax&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;32-bit integer (number of pages; page size is 32K for all parameters in this table)&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;5000&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;Takes effect on startup.&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;Determines upper bound for number of pages cache can allocate. On startup, actual upper bound is set to the larger of this parameter and cachePagesInit. Subsequently, changes to cachePagesInit are limited by upper bound calculated at startup.&amp;lt;/td&amp;gt;&lt;br /&gt;
&lt;br /&gt;
    &amp;lt;/tr&amp;gt;&lt;br /&gt;
    &amp;lt;tr&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;cachePagesInit&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;32-bit integer (number of pages)&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;5000 (corresponds to 160MB for the default 32K page size)&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;Immediate.&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;Sets number of memory buffers to allocate from the OS for LucidDB's data cache (also used as a pool for volatile scratch memory allocated by ExecStreams). Increasing it after startup causes new free buffers to be allocated; decreasing it causes buffers to be released (flushing them first if they contain dirty data). Note that this memory is NOT part of the JVM heap, although it shares the same virtual memory address space.  See [[LucidDbMemoryManagement]] and [[LucidDbBufferPoolSizing]] for more information.&amp;lt;/td&amp;gt;&lt;br /&gt;
    &amp;lt;/tr&amp;gt;&lt;br /&gt;
    &amp;lt;tr&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;cacheReservePercentage&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;32-bit integer (percentage expressed as an integer between 1 and 99, inclusive)&amp;lt;/td&amp;gt;&lt;br /&gt;
&lt;br /&gt;
        &amp;lt;td&amp;gt;5&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;Immediate.&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;The percentage of the LucidDB data cache that should be set aside for global resource usage. The remainder will be available to allocate to individual statements.&amp;lt;/td&amp;gt;&lt;br /&gt;
    &amp;lt;/tr&amp;gt;&lt;br /&gt;
    &amp;lt;tr&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;expectedConcurrentStatements&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;32-bit integer (number of statements)&amp;lt;/td&amp;gt;&lt;br /&gt;
&lt;br /&gt;
        &amp;lt;td&amp;gt;4&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;Immediate.&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;Indicates to the resource governor what is expected to be the maximum number of concurrent statements executing at any given time. It is used by the resource governor to determine the maximum resource allocation for each statement.&amp;lt;/td&amp;gt;&lt;br /&gt;
    &amp;lt;/tr&amp;gt;&lt;br /&gt;
    &amp;lt;tr&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;processorCacheBytes&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;32-bit integer (number of bytes)&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;-1&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;Takes effect on startup.&amp;lt;/td&amp;gt;&lt;br /&gt;
        &amp;lt;td&amp;gt;Controls the amount of last-level CPU cache (typically L2, sometimes L3) to be used by memory-conscious data structures for improved cache coherence.  The default value of -1 requests an automatic setting; currently this is 2MB, but may be changed to hardware autodetect in the future.  '''This parameter is not available before v0.9.2'''.&amp;lt;/td&amp;gt;&lt;br /&gt;
    &amp;lt;/tr&amp;gt;&lt;br /&gt;
&amp;lt;/table&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbDocs</id>
		<title>LucidDbDocs</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbDocs"/>
				<updated>2011-11-14T16:33:33Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* Administrator Guides */ memory management&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;This is the main index page for documentation about the [[LucidDB]] open-source project, a DBMS optimized for business intelligence.  LucidDB is part of [http://www.eigenbase.org The Eigenbase Project].&amp;lt;br&amp;gt;&lt;br /&gt;
[[Image:Lucid db logo PMS 2010.png|400px|right]] __TOC__&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
= LucidDB User Documentation =&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Getting Started ==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''LucidDB Server''' [[Image:AdminUI 11-4-2011 1-07-28 PM.jpg|[[http://pub.eigenbase.org/wiki/DynamoBIAdminUI AdminUI v1.0]]|thumb|200px]]&lt;br /&gt;
* [[LucidDbGettingStarted | Getting Started - An Installation Guide]]&lt;br /&gt;
* [[LucidDbUserFaq | Frequently Asked Questions]]&lt;br /&gt;
* [[DynamoBIAdminUI | LucidDB AdminUI - Web Based Server Management Tool]] &lt;br /&gt;
: A graphical browser-based frontend from DynamoBI specifically built for LucidDB&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''External Software'''[[Image:Squirrel SQL 11-4-2011 1-24-26 PM.jpg|Squirrel SQL client running on Windows 7|thumb|200px]]&lt;br /&gt;
* [[LucidDbSquirrel | Squirrel SQL Client]] &lt;br /&gt;
: A graphical SQL client for accessing many database platforms, including LucidDB&lt;br /&gt;
* [[LucidDbPowerArchitect | Power Architect]]&lt;br /&gt;
: A data modeling tool&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== User Guides ==&lt;br /&gt;
* [[LucidDbUdfHowto | User Defined Functions (UDF) Howto]]&lt;br /&gt;
* [[LucidDbUdfJavaHowto | User Defined Functions (UDF) Java Howto]]&lt;br /&gt;
* [[LucidDbUdxJavaHowto | User Defined Transformation (UDX) Java Howto]]&lt;br /&gt;
* [[LucidDbEtlTutorial | Extract, Transform and Load (ETL) Tutorial]]&lt;br /&gt;
* [[LucidDbOlap| Online Analytical Processing (OLAP)]]&lt;br /&gt;
** [[LucidDbMondrianReplication | Using Pentaho Mondrian Replication]]&lt;br /&gt;
** [[LucidDbAggregateDesigner | Using Pentaho Aggregate Designer for Mondrian]]&lt;br /&gt;
* [[LucidDbConcurrencyControl | Concurrency Control]]&lt;br /&gt;
* [[LucidDbDataStorageAndAccess | Data Storage And Access]]&lt;br /&gt;
* [[LucidDbErrorHandling | Error Handling]]&lt;br /&gt;
* [[LucidDbIndexAccess | Index Access]]&lt;br /&gt;
* [[LucidDbJoinOptimization | Join Optimization]]&lt;br /&gt;
* [[LucidDbJoinImplementation | Join Implementation]]&lt;br /&gt;
* [[LucidDbSlowQueryDiagnosis | Slow Query Diagnosis]]:  Diagnosing slow queries using EXPLAIN PLAN and other tools&lt;br /&gt;
* [[LucidDbSubqueries | Subqueries]]&lt;br /&gt;
* [[LucidDbWarehouseLabels | Warehouse Labels]]&lt;br /&gt;
:  Labels allow users to have read-only query access to a snapshot of the database at an earlier point in time. Snapshots are accessible regardless of  concurrent activities on other connections, like ETL, preparing new data.&lt;br /&gt;
* [[LucidDbQueryExecution | Query Execution]]&lt;br /&gt;
* [[LucidDbServerContainer | Server Container]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Administrator Guides ==&lt;br /&gt;
&lt;br /&gt;
LucidDB is designed to require as little administration as possible, so we hope this section can remain short :)&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbMemoryManagement | Memory Management]]&lt;br /&gt;
** [[LucidDbBufferPoolSizing | Buffer Pool Sizing]] &amp;lt;br&amp;gt;You should also increase the buffer pool sizing to increase the amount of memory that LucidDB uses to &amp;quot;run queries&amp;quot; &amp;lt;br&amp;gt;(the Java adjustments will only increase the catalog/parsing/optimizer memory settings but not the actual execution engine).&lt;br /&gt;
* [[LucidDbSystemProcedures | System Procedures]]&lt;br /&gt;
: Useful for: Backup/Restore, Generating DDL for tables and other objects, managing sessions.&lt;br /&gt;
* [[LucidDbSystemParameters | System Parameters]]&lt;br /&gt;
: Useful information about tweaking: Memory usage, network settings, execution, and storage functionality.&lt;br /&gt;
* [[LucidDbSessionParameters| Session Parameters]]&lt;br /&gt;
* [[LucidDbSystemViews | System Views]]&lt;br /&gt;
: The DBA views defined by LucidDB provide a global picture of the contents of the system catalog (tables, columns, etc) and the volatile state of the system (sessions, cache utilization, etc).&lt;br /&gt;
* [[LucidDbPerformanceTuning | Performance Tuning]]&lt;br /&gt;
** [[LucidDbPerformanceCounters | Performance Counters]]&lt;br /&gt;
** [[LucidDbMonitor | Monitor]] Active monitoring&lt;br /&gt;
* [[LucidDbTracing | Tracing]] Debug Logs in LucidDB&lt;br /&gt;
* [[LucidDbBackupRestore | Performing Backups and Restores]]&lt;br /&gt;
* [[LucidDbUpgrade | How to upgrade to each new release.]]&lt;br /&gt;
* [[LucidDbAsDaemonService | Running LucidDB as a Service / Daemon]]&lt;br /&gt;
* [[LucidDbAsManagedBean | Running LucidDB as a Managed Java Bean]]&lt;br /&gt;
* [[LucidDbMoveCatalog | Moving the LucidDB Database Catalog]]&lt;br /&gt;
* [[LucidDbScriptingLucidUsingBASH | Scripting LucidDB using BASH shell scripts]]&lt;br /&gt;
&lt;br /&gt;
== Function and SQL Language Reference Guides ==&lt;br /&gt;
* [[AppLib]] - Description of the utility function library in LucidDB&lt;br /&gt;
* [[LucidDbDataTypes | Supported Data Types]]&lt;br /&gt;
* [[LucidDbSqlConformance | SQL Standard Conformance]]&lt;br /&gt;
* [[LucidDbSqlReference | SQL Language Reference]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Connectors to External Data Sources (SQL/MED) ([http://farrago.sourceforge.net/design/sqlmed.html Management of External Data])==&lt;br /&gt;
[[Image:Connectors.jpg|thumb|200px|right|See more general information about connectors here [[http://www.dynamobi.com/c/products/luciddb/connectors http://www.dynamobi.com]].]]&lt;br /&gt;
These connectors wrap up external datasources and allow them to present their data as foreign tables inside of LucidDB.  Connectors are an adapters that generally allow normal SQL queries to be run against datasources that may not support the SQL language directly.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbFlatFileWrapper | Flat File Wrapper]] - Connector enabling read-only SQL accesses to text files&lt;br /&gt;
* [[FarragoMedJdbcPlugin | JDBC Data Wrapper]] - Connector enabling presentation of external database tables in LucidDB&lt;br /&gt;
* [[FarragoMedSalesforcePlugin|Salesforce Data Wrapper]] - Connector for presenting Salesforce tables in LucidDB&lt;br /&gt;
* CouchDB connections:&lt;br /&gt;
** Blog: [http://www.nicholasgoodman.com/bt/blog/2011/06/08/sql-access-to-couchdb-views/ SQL access to couchdb views]&lt;br /&gt;
** Blog: [http://www.nicholasgoodman.com/bt/blog/2011/06/22/sql-access-to-couchdb-views-easy-reporting/ SQL access to CouchDB views : Easy Reporting]&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Benchmark Studies ==&lt;br /&gt;
* [[LucidDbTpch|TPCH Benchmarks]]&lt;br /&gt;
* [[LucidDbSqbm | SQBM]]&lt;br /&gt;
* [[LucidDbOtp| OTP Benchmark using Bureau of Transportation Statistics]], [http://www.mysqlperformanceblog.com/2010/01/07/star-schema-bechmark-infobright-infinidb-and-luciddb SSB Benchmark]&lt;br /&gt;
* [[LucidDbBenchmarkCandidates| Benchmark Candidates]] - Published benchmarks and applications which could serve as good showcases for LucidDB's architecture&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
== Commercial Support ==&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
Quick, reliable service and support is available to you from DynamoBI, the commercial sponsor of LucidDB.&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''DynamoBI Global Headquarters'''[[Image:Dynamobi logo large2.png|right|200px]]&amp;lt;br&amp;gt;&lt;br /&gt;
42nd Floor&amp;lt;br&amp;gt;&lt;br /&gt;
601 Union Street&amp;lt;br&amp;gt;&lt;br /&gt;
Two Union Square&amp;lt;br&amp;gt;&lt;br /&gt;
Seattle, WA 98101 USA&amp;lt;br&amp;gt;&lt;br /&gt;
Tel. +1 888 LucidDB (582-4332)&amp;lt;br&amp;gt;&lt;br /&gt;
Time Zone: PDT&amp;lt;br&amp;gt;&lt;br /&gt;
Business Hours: 8-6 PDT&amp;lt;br&amp;gt;&lt;br /&gt;
[[http://www.dynamobi.com/c/company/contact-us Contact us!]]&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Community Involvement ==&lt;br /&gt;
LucidDB is one of the best databases in the world because of the people, not just the technology.&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Community Support Forum'''&lt;br /&gt;
: Please visit, ask questions and help others &lt;br /&gt;
: [[http://www.luciddb.org/forums/ http://www.luciddb.org/forums/]]&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Chat with us online'''&lt;br /&gt;
: Many LucidDB users hang out on an Internet Relay Chat channel (IRC) called ##luciddb, using Freenode's [http://freenode.net/irc_servers.shtml] servers.&lt;br /&gt;
: We would love to answer your questions and help you get up and going using LucidDB.&lt;br /&gt;
: When you connect to '''chat.us.freenode.net''' or other freenode server near your country, be sure to use the command '''/join ##luciddb''' to actually join the chat channel for LucidDB.&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
:{| {{table}}&lt;br /&gt;
| align=&amp;quot;Left&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Software Name'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Platform'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Download Location'''&lt;br /&gt;
|-&lt;br /&gt;
| qwebirc||Web-based client||http://webchat.freenode.net/&lt;br /&gt;
|-&lt;br /&gt;
| ChatZilla||Firefox Add-on||https://addons.mozilla.org/en-US/firefox/addon/chatzilla/&lt;br /&gt;
|-&lt;br /&gt;
| mIRC||MS Windows||http://www.mirc.com/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||MS Windows||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||Linux||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat Aqua||Mac OS||http://sourceforge.net/projects/xchataqua/&lt;br /&gt;
|-&lt;br /&gt;
| Colloquy||Apple iPad &amp;amp; iPhone||http://colloquy.info/&lt;br /&gt;
|-&lt;br /&gt;
| Android - Internet Relay Chat||Google Android||https://market.android.com/details?id=com.countercultured.irc&amp;amp;hl=en&lt;br /&gt;
|}&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
* '''Bug and Feature Tracking&lt;br /&gt;
: Make a feature request or report a problem you have experienced.&lt;br /&gt;
: [[http://jira.eigenbase.org/secure/Dashboard.jspa http://jira.eigenbase.org/secure/Dashboard.jspa]]&lt;br /&gt;
&lt;br /&gt;
== Presentations / Blogs ==&lt;br /&gt;
* [[Media:PerconaLucidDB.ppt|Percona LucidDB PowerPoint Slides]]&lt;br /&gt;
* [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive]&lt;br /&gt;
: Demonstrates loading data, defining an OLAP cube, and browsing the cube with Pentaho, Jaspersoft, SpagoBI and Saiku which all use Mondrian to drive their OLAP functionality.&lt;br /&gt;
* [http://wiki.pentaho.com/display/COM/January+20,+2010+-+Nick+Goodman+-+LucidDB,+DynamoBI+and+Mondrian Pentaho - January 20, 2010 - Nick Goodman - LucidDB, DynamoBI and Mondrian]&lt;br /&gt;
: Webex Presentation and PDF of slides presenting benefits and features of LucidDB 0.9.3 in conjunction with Pentaho's BI Suite.&lt;br /&gt;
* [http://www.nicholasgoodman.com/bt/blog/2011/06/08/a-different-vision-for-the-value-of-big-data/ A different vision for the value of Big Data]&lt;br /&gt;
: DynamoBI (Commercial Sponsor of LucidDB) - CEO Nick Goodman - shares vision about how LucidDB forms an information hub from which many different data sources can be presented and queried through normal SQL.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Tutorial Videos and Screencasts ==&lt;br /&gt;
&lt;br /&gt;
* [http://www.dynamobi.com/c/support/tutorial-videos/ DynamoBI - Getting started online videos.]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/installation.swf Installing LucidDB]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/sqllineclient.swf Connecting to LucidDB and using the Command Line Interface, sqllineClient]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/stopping_server.swf Stopping the server, with and without users connected]&lt;br /&gt;
* [http://youtu.be/sSYsVoVrp24 Installing and Loading LucidDB backed sample OLAP]&lt;br /&gt;
** Video from this blog: [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive] - By Slawomir Chodnicki, on March 12th, 2011&lt;br /&gt;
* [http://youtu.be/ZnY223u6q_Y Installing and running LucidDB as a daemon in Linux using a Java Service Wrapper]&lt;br /&gt;
: This is an approach that may also work well on Windows.  There is another approach, which is shorter and easier using the BASH shell under Linux. Documentation for both approaches can be found at [[LucidDbAsDaemonService]].&lt;br /&gt;
* Moving tables from one database to LucidDB&lt;br /&gt;
:[http://pub.eigenbase.org/wiki/LucidDbUpgrade#Downloads_-_Using_Pentaho_Data_Integration_to_generate_a_SQL_script_for_moving_tables Using Pentaho Data Integration to generate SQL for moving tables from an external database to LucidDB]&lt;br /&gt;
: This link is actually to a document about upgrading version to version of LucidDB, but because a PDI transformation file is used to generate SQL for the transition, the process can be generalized as moving from an external database to LucidDB with only minor modifications to the transformation.&lt;br /&gt;
&lt;br /&gt;
== Experimental ==&lt;br /&gt;
&lt;br /&gt;
*[http://kettle.pentaho.com/ Pentaho Data Integration (PDI)] - Bulk Loading Plugins&lt;br /&gt;
** [[LucidDbPDIStreamingLoader| Streaming Loader Step]] - Bulk load data the easy way. '''[RECOMMENDED]''' &lt;br /&gt;
**  [[LucidDbPdiBulkLoad | Bulk Load Step]] - '''[DEPRECATED after LucidDB 0.9.3]'''&lt;br /&gt;
**  [[LucidDbStreamingLoad |Streaming Loader]] : A good example for building bulk loaders from non-Java tools. '''[INFORMATIONAL]'''&lt;br /&gt;
* [[LucidDbHorizontalPartitioning | Horizontal Partitioning]]&lt;br /&gt;
: LucidDB does not currently support DDL for automatic [http://en.wikipedia.org/wiki/Partition_%28database%29 horizontal partitioning] of tables.  Although LucidDB's column-store architecture implements automatic vertical partitioning, horizontal partitioning is still a useful technique for scaling up to very large data volumes, so this page describes some manual approaches which can be used for very simple schemas.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbNonJavaClients | Using Non-Java Clients with LucidDB]]&lt;br /&gt;
: The main client API for LucidDB is JDBC.  This page discusses some options for overcoming the obstacle of developing an application in a language other than Java.&lt;br /&gt;
* [[LucidDbSqlDiffTesting | SQL Diff Testing]]&lt;br /&gt;
: Description of how to make use of some of the diff-based testing frameworks built into LucidDB for the purpose of test-driven ETL script development.&lt;br /&gt;
* [[LucidDbHive | Hive]]&lt;br /&gt;
: Walk-through document showing how to combine LucidDB with [http://hadoop.apache.org/hive/ Apache Hadoop's Hive].&lt;br /&gt;
&lt;br /&gt;
= LucidDB Developer Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbBuildFromSourceDistribution | Building LucidDB from source code]]&lt;br /&gt;
* [[LucidDbBuildFromPerforce | Building LucidDB from Perforce (version control software, VCS)]]&lt;br /&gt;
* [[Main_Page#Collaboration | Main Developer Collaboration Section ]]&lt;br /&gt;
* [[DesignMeetings | Design Meetings - Feature Ideas and Roadmaps]]&lt;br /&gt;
&lt;br /&gt;
= LucidDB Design Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbEfficientUpdates | Efficient Updates]]&lt;br /&gt;
* [[LucidDbCommonRelationalSubExpressionMaterialization | Common Relational Sub-Expression Materialization]]&lt;br /&gt;
&lt;br /&gt;
= Trademark Notice =&lt;br /&gt;
&lt;br /&gt;
&amp;lt;sub&amp;gt;LucidDB and the LucidDB logo are trademarks of DynamoBI Corporation.&amp;lt;/sub&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbDocs</id>
		<title>LucidDbDocs</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbDocs"/>
				<updated>2011-11-14T16:23:10Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* Connectors to External Data Sources (SQL/MED) ([http://farrago.sourceforge.net/design/sqlmed.html Management of External Data]) */  Add couchdb information&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;This is the main index page for documentation about the [[LucidDB]] open-source project, a DBMS optimized for business intelligence.  LucidDB is part of [http://www.eigenbase.org The Eigenbase Project].&amp;lt;br&amp;gt;&lt;br /&gt;
[[Image:Lucid db logo PMS 2010.png|400px|right]] __TOC__&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
= LucidDB User Documentation =&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Getting Started ==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''LucidDB Server''' [[Image:AdminUI 11-4-2011 1-07-28 PM.jpg|[[http://pub.eigenbase.org/wiki/DynamoBIAdminUI AdminUI v1.0]]|thumb|200px]]&lt;br /&gt;
* [[LucidDbGettingStarted | Getting Started - An Installation Guide]]&lt;br /&gt;
* [[LucidDbUserFaq | Frequently Asked Questions]]&lt;br /&gt;
* [[DynamoBIAdminUI | LucidDB AdminUI - Web Based Server Management Tool]] &lt;br /&gt;
: A graphical browser-based frontend from DynamoBI specifically built for LucidDB&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''External Software'''[[Image:Squirrel SQL 11-4-2011 1-24-26 PM.jpg|Squirrel SQL client running on Windows 7|thumb|200px]]&lt;br /&gt;
* [[LucidDbSquirrel | Squirrel SQL Client]] &lt;br /&gt;
: A graphical SQL client for accessing many database platforms, including LucidDB&lt;br /&gt;
* [[LucidDbPowerArchitect | Power Architect]]&lt;br /&gt;
: A data modeling tool&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== User Guides ==&lt;br /&gt;
* [[LucidDbUdfHowto | User Defined Functions (UDF) Howto]]&lt;br /&gt;
* [[LucidDbUdfJavaHowto | User Defined Functions (UDF) Java Howto]]&lt;br /&gt;
* [[LucidDbUdxJavaHowto | User Defined Transformation (UDX) Java Howto]]&lt;br /&gt;
* [[LucidDbEtlTutorial | Extract, Transform and Load (ETL) Tutorial]]&lt;br /&gt;
* [[LucidDbOlap| Online Analytical Processing (OLAP)]]&lt;br /&gt;
** [[LucidDbMondrianReplication | Using Pentaho Mondrian Replication]]&lt;br /&gt;
** [[LucidDbAggregateDesigner | Using Pentaho Aggregate Designer for Mondrian]]&lt;br /&gt;
* [[LucidDbConcurrencyControl | Concurrency Control]]&lt;br /&gt;
* [[LucidDbDataStorageAndAccess | Data Storage And Access]]&lt;br /&gt;
* [[LucidDbErrorHandling | Error Handling]]&lt;br /&gt;
* [[LucidDbIndexAccess | Index Access]]&lt;br /&gt;
* [[LucidDbJoinOptimization | Join Optimization]]&lt;br /&gt;
* [[LucidDbJoinImplementation | Join Implementation]]&lt;br /&gt;
* [[LucidDbSlowQueryDiagnosis | Slow Query Diagnosis]]:  Diagnosing slow queries using EXPLAIN PLAN and other tools&lt;br /&gt;
* [[LucidDbSubqueries | Subqueries]]&lt;br /&gt;
* [[LucidDbWarehouseLabels | Warehouse Labels]]&lt;br /&gt;
:  Labels allow users to have read-only query access to a snapshot of the database at an earlier point in time. Snapshots are accessible regardless of  concurrent activities on other connections, like ETL, preparing new data.&lt;br /&gt;
* [[LucidDbQueryExecution | Query Execution]]&lt;br /&gt;
* [[LucidDbServerContainer | Server Container]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Administrator Guides ==&lt;br /&gt;
&lt;br /&gt;
LucidDB is designed to require as little administration as possible, so we hope this section can remain short :)&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbMemoryManagement | Memory Management]]&lt;br /&gt;
** [[LucidDbBufferPoolSizing | Buffer Pool Sizing]]&lt;br /&gt;
* [[LucidDbSystemProcedures | System Procedures]]&lt;br /&gt;
: Useful for: Backup/Restore, Generating DDL for tables and other objects, managing sessions.&lt;br /&gt;
* [[LucidDbSystemParameters | System Parameters]]&lt;br /&gt;
: Useful information about tweaking: Memory usage, network settings, execution, and storage functionality.&lt;br /&gt;
* [[LucidDbSessionParameters| Session Parameters]]&lt;br /&gt;
* [[LucidDbSystemViews | System Views]]&lt;br /&gt;
: The DBA views defined by LucidDB provide a global picture of the contents of the system catalog (tables, columns, etc) and the volatile state of the system (sessions, cache utilization, etc).&lt;br /&gt;
* [[LucidDbPerformanceTuning | Performance Tuning]]&lt;br /&gt;
** [[LucidDbPerformanceCounters | Performance Counters]]&lt;br /&gt;
** [[LucidDbMonitor | Monitor]] Active monitoring&lt;br /&gt;
* [[LucidDbTracing | Tracing]] Debug Logs in LucidDB&lt;br /&gt;
* [[LucidDbBackupRestore | Performing Backups and Restores]]&lt;br /&gt;
* [[LucidDbUpgrade | How to upgrade to each new release.]]&lt;br /&gt;
* [[LucidDbAsDaemonService | Running LucidDB as a Service / Daemon]]&lt;br /&gt;
* [[LucidDbAsManagedBean | Running LucidDB as a Managed Java Bean]]&lt;br /&gt;
* [[LucidDbMoveCatalog | Moving the LucidDB Database Catalog]]&lt;br /&gt;
* [[LucidDbScriptingLucidUsingBASH | Scripting LucidDB using BASH shell scripts]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Function and SQL Language Reference Guides ==&lt;br /&gt;
* [[AppLib]] - Description of the utility function library in LucidDB&lt;br /&gt;
* [[LucidDbDataTypes | Supported Data Types]]&lt;br /&gt;
* [[LucidDbSqlConformance | SQL Standard Conformance]]&lt;br /&gt;
* [[LucidDbSqlReference | SQL Language Reference]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Connectors to External Data Sources (SQL/MED) ([http://farrago.sourceforge.net/design/sqlmed.html Management of External Data])==&lt;br /&gt;
[[Image:Connectors.jpg|thumb|200px|right|See more general information about connectors here [[http://www.dynamobi.com/c/products/luciddb/connectors http://www.dynamobi.com]].]]&lt;br /&gt;
These connectors wrap up external datasources and allow them to present their data as foreign tables inside of LucidDB.  Connectors are an adapters that generally allow normal SQL queries to be run against datasources that may not support the SQL language directly.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbFlatFileWrapper | Flat File Wrapper]] - Connector enabling read-only SQL accesses to text files&lt;br /&gt;
* [[FarragoMedJdbcPlugin | JDBC Data Wrapper]] - Connector enabling presentation of external database tables in LucidDB&lt;br /&gt;
* [[FarragoMedSalesforcePlugin|Salesforce Data Wrapper]] - Connector for presenting Salesforce tables in LucidDB&lt;br /&gt;
* CouchDB connections:&lt;br /&gt;
** Blog: [http://www.nicholasgoodman.com/bt/blog/2011/06/08/sql-access-to-couchdb-views/ SQL access to couchdb views]&lt;br /&gt;
** Blog: [http://www.nicholasgoodman.com/bt/blog/2011/06/22/sql-access-to-couchdb-views-easy-reporting/ SQL access to CouchDB views : Easy Reporting]&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Benchmark Studies ==&lt;br /&gt;
* [[LucidDbTpch|TPCH Benchmarks]]&lt;br /&gt;
* [[LucidDbSqbm | SQBM]]&lt;br /&gt;
* [[LucidDbOtp| OTP Benchmark using Bureau of Transportation Statistics]], [http://www.mysqlperformanceblog.com/2010/01/07/star-schema-bechmark-infobright-infinidb-and-luciddb SSB Benchmark]&lt;br /&gt;
* [[LucidDbBenchmarkCandidates| Benchmark Candidates]] - Published benchmarks and applications which could serve as good showcases for LucidDB's architecture&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
== Commercial Support ==&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
Quick, reliable service and support is available to you from DynamoBI, the commercial sponsor of LucidDB.&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''DynamoBI Global Headquarters'''[[Image:Dynamobi logo large2.png|right|200px]]&amp;lt;br&amp;gt;&lt;br /&gt;
42nd Floor&amp;lt;br&amp;gt;&lt;br /&gt;
601 Union Street&amp;lt;br&amp;gt;&lt;br /&gt;
Two Union Square&amp;lt;br&amp;gt;&lt;br /&gt;
Seattle, WA 98101 USA&amp;lt;br&amp;gt;&lt;br /&gt;
Tel. +1 888 LucidDB (582-4332)&amp;lt;br&amp;gt;&lt;br /&gt;
Time Zone: PDT&amp;lt;br&amp;gt;&lt;br /&gt;
Business Hours: 8-6 PDT&amp;lt;br&amp;gt;&lt;br /&gt;
[[http://www.dynamobi.com/c/company/contact-us Contact us!]]&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Community Involvement ==&lt;br /&gt;
LucidDB is one of the best databases in the world because of the people, not just the technology.&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Community Support Forum'''&lt;br /&gt;
: Please visit, ask questions and help others &lt;br /&gt;
: [[http://www.luciddb.org/forums/ http://www.luciddb.org/forums/]]&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Chat with us online'''&lt;br /&gt;
: Many LucidDB users hang out on an Internet Relay Chat channel (IRC) called ##luciddb, using Freenode's [http://freenode.net/irc_servers.shtml] servers.&lt;br /&gt;
: We would love to answer your questions and help you get up and going using LucidDB.&lt;br /&gt;
: When you connect to '''chat.us.freenode.net''' or other freenode server near your country, be sure to use the command '''/join ##luciddb''' to actually join the chat channel for LucidDB.&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
:{| {{table}}&lt;br /&gt;
| align=&amp;quot;Left&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Software Name'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Platform'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Download Location'''&lt;br /&gt;
|-&lt;br /&gt;
| qwebirc||Web-based client||http://webchat.freenode.net/&lt;br /&gt;
|-&lt;br /&gt;
| ChatZilla||Firefox Add-on||https://addons.mozilla.org/en-US/firefox/addon/chatzilla/&lt;br /&gt;
|-&lt;br /&gt;
| mIRC||MS Windows||http://www.mirc.com/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||MS Windows||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||Linux||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat Aqua||Mac OS||http://sourceforge.net/projects/xchataqua/&lt;br /&gt;
|-&lt;br /&gt;
| Colloquy||Apple iPad &amp;amp; iPhone||http://colloquy.info/&lt;br /&gt;
|-&lt;br /&gt;
| Android - Internet Relay Chat||Google Android||https://market.android.com/details?id=com.countercultured.irc&amp;amp;hl=en&lt;br /&gt;
|}&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
* '''Bug and Feature Tracking&lt;br /&gt;
: Make a feature request or report a problem you have experienced.&lt;br /&gt;
: [[http://jira.eigenbase.org/secure/Dashboard.jspa http://jira.eigenbase.org/secure/Dashboard.jspa]]&lt;br /&gt;
&lt;br /&gt;
== Presentations / Blogs ==&lt;br /&gt;
* [[Media:PerconaLucidDB.ppt|Percona LucidDB PowerPoint Slides]]&lt;br /&gt;
* [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive]&lt;br /&gt;
: Demonstrates loading data, defining an OLAP cube, and browsing the cube with Pentaho, Jaspersoft, SpagoBI and Saiku which all use Mondrian to drive their OLAP functionality.&lt;br /&gt;
* [http://wiki.pentaho.com/display/COM/January+20,+2010+-+Nick+Goodman+-+LucidDB,+DynamoBI+and+Mondrian Pentaho - January 20, 2010 - Nick Goodman - LucidDB, DynamoBI and Mondrian]&lt;br /&gt;
: Webex Presentation and PDF of slides presenting benefits and features of LucidDB 0.9.3 in conjunction with Pentaho's BI Suite.&lt;br /&gt;
* [http://www.nicholasgoodman.com/bt/blog/2011/06/08/a-different-vision-for-the-value-of-big-data/ A different vision for the value of Big Data]&lt;br /&gt;
: DynamoBI (Commercial Sponsor of LucidDB) - CEO Nick Goodman - shares vision about how LucidDB forms an information hub from which many different data sources can be presented and queried through normal SQL.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Tutorial Videos and Screencasts ==&lt;br /&gt;
&lt;br /&gt;
* [http://www.dynamobi.com/c/support/tutorial-videos/ DynamoBI - Getting started online videos.]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/installation.swf Installing LucidDB]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/sqllineclient.swf Connecting to LucidDB and using the Command Line Interface, sqllineClient]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/stopping_server.swf Stopping the server, with and without users connected]&lt;br /&gt;
* [http://youtu.be/sSYsVoVrp24 Installing and Loading LucidDB backed sample OLAP]&lt;br /&gt;
** Video from this blog: [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive] - By Slawomir Chodnicki, on March 12th, 2011&lt;br /&gt;
* [http://youtu.be/ZnY223u6q_Y Installing and running LucidDB as a daemon in Linux using a Java Service Wrapper]&lt;br /&gt;
: This is an approach that may also work well on Windows.  There is another approach, which is shorter and easier using the BASH shell under Linux. Documentation for both approaches can be found at [[LucidDbAsDaemonService]].&lt;br /&gt;
* Moving tables from one database to LucidDB&lt;br /&gt;
:[http://pub.eigenbase.org/wiki/LucidDbUpgrade#Downloads_-_Using_Pentaho_Data_Integration_to_generate_a_SQL_script_for_moving_tables Using Pentaho Data Integration to generate SQL for moving tables from an external database to LucidDB]&lt;br /&gt;
: This link is actually to a document about upgrading version to version of LucidDB, but because a PDI transformation file is used to generate SQL for the transition, the process can be generalized as moving from an external database to LucidDB with only minor modifications to the transformation.&lt;br /&gt;
&lt;br /&gt;
== Experimental ==&lt;br /&gt;
&lt;br /&gt;
*[http://kettle.pentaho.com/ Pentaho Data Integration (PDI)] - Bulk Loading Plugins&lt;br /&gt;
** [[LucidDbPDIStreamingLoader| Streaming Loader Step]] - Bulk load data the easy way. '''[RECOMMENDED]''' &lt;br /&gt;
**  [[LucidDbPdiBulkLoad | Bulk Load Step]] - '''[DEPRECATED after LucidDB 0.9.3]'''&lt;br /&gt;
**  [[LucidDbStreamingLoad |Streaming Loader]] : A good example for building bulk loaders from non-Java tools. '''[INFORMATIONAL]'''&lt;br /&gt;
* [[LucidDbHorizontalPartitioning | Horizontal Partitioning]]&lt;br /&gt;
: LucidDB does not currently support DDL for automatic [http://en.wikipedia.org/wiki/Partition_%28database%29 horizontal partitioning] of tables.  Although LucidDB's column-store architecture implements automatic vertical partitioning, horizontal partitioning is still a useful technique for scaling up to very large data volumes, so this page describes some manual approaches which can be used for very simple schemas.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbNonJavaClients | Using Non-Java Clients with LucidDB]]&lt;br /&gt;
: The main client API for LucidDB is JDBC.  This page discusses some options for overcoming the obstacle of developing an application in a language other than Java.&lt;br /&gt;
* [[LucidDbSqlDiffTesting | SQL Diff Testing]]&lt;br /&gt;
: Description of how to make use of some of the diff-based testing frameworks built into LucidDB for the purpose of test-driven ETL script development.&lt;br /&gt;
* [[LucidDbHive | Hive]]&lt;br /&gt;
: Walk-through document showing how to combine LucidDB with [http://hadoop.apache.org/hive/ Apache Hadoop's Hive].&lt;br /&gt;
&lt;br /&gt;
= LucidDB Developer Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbBuildFromSourceDistribution | Building LucidDB from source code]]&lt;br /&gt;
* [[LucidDbBuildFromPerforce | Building LucidDB from Perforce (version control software, VCS)]]&lt;br /&gt;
* [[Main_Page#Collaboration | Main Developer Collaboration Section ]]&lt;br /&gt;
* [[DesignMeetings | Design Meetings - Feature Ideas and Roadmaps]]&lt;br /&gt;
&lt;br /&gt;
= LucidDB Design Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbEfficientUpdates | Efficient Updates]]&lt;br /&gt;
* [[LucidDbCommonRelationalSubExpressionMaterialization | Common Relational Sub-Expression Materialization]]&lt;br /&gt;
&lt;br /&gt;
= Trademark Notice =&lt;br /&gt;
&lt;br /&gt;
&amp;lt;sub&amp;gt;LucidDB and the LucidDB logo are trademarks of DynamoBI Corporation.&amp;lt;/sub&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/AppLib</id>
		<title>AppLib</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/AppLib"/>
				<updated>2011-11-09T18:14:17Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: Added reference to GitHub source code for Applib&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;= Overview =&lt;br /&gt;
&lt;br /&gt;
This page is an index for the Eigenbase application library (applib), a collection of commonly needed application routines packaged with [[LucidDbDocs|LucidDB]] and other Eigenbase sub-projects.  For LucidDB system-management routines (some of which may also be useful for application purposes), see [[LucidDbSystemProcedures]].&lt;br /&gt;
&lt;br /&gt;
== Numeric Routines ==&lt;br /&gt;
&lt;br /&gt;
* [[AppLib_RAND | RAND]]&lt;br /&gt;
&lt;br /&gt;
== String Routines ==&lt;br /&gt;
&lt;br /&gt;
* [[AppLib_CHAR_REPLACE | CHAR_REPLACE]]&lt;br /&gt;
* [[AppLib_CONTAINS_NUMBER | CONTAINS_NUMBER]]&lt;br /&gt;
* [[AppLib_INSTR | INSTR]]&lt;br /&gt;
* [[AppLib_LEFTN | LEFTN]]&lt;br /&gt;
* [[AppLib_REPEATER | REPEATER]]&lt;br /&gt;
* [[AppLib_RIGHTN | RIGHTN]]&lt;br /&gt;
* [[AppLib_STR_REPLACE | STR_REPLACE]]&lt;br /&gt;
&lt;br /&gt;
== Date/Time Routines ==&lt;br /&gt;
&lt;br /&gt;
* [[AppLib_ADD_DAYS | ADD_DAYS]]&lt;br /&gt;
* [[AppLib_ADD_HOURS | ADD_HOURS]]&lt;br /&gt;
* [[AppLib_ADJUST_TIMESTAMP | ADJUST_TIMESTAMP]] (Only from 0.9.4 on)&lt;br /&gt;
* [[AppLib_CALENDAR_QUARTER | CALENDAR_QUARTER]]&lt;br /&gt;
* [[AppLib_CHAR_TO_DATE | CHAR_TO_DATE]]&lt;br /&gt;
* [[AppLib_CHAR_TO_TIME | CHAR_TO_TIME]]&lt;br /&gt;
* [[AppLib_CHAR_TO_TIMESTAMP | CHAR_TO_TIMESTAMP]]&lt;br /&gt;
* [[AppLib_CONVERT_DATE | CONVERT_DATE]]&lt;br /&gt;
* [[AppLib_CURRENT_DATE_IN_JULIAN | CURRENT_DATE_IN_JULIAN]]&lt;br /&gt;
* [[AppLib_DATE_TO_CHAR | DATE_TO_CHAR]]&lt;br /&gt;
* [[AppLib_DAY_FROM_JULIAN_START | DAY_FROM_JULIAN_START]]&lt;br /&gt;
* [[AppLib_DAY_IN_YEAR | DAY_IN_YEAR]]&lt;br /&gt;
* [[AppLib_DAY_NUMBER_OVERALL | DAY_NUMBER_OVERALL]]&lt;br /&gt;
* [[AppLib_DAYS_DIFF | DAYS_DIFF]]&lt;br /&gt;
* [[AppLib_DERIVE_EFFECTIVE_TO_TIMESTAMP | DERIVE_EFFECTIVE_TO_TIMESTAMP]]&lt;br /&gt;
* [[AppLib_EXTRACT_TIMESTAMP | EXTRACT_TIMESTAMP]] (Only from 0.9.4 on)&lt;br /&gt;
* [[AppLib_FISCAL_MONTH | FISCAL_MONTH]]&lt;br /&gt;
* [[AppLib_FISCAL_TIME_DIMENSION | FISCAL_TIME_DIMENSION]]&lt;br /&gt;
* [[AppLib_FISCAL_QUARTER | FISCAL_QUARTER]]&lt;br /&gt;
* [[AppLib_FISCAL_YEAR | FISCAL_YEAR]]&lt;br /&gt;
* [[AppLib_HOURS_DIFF | HOURS_DIFF]]&lt;br /&gt;
* [[AppLib_JULIAN_DAY_TO_DATE | JULIAN_DAY_TO_DATE]]&lt;br /&gt;
* [[AppLib_JULIAN_DAY_TO_TIMESTAMP | JULIAN_DAY_TO_TIMESTAMP]]&lt;br /&gt;
* [[AppLib_PADWEEKNUMBER | PADWEEKNUMBER]]&lt;br /&gt;
* [[AppLib_TIME_DIMENSION | TIME_DIMENSION]]&lt;br /&gt;
* [[AppLib_TIME_TO_CHAR | TIME_TO_CHAR]]&lt;br /&gt;
* [[AppLib_TIMESTAMP_TO_CHAR | TIMESTAMP_TO_CHAR]]&lt;br /&gt;
* [[AppLib_TRUNCATE_TIMESTAMP | TRUNCATE_TIMESTAMP]] (Only from 0.9.4 on)&lt;br /&gt;
&lt;br /&gt;
== Phone Number Routines ==&lt;br /&gt;
'''Purpose'''&lt;br /&gt;
:Standardizes the format for telephone numbers. &lt;br /&gt;
'''Functions'''&lt;br /&gt;
* [[AppLib_CLEAN_PHONE | CLEAN_PHONE]]&lt;br /&gt;
* [[AppLib_CLEAN_PHONE_INTERNATIONAL | CLEAN_PHONE_INTERNATIONAL]]&lt;br /&gt;
&lt;br /&gt;
== Security-Related Routines ==&lt;br /&gt;
&lt;br /&gt;
* [[AppLib_GRANT_SELECT_FOR_SCHEMA | GRANT_SELECT_FOR_SCHEMA]]&lt;br /&gt;
&lt;br /&gt;
== ANALYZE Routines ==&lt;br /&gt;
&lt;br /&gt;
'''Purpose'''&lt;br /&gt;
:Causes LucidDB to create statistical information for optimizing performance of queries.&lt;br /&gt;
'''Recommended use''' &lt;br /&gt;
:Use after ETL or other updates to tables.&lt;br /&gt;
&lt;br /&gt;
'''Functions'''&lt;br /&gt;
&lt;br /&gt;
* [[AppLib_COMPUTE_STATISTICS_FOR_SCHEMA | COMPUTE_STATISTICS_FOR_SCHEMA]]&lt;br /&gt;
: Executes 'analyze table' with 'compute statistics for all columns' for all tables in a schema. &lt;br /&gt;
* [[AppLib_ESTIMATE_STATISTICS_FOR_SCHEMA | ESTIMATE_STATISTICS_FOR_SCHEMA]]&lt;br /&gt;
&lt;br /&gt;
== Row/Column Transformations ==&lt;br /&gt;
&lt;br /&gt;
* [[AppLib_COLLAPSE_ROWS | COLLAPSE_ROWS]]&lt;br /&gt;
* [[AppLib_CONTIGUOUS_VALUE_INTERVALS | CONTIGUOUS_VALUE_INTERVALS]]&lt;br /&gt;
* [[AppLib_FLATTEN_RECURSIVE_HIERARCHY | FLATTEN_RECURSIVE_HIERARCHY]]&lt;br /&gt;
* [[AppLib_FLATTEN_RECURSIVE_HIERARCHY_ALL_LEVELS | FLATTEN_RECURSIVE_HIERARCHY_ALL_LEVELS]]&lt;br /&gt;
* [[AppLib_GENERATE_CRC | GENERATE_CRC]]&lt;br /&gt;
* [[AppLib_GENERATE_SEQUENCE | GENERATE_SEQUENCE]]  (Only available starting with LucidDB 0.9.4.)&lt;br /&gt;
* [[AppLib_GENERATE_SEQUENCE | GENERATE_SEQUENCE_PARTITIONED]]  (Only available starting with LucidDB 0.9.4.)&lt;br /&gt;
* [[AppLib_PENULTIMATE_VALUES | PENULTIMATE_VALUES]]&lt;br /&gt;
* [[AppLib_PIVOT_COLUMNS_TO_ROWS | PIVOT_COLUMNS_TO_ROWS]]&lt;br /&gt;
* [[AppLib_SPLIT_STRINGS | SPLIT_STRINGS]]&lt;br /&gt;
* [[AppLib_TOPN | TOPN]]&lt;br /&gt;
&lt;br /&gt;
== General Utility Routines ==&lt;br /&gt;
&lt;br /&gt;
* [[AppLib_CREATE_VAR | CREATE_VAR]]&lt;br /&gt;
* [[AppLib_DELETE_VAR | DELETE_VAR]]&lt;br /&gt;
* [[AppLib_DO_FOR_ENTIRE_SCHEMA | DO_FOR_ENTIRE_SCHEMA]]&lt;br /&gt;
* [[AppLib_DROP_SCHEMA_IF_EXISTS | DROP_SCHEMA_IF_EXISTS]]&lt;br /&gt;
* [[AppLib_ENFORCE_ROW_CONSTRAINTS | ENFORCE_ROW_CONSTRAINTS]]&lt;br /&gt;
* [[AppLib_EXEC_SQL_IF_NO_ROWS | EXEC_SQL_IF_NO_ROWS]]&lt;br /&gt;
* [[AppLib_FLUSH_VAR | FLUSH_VAR]]&lt;br /&gt;
* [[AppLib_GET_VAR | GET_VAR]]&lt;br /&gt;
* [[AppLib_SET_VAR | SET_VAR]]&lt;br /&gt;
* [[AppLib_CLEAR_PENTAHO_MONDRIAN_CACHE | CLEAR_PENTAHO_MONDRIAN_CACHE]]&lt;br /&gt;
* [[AppLib_SHOW_IDX_CANDIDATES | SHOW_IDX_CANDIDATES]] (Only available starting with LucidDB 0.9.4.)&lt;br /&gt;
* [[AppLib_CREATE_INDEXES | CREATE_INDEXES]] (Only available starting with LucidDB 0.9.4.)&lt;br /&gt;
&lt;br /&gt;
== Data Loading Utility Routines ==&lt;br /&gt;
&lt;br /&gt;
* [[AppLib_REPLICATE_MONDRIAN | REPLICATE_MONDRIAN]]&lt;br /&gt;
: Replication will copy both metadata and data from your source DBMS into LucidDB (guided by your Mondrian schema .xml file), creating a logically identical structure.&lt;br /&gt;
* [[AppLib_CREATE_TABLE_FROM_SOURCE_TABLE | CREATE_TABLE_FROM_SOURCE_TABLE]]&lt;br /&gt;
: Creates a table with the same structure as the source table, optionally adding a few additional columns&lt;br /&gt;
* [[AppLib_CREATE_TABLE_AS | CREATE_TABLE_AS]]&lt;br /&gt;
: Creates a table with the same structure as the SQL statement passed in. It optionally loads the table after creating the table.&lt;br /&gt;
* [[AppLib_READ_ROWS_FROM_FILE | READ_ROWS_FROM_FILE]]&lt;br /&gt;
: Allow serialized rows to be read from a file and output in a table function. &lt;br /&gt;
* [[AppLib_WRITE_ROWS_TO_FILE | WRITE_ROWS_TO_FILE]]&lt;br /&gt;
* [[AppLib_REMOTE_ROWS | REMOTE_ROWS]]&lt;br /&gt;
: Allow serialized rows to be streamed via HTTP from remote Java applications ([[LucidDbPDIStreamingLoader|PDI]] / Talend).&lt;br /&gt;
&lt;br /&gt;
== Scripting Routines==&lt;br /&gt;
&lt;br /&gt;
'''Note''': These are only available starting with LucidDB 0.9.4.&lt;br /&gt;
&lt;br /&gt;
* [[AppLib_EXECUTE_SCRIPT | EXECUTE_SCRIPT]]&lt;br /&gt;
* [[AppLib_GET_SCRIPTING_ENGINES | GET_SCRIPTING_ENGINES]]&lt;br /&gt;
* [[AppLib_EXECUTE_FUNCTION | EXECUTE_FUNCTION]]&lt;br /&gt;
* [[AppLib_EXECUTE_METHOD | EXECUTE_METHOD]]&lt;br /&gt;
* [[AppLib_EXECUTE_TRANSFORM | EXECUTE_TRANSFORM]]&lt;br /&gt;
* [[AppLib_MAKE_SCRIPT_UDF | MAKE_SCRIPT_UDF]]&lt;br /&gt;
&lt;br /&gt;
= Get the code =&lt;br /&gt;
&lt;br /&gt;
We are sorry documentation for this library is sparse in some areas.&amp;lt;br&amp;gt;&lt;br /&gt;
The source code in this library can be acquired using GIT.&amp;lt;br&amp;gt;&lt;br /&gt;
It should be easy to derive the purpose and parameters for functions in this library by looking at the code.&amp;lt;br&amp;gt;&lt;br /&gt;
Documentation will be a focus during this 4th Quarter of 2011.&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;pre&amp;gt;&lt;br /&gt;
https://github.com/dynamobi/dynamobi/tree/master/extensions/applib/src/org/eigenbase/applib&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/DynamoBIAdminUI</id>
		<title>DynamoBIAdminUI</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/DynamoBIAdminUI"/>
				<updated>2011-11-04T21:04:06Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* Extracting and Running */&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;= About =&lt;br /&gt;
[[Image:AdminUI 11-4-2011 1-07-28 PM.jpg|AdminUI v1.0|thumb|400px]]&lt;br /&gt;
The AdminUI is a graphical front-end for any web browser to LucidDB which makes database administrating simpler and does not require a great knowledge of SQL. Even SQL pros can benefit from the AdminUI and speed up a variety of tasks normally done from a command line.&lt;br /&gt;
&lt;br /&gt;
For full feature details, see the [[AdminUI Features Page|DynamoBIAdminUI_Features]].&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
= Prerequisites =&lt;br /&gt;
&lt;br /&gt;
If you have not downloaded a copy of LucidDB, please see the instructions for that at the [[LucidDbGettingStarted | LucidDB Installation Page]]. An instance of the LucidDB Server must be running in order to connect with the AdminUI.&lt;br /&gt;
&lt;br /&gt;
In order to use the AdminUI, you must have a web browser with a recent version of Flash Player installed and a recent version of the Java Runtime Environment installed on your operating system.&lt;br /&gt;
&lt;br /&gt;
= Downloading =&lt;br /&gt;
&lt;br /&gt;
Go download [[http://www.dynamobi.com/c/downloads/stable/ our latest stable build]] of Dynamo AdminUI and related services. To keep up with the latest development builds, you may instead choose to download the zip from our http://build.dynamobi.com/job/dynamo_services/  location.  The link to the development builds currently is down.&lt;br /&gt;
&lt;br /&gt;
= Extracting and Running =&lt;br /&gt;
&lt;br /&gt;
Once the zip file has downloaded, extract the ''dynamodb-services'' directory to a location of your choice. If you are on Windows, you may be able to double-click the file '''bin\startup.bat''' to start the program, otherwise launch ''cmd.exe'' and navigate to the extraction directory to run the batch file. If you are running Linux or Mac, you will have to use the command window to navigate to the extraction directory, navigate to the bin directory inside, make the .sh files inside have executable privileges, and execute '''bin/startup.sh'''. For example, if you extracted to ''/home/me/dynamodb-services'', you would run these commands:&lt;br /&gt;
&lt;br /&gt;
{code:xml}&lt;br /&gt;
$ cd /home/me/dynamodb-services&lt;br /&gt;
$ for x in `find . -name '*.sh'`; do chmod +x $x; done&lt;br /&gt;
$ ./start-dynamoservices.sh&lt;br /&gt;
{code}&lt;br /&gt;
&lt;br /&gt;
Control of the terminal should be returned, and the AdminUI should now be accessible from your web browser. Please allow up to a minute for the services to load. Once everything is ready, navigate to http://localhost:8077 and after a redirect you should be greeted with this page:&lt;br /&gt;
&lt;br /&gt;
[[Image:AdminUI Login Page.jpg]]&lt;br /&gt;
&lt;br /&gt;
If you have a LucidDB server running on your localhost as well, you may now login. The default username is '''sa''' with an empty password. If you have successfully logged in, you should see the list of available schemas in the left navigation menu populate.&lt;br /&gt;
&lt;br /&gt;
!adminui_loggedin.png!&lt;br /&gt;
&lt;br /&gt;
You can now see what sorts of things you can do with the AdminUI at the [[DynamoBIAdminUI_Features|AdminUI Features Page]].&lt;br /&gt;
&lt;br /&gt;
= Alternate Configurations =&lt;br /&gt;
&lt;br /&gt;
== What if I want to change the root's password or the password isn't blank? ==&lt;br /&gt;
&lt;br /&gt;
== What if I want LucidDB to run remotely? ==&lt;br /&gt;
&lt;br /&gt;
== What if LucidDB's port isn't the standard 8034? ==&lt;br /&gt;
&lt;br /&gt;
For all of these questions, each of these options are determined by a single configuration file. The web services read a file found in '''dynamodb-services/webapps/adminws/WEB-INF/classes''' called '''luciddb-jdbc-default.properties'''. You can simply edit this file directly, though the suggested alternative is to create a file called '''luciddb-jdbc.properties''' in the same directory with the same options. The services will favor this new file.&lt;br /&gt;
&lt;br /&gt;
First, to change &amp;quot;sa&amp;quot;'s default password (you can run this in SqlLine or in the AdminUI's query window):&lt;br /&gt;
&lt;br /&gt;
{code:sql}&lt;br /&gt;
create or replace user &amp;quot;sa&amp;quot; identified by 'newpassword';&lt;br /&gt;
{code}&lt;br /&gt;
&lt;br /&gt;
Now edit the luciddb-jdbc.properties file.&lt;br /&gt;
&lt;br /&gt;
{code:xml}&lt;br /&gt;
jdbc.driver=org.luciddb.jdbc.LucidDbClientDriver (1)&lt;br /&gt;
jdbc.url=jdbc:luciddb:http://localhost           (2)&lt;br /&gt;
jdbc.username=sa                                 (3)&lt;br /&gt;
jdbc.password=                                   (4)&lt;br /&gt;
{code}&lt;br /&gt;
&lt;br /&gt;
# Leave this alone.&lt;br /&gt;
# This is where you change the location of your LucidDB server. If it's on a different port, simply append ':XXXX' to the URL string as normal.&lt;br /&gt;
# Unless your root user has changed, this should remain &amp;quot;sa&amp;quot;.&lt;br /&gt;
# Enter your password.&lt;br /&gt;
&lt;br /&gt;
== What if I want a different port than 8077 for the web service? ==&lt;br /&gt;
&lt;br /&gt;
Simply edit the configuration file '''dynamodb-services/conf/server.xml''' and search for 8077 and replace it with your new value. Restart using the ''shutdown.sh'' and ''startup.sh'' scripts in the ''bin'' directory.&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/File:AdminUI_Login_Page.jpg</id>
		<title>File:AdminUI Login Page.jpg</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/File:AdminUI_Login_Page.jpg"/>
				<updated>2011-11-04T20:58:07Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: AdminUI Login Page Graphic&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;AdminUI Login Page Graphic&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbDocs</id>
		<title>LucidDbDocs</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbDocs"/>
				<updated>2011-11-04T20:44:40Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* Commercial Support */  moved the logo down a bit.&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;This is the main index page for documentation about the [[LucidDB]] open-source project, a DBMS optimized for business intelligence.  LucidDB is part of [http://www.eigenbase.org The Eigenbase Project].&amp;lt;br&amp;gt;&lt;br /&gt;
[[Image:Lucid db logo PMS 2010.png|400px|right]] __TOC__&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
= LucidDB User Documentation =&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Getting Started ==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''LucidDB Server''' [[Image:AdminUI 11-4-2011 1-07-28 PM.jpg|[[http://pub.eigenbase.org/wiki/DynamoBIAdminUI AdminUI v1.0]]|thumb|200px]]&lt;br /&gt;
* [[LucidDbGettingStarted | Getting Started - An Installation Guide]]&lt;br /&gt;
* [[LucidDbUserFaq | Frequently Asked Questions]]&lt;br /&gt;
* [[DynamoBIAdminUI | LucidDB AdminUI - Web Based Server Management Tool]] &lt;br /&gt;
: A graphical browser-based frontend from DynamoBI specifically built for LucidDB&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''External Software'''[[Image:Squirrel SQL 11-4-2011 1-24-26 PM.jpg|Squirrel SQL client running on Windows 7|thumb|200px]]&lt;br /&gt;
* [[LucidDbSquirrel | Squirrel SQL Client]] &lt;br /&gt;
: A graphical SQL client for accessing many database platforms, including LucidDB&lt;br /&gt;
* [[LucidDbPowerArchitect | Power Architect]]&lt;br /&gt;
: A data modeling tool&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== User Guides ==&lt;br /&gt;
* [[LucidDbUdfHowto | User Defined Functions (UDF) Howto]]&lt;br /&gt;
* [[LucidDbUdfJavaHowto | User Defined Functions (UDF) Java Howto]]&lt;br /&gt;
* [[LucidDbUdxJavaHowto | User Defined Transformation (UDX) Java Howto]]&lt;br /&gt;
* [[LucidDbEtlTutorial | Extract, Transform and Load (ETL) Tutorial]]&lt;br /&gt;
* [[LucidDbOlap| Online Analytical Processing (OLAP)]]&lt;br /&gt;
** [[LucidDbMondrianReplication | Using Pentaho Mondrian Replication]]&lt;br /&gt;
** [[LucidDbAggregateDesigner | Using Pentaho Aggregate Designer for Mondrian]]&lt;br /&gt;
* [[LucidDbConcurrencyControl | Concurrency Control]]&lt;br /&gt;
* [[LucidDbDataStorageAndAccess | Data Storage And Access]]&lt;br /&gt;
* [[LucidDbErrorHandling | Error Handling]]&lt;br /&gt;
* [[LucidDbIndexAccess | Index Access]]&lt;br /&gt;
* [[LucidDbJoinOptimization | Join Optimization]]&lt;br /&gt;
* [[LucidDbJoinImplementation | Join Implementation]]&lt;br /&gt;
* [[LucidDbSlowQueryDiagnosis | Slow Query Diagnosis]]:  Diagnosing slow queries using EXPLAIN PLAN and other tools&lt;br /&gt;
* [[LucidDbSubqueries | Subqueries]]&lt;br /&gt;
* [[LucidDbWarehouseLabels | Warehouse Labels]]&lt;br /&gt;
:  Labels allow users to have read-only query access to a snapshot of the database at an earlier point in time. Snapshots are accessible regardless of  concurrent activities on other connections, like ETL, preparing new data.&lt;br /&gt;
* [[LucidDbQueryExecution | Query Execution]]&lt;br /&gt;
* [[LucidDbServerContainer | Server Container]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Administrator Guides ==&lt;br /&gt;
&lt;br /&gt;
LucidDB is designed to require as little administration as possible, so we hope this section can remain short :)&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbMemoryManagement | Memory Management]]&lt;br /&gt;
** [[LucidDbBufferPoolSizing | Buffer Pool Sizing]]&lt;br /&gt;
* [[LucidDbSystemProcedures | System Procedures]]&lt;br /&gt;
: Useful for: Backup/Restore, Generating DDL for tables and other objects, managing sessions.&lt;br /&gt;
* [[LucidDbSystemParameters | System Parameters]]&lt;br /&gt;
: Useful information about tweaking: Memory usage, network settings, execution, and storage functionality.&lt;br /&gt;
* [[LucidDbSessionParameters| Session Parameters]]&lt;br /&gt;
* [[LucidDbSystemViews | System Views]]&lt;br /&gt;
: The DBA views defined by LucidDB provide a global picture of the contents of the system catalog (tables, columns, etc) and the volatile state of the system (sessions, cache utilization, etc).&lt;br /&gt;
* [[LucidDbPerformanceTuning | Performance Tuning]]&lt;br /&gt;
** [[LucidDbPerformanceCounters | Performance Counters]]&lt;br /&gt;
** [[LucidDbMonitor | Monitor]] Active monitoring&lt;br /&gt;
* [[LucidDbTracing | Tracing]] Debug Logs in LucidDB&lt;br /&gt;
* [[LucidDbBackupRestore | Performing Backups and Restores]]&lt;br /&gt;
* [[LucidDbUpgrade | How to upgrade to each new release.]]&lt;br /&gt;
* [[LucidDbAsDaemonService | Running LucidDB as a Service / Daemon]]&lt;br /&gt;
* [[LucidDbAsManagedBean | Running LucidDB as a Managed Java Bean]]&lt;br /&gt;
* [[LucidDbMoveCatalog | Moving the LucidDB Database Catalog]]&lt;br /&gt;
* [[LucidDbScriptingLucidUsingBASH | Scripting LucidDB using BASH shell scripts]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Function and SQL Language Reference Guides ==&lt;br /&gt;
* [[AppLib]] - Description of the utility function library in LucidDB&lt;br /&gt;
* [[LucidDbDataTypes | Supported Data Types]]&lt;br /&gt;
* [[LucidDbSqlConformance | SQL Standard Conformance]]&lt;br /&gt;
* [[LucidDbSqlReference | SQL Language Reference]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Connectors to External Data Sources (SQL/MED) ([http://farrago.sourceforge.net/design/sqlmed.html Management of External Data])==&lt;br /&gt;
[[Image:Connectors.jpg|thumb|200px|right|See more general information about connectors here [[http://www.dynamobi.com/c/products/luciddb/connectors http://www.dynamobi.com]].]]&lt;br /&gt;
These connectors wrap up external datasources and allow them to present their data as foreign tables inside of LucidDB.  Connectors are an adapters that generally allow normal SQL queries to be run against datasources that may not support the SQL language directly.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbFlatFileWrapper | Flat File Wrapper]] - Connector enabling read-only SQL accesses to text files&lt;br /&gt;
* [[FarragoMedJdbcPlugin | JDBC Data Wrapper]] - Connector enabling presentation of external database tables in LucidDB&lt;br /&gt;
* [[FarragoMedSalesforcePlugin|Salesforce Data Wrapper]] - Connector for presenting Salesforce tables in LucidDB&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Benchmark Studies ==&lt;br /&gt;
* [[LucidDbTpch|TPCH Benchmarks]]&lt;br /&gt;
* [[LucidDbSqbm | SQBM]]&lt;br /&gt;
* [[LucidDbOtp| OTP Benchmark using Bureau of Transportation Statistics]], [http://www.mysqlperformanceblog.com/2010/01/07/star-schema-bechmark-infobright-infinidb-and-luciddb SSB Benchmark]&lt;br /&gt;
* [[LucidDbBenchmarkCandidates| Benchmark Candidates]] - Published benchmarks and applications which could serve as good showcases for LucidDB's architecture&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
== Commercial Support ==&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
Quick, reliable service and support is available to you from DynamoBI, the commercial sponsor of LucidDB.&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''DynamoBI Global Headquarters'''[[Image:Dynamobi logo large2.png|right|200px]]&amp;lt;br&amp;gt;&lt;br /&gt;
42nd Floor&amp;lt;br&amp;gt;&lt;br /&gt;
601 Union Street&amp;lt;br&amp;gt;&lt;br /&gt;
Two Union Square&amp;lt;br&amp;gt;&lt;br /&gt;
Seattle, WA 98101 USA&amp;lt;br&amp;gt;&lt;br /&gt;
Tel. +1 888 LucidDB (582-4332)&amp;lt;br&amp;gt;&lt;br /&gt;
Time Zone: PDT&amp;lt;br&amp;gt;&lt;br /&gt;
Business Hours: 8-6 PDT&amp;lt;br&amp;gt;&lt;br /&gt;
[[http://www.dynamobi.com/c/company/contact-us Contact us!]]&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Community Involvement ==&lt;br /&gt;
LucidDB is one of the best databases in the world because of the people, not just the technology.&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Community Support Forum'''&lt;br /&gt;
: Please visit, ask questions and help others &lt;br /&gt;
: [[http://www.luciddb.org/forums/ http://www.luciddb.org/forums/]]&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Chat with us online'''&lt;br /&gt;
: Many LucidDB users hang out on an Internet Relay Chat channel (IRC) called ##luciddb, using Freenode's [http://freenode.net/irc_servers.shtml] servers.&lt;br /&gt;
: We would love to answer your questions and help you get up and going using LucidDB.&lt;br /&gt;
: When you connect to '''chat.us.freenode.net''' or other freenode server near your country, be sure to use the command '''/join ##luciddb''' to actually join the chat channel for LucidDB.&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
:{| {{table}}&lt;br /&gt;
| align=&amp;quot;Left&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Software Name'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Platform'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Download Location'''&lt;br /&gt;
|-&lt;br /&gt;
| qwebirc||Web-based client||http://webchat.freenode.net/&lt;br /&gt;
|-&lt;br /&gt;
| ChatZilla||Firefox Add-on||https://addons.mozilla.org/en-US/firefox/addon/chatzilla/&lt;br /&gt;
|-&lt;br /&gt;
| mIRC||MS Windows||http://www.mirc.com/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||MS Windows||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||Linux||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat Aqua||Mac OS||http://sourceforge.net/projects/xchataqua/&lt;br /&gt;
|-&lt;br /&gt;
| Colloquy||Apple iPad &amp;amp; iPhone||http://colloquy.info/&lt;br /&gt;
|-&lt;br /&gt;
| Android - Internet Relay Chat||Google Android||https://market.android.com/details?id=com.countercultured.irc&amp;amp;hl=en&lt;br /&gt;
|}&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
* '''Bug and Feature Tracking&lt;br /&gt;
: Make a feature request or report a problem you have experienced.&lt;br /&gt;
: [[http://jira.eigenbase.org/secure/Dashboard.jspa http://jira.eigenbase.org/secure/Dashboard.jspa]]&lt;br /&gt;
&lt;br /&gt;
== Presentations / Blogs ==&lt;br /&gt;
* [[Media:PerconaLucidDB.ppt|Percona LucidDB PowerPoint Slides]]&lt;br /&gt;
* [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive]&lt;br /&gt;
: Demonstrates loading data, defining an OLAP cube, and browsing the cube with Pentaho, Jaspersoft, SpagoBI and Saiku which all use Mondrian to drive their OLAP functionality.&lt;br /&gt;
* [http://wiki.pentaho.com/display/COM/January+20,+2010+-+Nick+Goodman+-+LucidDB,+DynamoBI+and+Mondrian Pentaho - January 20, 2010 - Nick Goodman - LucidDB, DynamoBI and Mondrian]&lt;br /&gt;
: Webex Presentation and PDF of slides presenting benefits and features of LucidDB 0.9.3 in conjunction with Pentaho's BI Suite.&lt;br /&gt;
* [http://www.nicholasgoodman.com/bt/blog/2011/06/08/a-different-vision-for-the-value-of-big-data/ A different vision for the value of Big Data]&lt;br /&gt;
: DynamoBI (Commercial Sponsor of LucidDB) - CEO Nick Goodman - shares vision about how LucidDB forms an information hub from which many different data sources can be presented and queried through normal SQL.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Tutorial Videos and Screencasts ==&lt;br /&gt;
&lt;br /&gt;
* [http://www.dynamobi.com/c/support/tutorial-videos/ DynamoBI - Getting started online videos.]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/installation.swf Installing LucidDB]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/sqllineclient.swf Connecting to LucidDB and using the Command Line Interface, sqllineClient]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/stopping_server.swf Stopping the server, with and without users connected]&lt;br /&gt;
* [http://youtu.be/sSYsVoVrp24 Installing and Loading LucidDB backed sample OLAP]&lt;br /&gt;
** Video from this blog: [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive] - By Slawomir Chodnicki, on March 12th, 2011&lt;br /&gt;
* [http://youtu.be/ZnY223u6q_Y Installing and running LucidDB as a daemon in Linux using a Java Service Wrapper]&lt;br /&gt;
: This is an approach that may also work well on Windows.  There is another approach, which is shorter and easier using the BASH shell under Linux. Documentation for both approaches can be found at [[LucidDbAsDaemonService]].&lt;br /&gt;
* Moving tables from one database to LucidDB&lt;br /&gt;
:[http://pub.eigenbase.org/wiki/LucidDbUpgrade#Downloads_-_Using_Pentaho_Data_Integration_to_generate_a_SQL_script_for_moving_tables Using Pentaho Data Integration to generate SQL for moving tables from an external database to LucidDB]&lt;br /&gt;
: This link is actually to a document about upgrading version to version of LucidDB, but because a PDI transformation file is used to generate SQL for the transition, the process can be generalized as moving from an external database to LucidDB with only minor modifications to the transformation.&lt;br /&gt;
&lt;br /&gt;
== Experimental ==&lt;br /&gt;
&lt;br /&gt;
*[http://kettle.pentaho.com/ Pentaho Data Integration (PDI)] - Bulk Loading Plugins&lt;br /&gt;
** [[LucidDbPDIStreamingLoader| Streaming Loader Step]] - Bulk load data the easy way. '''[RECOMMENDED]''' &lt;br /&gt;
**  [[LucidDbPdiBulkLoad | Bulk Load Step]] - '''[DEPRECATED after LucidDB 0.9.3]'''&lt;br /&gt;
**  [[LucidDbStreamingLoad |Streaming Loader]] : A good example for building bulk loaders from non-Java tools. '''[INFORMATIONAL]'''&lt;br /&gt;
* [[LucidDbHorizontalPartitioning | Horizontal Partitioning]]&lt;br /&gt;
: LucidDB does not currently support DDL for automatic [http://en.wikipedia.org/wiki/Partition_%28database%29 horizontal partitioning] of tables.  Although LucidDB's column-store architecture implements automatic vertical partitioning, horizontal partitioning is still a useful technique for scaling up to very large data volumes, so this page describes some manual approaches which can be used for very simple schemas.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbNonJavaClients | Using Non-Java Clients with LucidDB]]&lt;br /&gt;
: The main client API for LucidDB is JDBC.  This page discusses some options for overcoming the obstacle of developing an application in a language other than Java.&lt;br /&gt;
* [[LucidDbSqlDiffTesting | SQL Diff Testing]]&lt;br /&gt;
: Description of how to make use of some of the diff-based testing frameworks built into LucidDB for the purpose of test-driven ETL script development.&lt;br /&gt;
* [[LucidDbHive | Hive]]&lt;br /&gt;
: Walk-through document showing how to combine LucidDB with [http://hadoop.apache.org/hive/ Apache Hadoop's Hive].&lt;br /&gt;
&lt;br /&gt;
= LucidDB Developer Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbBuildFromSourceDistribution | Building LucidDB from source code]]&lt;br /&gt;
* [[LucidDbBuildFromPerforce | Building LucidDB from Perforce (version control software, VCS)]]&lt;br /&gt;
* [[Main_Page#Collaboration | Main Developer Collaboration Section ]]&lt;br /&gt;
* [[DesignMeetings | Design Meetings - Feature Ideas and Roadmaps]]&lt;br /&gt;
&lt;br /&gt;
= LucidDB Design Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbEfficientUpdates | Efficient Updates]]&lt;br /&gt;
* [[LucidDbCommonRelationalSubExpressionMaterialization | Common Relational Sub-Expression Materialization]]&lt;br /&gt;
&lt;br /&gt;
= Trademark Notice =&lt;br /&gt;
&lt;br /&gt;
&amp;lt;sub&amp;gt;LucidDB and the LucidDB logo are trademarks of DynamoBI Corporation.&amp;lt;/sub&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbDocs</id>
		<title>LucidDbDocs</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbDocs"/>
				<updated>2011-11-04T20:43:52Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* Commercial Support */&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;This is the main index page for documentation about the [[LucidDB]] open-source project, a DBMS optimized for business intelligence.  LucidDB is part of [http://www.eigenbase.org The Eigenbase Project].&amp;lt;br&amp;gt;&lt;br /&gt;
[[Image:Lucid db logo PMS 2010.png|400px|right]] __TOC__&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
= LucidDB User Documentation =&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Getting Started ==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''LucidDB Server''' [[Image:AdminUI 11-4-2011 1-07-28 PM.jpg|[[http://pub.eigenbase.org/wiki/DynamoBIAdminUI AdminUI v1.0]]|thumb|200px]]&lt;br /&gt;
* [[LucidDbGettingStarted | Getting Started - An Installation Guide]]&lt;br /&gt;
* [[LucidDbUserFaq | Frequently Asked Questions]]&lt;br /&gt;
* [[DynamoBIAdminUI | LucidDB AdminUI - Web Based Server Management Tool]] &lt;br /&gt;
: A graphical browser-based frontend from DynamoBI specifically built for LucidDB&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''External Software'''[[Image:Squirrel SQL 11-4-2011 1-24-26 PM.jpg|Squirrel SQL client running on Windows 7|thumb|200px]]&lt;br /&gt;
* [[LucidDbSquirrel | Squirrel SQL Client]] &lt;br /&gt;
: A graphical SQL client for accessing many database platforms, including LucidDB&lt;br /&gt;
* [[LucidDbPowerArchitect | Power Architect]]&lt;br /&gt;
: A data modeling tool&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== User Guides ==&lt;br /&gt;
* [[LucidDbUdfHowto | User Defined Functions (UDF) Howto]]&lt;br /&gt;
* [[LucidDbUdfJavaHowto | User Defined Functions (UDF) Java Howto]]&lt;br /&gt;
* [[LucidDbUdxJavaHowto | User Defined Transformation (UDX) Java Howto]]&lt;br /&gt;
* [[LucidDbEtlTutorial | Extract, Transform and Load (ETL) Tutorial]]&lt;br /&gt;
* [[LucidDbOlap| Online Analytical Processing (OLAP)]]&lt;br /&gt;
** [[LucidDbMondrianReplication | Using Pentaho Mondrian Replication]]&lt;br /&gt;
** [[LucidDbAggregateDesigner | Using Pentaho Aggregate Designer for Mondrian]]&lt;br /&gt;
* [[LucidDbConcurrencyControl | Concurrency Control]]&lt;br /&gt;
* [[LucidDbDataStorageAndAccess | Data Storage And Access]]&lt;br /&gt;
* [[LucidDbErrorHandling | Error Handling]]&lt;br /&gt;
* [[LucidDbIndexAccess | Index Access]]&lt;br /&gt;
* [[LucidDbJoinOptimization | Join Optimization]]&lt;br /&gt;
* [[LucidDbJoinImplementation | Join Implementation]]&lt;br /&gt;
* [[LucidDbSlowQueryDiagnosis | Slow Query Diagnosis]]:  Diagnosing slow queries using EXPLAIN PLAN and other tools&lt;br /&gt;
* [[LucidDbSubqueries | Subqueries]]&lt;br /&gt;
* [[LucidDbWarehouseLabels | Warehouse Labels]]&lt;br /&gt;
:  Labels allow users to have read-only query access to a snapshot of the database at an earlier point in time. Snapshots are accessible regardless of  concurrent activities on other connections, like ETL, preparing new data.&lt;br /&gt;
* [[LucidDbQueryExecution | Query Execution]]&lt;br /&gt;
* [[LucidDbServerContainer | Server Container]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Administrator Guides ==&lt;br /&gt;
&lt;br /&gt;
LucidDB is designed to require as little administration as possible, so we hope this section can remain short :)&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbMemoryManagement | Memory Management]]&lt;br /&gt;
** [[LucidDbBufferPoolSizing | Buffer Pool Sizing]]&lt;br /&gt;
* [[LucidDbSystemProcedures | System Procedures]]&lt;br /&gt;
: Useful for: Backup/Restore, Generating DDL for tables and other objects, managing sessions.&lt;br /&gt;
* [[LucidDbSystemParameters | System Parameters]]&lt;br /&gt;
: Useful information about tweaking: Memory usage, network settings, execution, and storage functionality.&lt;br /&gt;
* [[LucidDbSessionParameters| Session Parameters]]&lt;br /&gt;
* [[LucidDbSystemViews | System Views]]&lt;br /&gt;
: The DBA views defined by LucidDB provide a global picture of the contents of the system catalog (tables, columns, etc) and the volatile state of the system (sessions, cache utilization, etc).&lt;br /&gt;
* [[LucidDbPerformanceTuning | Performance Tuning]]&lt;br /&gt;
** [[LucidDbPerformanceCounters | Performance Counters]]&lt;br /&gt;
** [[LucidDbMonitor | Monitor]] Active monitoring&lt;br /&gt;
* [[LucidDbTracing | Tracing]] Debug Logs in LucidDB&lt;br /&gt;
* [[LucidDbBackupRestore | Performing Backups and Restores]]&lt;br /&gt;
* [[LucidDbUpgrade | How to upgrade to each new release.]]&lt;br /&gt;
* [[LucidDbAsDaemonService | Running LucidDB as a Service / Daemon]]&lt;br /&gt;
* [[LucidDbAsManagedBean | Running LucidDB as a Managed Java Bean]]&lt;br /&gt;
* [[LucidDbMoveCatalog | Moving the LucidDB Database Catalog]]&lt;br /&gt;
* [[LucidDbScriptingLucidUsingBASH | Scripting LucidDB using BASH shell scripts]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Function and SQL Language Reference Guides ==&lt;br /&gt;
* [[AppLib]] - Description of the utility function library in LucidDB&lt;br /&gt;
* [[LucidDbDataTypes | Supported Data Types]]&lt;br /&gt;
* [[LucidDbSqlConformance | SQL Standard Conformance]]&lt;br /&gt;
* [[LucidDbSqlReference | SQL Language Reference]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Connectors to External Data Sources (SQL/MED) ([http://farrago.sourceforge.net/design/sqlmed.html Management of External Data])==&lt;br /&gt;
[[Image:Connectors.jpg|thumb|200px|right|See more general information about connectors here [[http://www.dynamobi.com/c/products/luciddb/connectors http://www.dynamobi.com]].]]&lt;br /&gt;
These connectors wrap up external datasources and allow them to present their data as foreign tables inside of LucidDB.  Connectors are an adapters that generally allow normal SQL queries to be run against datasources that may not support the SQL language directly.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbFlatFileWrapper | Flat File Wrapper]] - Connector enabling read-only SQL accesses to text files&lt;br /&gt;
* [[FarragoMedJdbcPlugin | JDBC Data Wrapper]] - Connector enabling presentation of external database tables in LucidDB&lt;br /&gt;
* [[FarragoMedSalesforcePlugin|Salesforce Data Wrapper]] - Connector for presenting Salesforce tables in LucidDB&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Benchmark Studies ==&lt;br /&gt;
* [[LucidDbTpch|TPCH Benchmarks]]&lt;br /&gt;
* [[LucidDbSqbm | SQBM]]&lt;br /&gt;
* [[LucidDbOtp| OTP Benchmark using Bureau of Transportation Statistics]], [http://www.mysqlperformanceblog.com/2010/01/07/star-schema-bechmark-infobright-infinidb-and-luciddb SSB Benchmark]&lt;br /&gt;
* [[LucidDbBenchmarkCandidates| Benchmark Candidates]] - Published benchmarks and applications which could serve as good showcases for LucidDB's architecture&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
== Commercial Support ==&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
Quick, reliable service and support is available to you from DynamoBI, the commercial sponsor of LucidDB.[[Image:Dynamobi logo large2.png|right|200px]]&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''DynamoBI Global Headquarters'''&amp;lt;br&amp;gt;&lt;br /&gt;
42nd Floor&amp;lt;br&amp;gt;&lt;br /&gt;
601 Union Street&amp;lt;br&amp;gt;&lt;br /&gt;
Two Union Square&amp;lt;br&amp;gt;&lt;br /&gt;
Seattle, WA 98101 USA&amp;lt;br&amp;gt;&lt;br /&gt;
Tel. +1 888 LucidDB (582-4332)&amp;lt;br&amp;gt;&lt;br /&gt;
Time Zone: PDT&amp;lt;br&amp;gt;&lt;br /&gt;
Business Hours: 8-6 PDT&amp;lt;br&amp;gt;&lt;br /&gt;
[[http://www.dynamobi.com/c/company/contact-us Contact us!]]&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Community Involvement ==&lt;br /&gt;
LucidDB is one of the best databases in the world because of the people, not just the technology.&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Community Support Forum'''&lt;br /&gt;
: Please visit, ask questions and help others &lt;br /&gt;
: [[http://www.luciddb.org/forums/ http://www.luciddb.org/forums/]]&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Chat with us online'''&lt;br /&gt;
: Many LucidDB users hang out on an Internet Relay Chat channel (IRC) called ##luciddb, using Freenode's [http://freenode.net/irc_servers.shtml] servers.&lt;br /&gt;
: We would love to answer your questions and help you get up and going using LucidDB.&lt;br /&gt;
: When you connect to '''chat.us.freenode.net''' or other freenode server near your country, be sure to use the command '''/join ##luciddb''' to actually join the chat channel for LucidDB.&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
:{| {{table}}&lt;br /&gt;
| align=&amp;quot;Left&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Software Name'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Platform'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Download Location'''&lt;br /&gt;
|-&lt;br /&gt;
| qwebirc||Web-based client||http://webchat.freenode.net/&lt;br /&gt;
|-&lt;br /&gt;
| ChatZilla||Firefox Add-on||https://addons.mozilla.org/en-US/firefox/addon/chatzilla/&lt;br /&gt;
|-&lt;br /&gt;
| mIRC||MS Windows||http://www.mirc.com/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||MS Windows||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||Linux||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat Aqua||Mac OS||http://sourceforge.net/projects/xchataqua/&lt;br /&gt;
|-&lt;br /&gt;
| Colloquy||Apple iPad &amp;amp; iPhone||http://colloquy.info/&lt;br /&gt;
|-&lt;br /&gt;
| Android - Internet Relay Chat||Google Android||https://market.android.com/details?id=com.countercultured.irc&amp;amp;hl=en&lt;br /&gt;
|}&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
* '''Bug and Feature Tracking&lt;br /&gt;
: Make a feature request or report a problem you have experienced.&lt;br /&gt;
: [[http://jira.eigenbase.org/secure/Dashboard.jspa http://jira.eigenbase.org/secure/Dashboard.jspa]]&lt;br /&gt;
&lt;br /&gt;
== Presentations / Blogs ==&lt;br /&gt;
* [[Media:PerconaLucidDB.ppt|Percona LucidDB PowerPoint Slides]]&lt;br /&gt;
* [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive]&lt;br /&gt;
: Demonstrates loading data, defining an OLAP cube, and browsing the cube with Pentaho, Jaspersoft, SpagoBI and Saiku which all use Mondrian to drive their OLAP functionality.&lt;br /&gt;
* [http://wiki.pentaho.com/display/COM/January+20,+2010+-+Nick+Goodman+-+LucidDB,+DynamoBI+and+Mondrian Pentaho - January 20, 2010 - Nick Goodman - LucidDB, DynamoBI and Mondrian]&lt;br /&gt;
: Webex Presentation and PDF of slides presenting benefits and features of LucidDB 0.9.3 in conjunction with Pentaho's BI Suite.&lt;br /&gt;
* [http://www.nicholasgoodman.com/bt/blog/2011/06/08/a-different-vision-for-the-value-of-big-data/ A different vision for the value of Big Data]&lt;br /&gt;
: DynamoBI (Commercial Sponsor of LucidDB) - CEO Nick Goodman - shares vision about how LucidDB forms an information hub from which many different data sources can be presented and queried through normal SQL.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Tutorial Videos and Screencasts ==&lt;br /&gt;
&lt;br /&gt;
* [http://www.dynamobi.com/c/support/tutorial-videos/ DynamoBI - Getting started online videos.]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/installation.swf Installing LucidDB]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/sqllineclient.swf Connecting to LucidDB and using the Command Line Interface, sqllineClient]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/stopping_server.swf Stopping the server, with and without users connected]&lt;br /&gt;
* [http://youtu.be/sSYsVoVrp24 Installing and Loading LucidDB backed sample OLAP]&lt;br /&gt;
** Video from this blog: [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive] - By Slawomir Chodnicki, on March 12th, 2011&lt;br /&gt;
* [http://youtu.be/ZnY223u6q_Y Installing and running LucidDB as a daemon in Linux using a Java Service Wrapper]&lt;br /&gt;
: This is an approach that may also work well on Windows.  There is another approach, which is shorter and easier using the BASH shell under Linux. Documentation for both approaches can be found at [[LucidDbAsDaemonService]].&lt;br /&gt;
* Moving tables from one database to LucidDB&lt;br /&gt;
:[http://pub.eigenbase.org/wiki/LucidDbUpgrade#Downloads_-_Using_Pentaho_Data_Integration_to_generate_a_SQL_script_for_moving_tables Using Pentaho Data Integration to generate SQL for moving tables from an external database to LucidDB]&lt;br /&gt;
: This link is actually to a document about upgrading version to version of LucidDB, but because a PDI transformation file is used to generate SQL for the transition, the process can be generalized as moving from an external database to LucidDB with only minor modifications to the transformation.&lt;br /&gt;
&lt;br /&gt;
== Experimental ==&lt;br /&gt;
&lt;br /&gt;
*[http://kettle.pentaho.com/ Pentaho Data Integration (PDI)] - Bulk Loading Plugins&lt;br /&gt;
** [[LucidDbPDIStreamingLoader| Streaming Loader Step]] - Bulk load data the easy way. '''[RECOMMENDED]''' &lt;br /&gt;
**  [[LucidDbPdiBulkLoad | Bulk Load Step]] - '''[DEPRECATED after LucidDB 0.9.3]'''&lt;br /&gt;
**  [[LucidDbStreamingLoad |Streaming Loader]] : A good example for building bulk loaders from non-Java tools. '''[INFORMATIONAL]'''&lt;br /&gt;
* [[LucidDbHorizontalPartitioning | Horizontal Partitioning]]&lt;br /&gt;
: LucidDB does not currently support DDL for automatic [http://en.wikipedia.org/wiki/Partition_%28database%29 horizontal partitioning] of tables.  Although LucidDB's column-store architecture implements automatic vertical partitioning, horizontal partitioning is still a useful technique for scaling up to very large data volumes, so this page describes some manual approaches which can be used for very simple schemas.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbNonJavaClients | Using Non-Java Clients with LucidDB]]&lt;br /&gt;
: The main client API for LucidDB is JDBC.  This page discusses some options for overcoming the obstacle of developing an application in a language other than Java.&lt;br /&gt;
* [[LucidDbSqlDiffTesting | SQL Diff Testing]]&lt;br /&gt;
: Description of how to make use of some of the diff-based testing frameworks built into LucidDB for the purpose of test-driven ETL script development.&lt;br /&gt;
* [[LucidDbHive | Hive]]&lt;br /&gt;
: Walk-through document showing how to combine LucidDB with [http://hadoop.apache.org/hive/ Apache Hadoop's Hive].&lt;br /&gt;
&lt;br /&gt;
= LucidDB Developer Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbBuildFromSourceDistribution | Building LucidDB from source code]]&lt;br /&gt;
* [[LucidDbBuildFromPerforce | Building LucidDB from Perforce (version control software, VCS)]]&lt;br /&gt;
* [[Main_Page#Collaboration | Main Developer Collaboration Section ]]&lt;br /&gt;
* [[DesignMeetings | Design Meetings - Feature Ideas and Roadmaps]]&lt;br /&gt;
&lt;br /&gt;
= LucidDB Design Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbEfficientUpdates | Efficient Updates]]&lt;br /&gt;
* [[LucidDbCommonRelationalSubExpressionMaterialization | Common Relational Sub-Expression Materialization]]&lt;br /&gt;
&lt;br /&gt;
= Trademark Notice =&lt;br /&gt;
&lt;br /&gt;
&amp;lt;sub&amp;gt;LucidDB and the LucidDB logo are trademarks of DynamoBI Corporation.&amp;lt;/sub&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbDocs</id>
		<title>LucidDbDocs</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbDocs"/>
				<updated>2011-11-04T20:33:53Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: Added commercial support information&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;This is the main index page for documentation about the [[LucidDB]] open-source project, a DBMS optimized for business intelligence.  LucidDB is part of [http://www.eigenbase.org The Eigenbase Project].&amp;lt;br&amp;gt;&lt;br /&gt;
[[Image:Lucid db logo PMS 2010.png|400px|right]] __TOC__&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
= LucidDB User Documentation =&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Getting Started ==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''LucidDB Server''' [[Image:AdminUI 11-4-2011 1-07-28 PM.jpg|[[http://pub.eigenbase.org/wiki/DynamoBIAdminUI AdminUI v1.0]]|thumb|200px]]&lt;br /&gt;
* [[LucidDbGettingStarted | Getting Started - An Installation Guide]]&lt;br /&gt;
* [[LucidDbUserFaq | Frequently Asked Questions]]&lt;br /&gt;
* [[DynamoBIAdminUI | LucidDB AdminUI - Web Based Server Management Tool]] &lt;br /&gt;
: A graphical browser-based frontend from DynamoBI specifically built for LucidDB&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''External Software'''[[Image:Squirrel SQL 11-4-2011 1-24-26 PM.jpg|Squirrel SQL client running on Windows 7|thumb|200px]]&lt;br /&gt;
* [[LucidDbSquirrel | Squirrel SQL Client]] &lt;br /&gt;
: A graphical SQL client for accessing many database platforms, including LucidDB&lt;br /&gt;
* [[LucidDbPowerArchitect | Power Architect]]&lt;br /&gt;
: A data modeling tool&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== User Guides ==&lt;br /&gt;
* [[LucidDbUdfHowto | User Defined Functions (UDF) Howto]]&lt;br /&gt;
* [[LucidDbUdfJavaHowto | User Defined Functions (UDF) Java Howto]]&lt;br /&gt;
* [[LucidDbUdxJavaHowto | User Defined Transformation (UDX) Java Howto]]&lt;br /&gt;
* [[LucidDbEtlTutorial | Extract, Transform and Load (ETL) Tutorial]]&lt;br /&gt;
* [[LucidDbOlap| Online Analytical Processing (OLAP)]]&lt;br /&gt;
** [[LucidDbMondrianReplication | Using Pentaho Mondrian Replication]]&lt;br /&gt;
** [[LucidDbAggregateDesigner | Using Pentaho Aggregate Designer for Mondrian]]&lt;br /&gt;
* [[LucidDbConcurrencyControl | Concurrency Control]]&lt;br /&gt;
* [[LucidDbDataStorageAndAccess | Data Storage And Access]]&lt;br /&gt;
* [[LucidDbErrorHandling | Error Handling]]&lt;br /&gt;
* [[LucidDbIndexAccess | Index Access]]&lt;br /&gt;
* [[LucidDbJoinOptimization | Join Optimization]]&lt;br /&gt;
* [[LucidDbJoinImplementation | Join Implementation]]&lt;br /&gt;
* [[LucidDbSlowQueryDiagnosis | Slow Query Diagnosis]]:  Diagnosing slow queries using EXPLAIN PLAN and other tools&lt;br /&gt;
* [[LucidDbSubqueries | Subqueries]]&lt;br /&gt;
* [[LucidDbWarehouseLabels | Warehouse Labels]]&lt;br /&gt;
:  Labels allow users to have read-only query access to a snapshot of the database at an earlier point in time. Snapshots are accessible regardless of  concurrent activities on other connections, like ETL, preparing new data.&lt;br /&gt;
* [[LucidDbQueryExecution | Query Execution]]&lt;br /&gt;
* [[LucidDbServerContainer | Server Container]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Administrator Guides ==&lt;br /&gt;
&lt;br /&gt;
LucidDB is designed to require as little administration as possible, so we hope this section can remain short :)&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbMemoryManagement | Memory Management]]&lt;br /&gt;
** [[LucidDbBufferPoolSizing | Buffer Pool Sizing]]&lt;br /&gt;
* [[LucidDbSystemProcedures | System Procedures]]&lt;br /&gt;
: Useful for: Backup/Restore, Generating DDL for tables and other objects, managing sessions.&lt;br /&gt;
* [[LucidDbSystemParameters | System Parameters]]&lt;br /&gt;
: Useful information about tweaking: Memory usage, network settings, execution, and storage functionality.&lt;br /&gt;
* [[LucidDbSessionParameters| Session Parameters]]&lt;br /&gt;
* [[LucidDbSystemViews | System Views]]&lt;br /&gt;
: The DBA views defined by LucidDB provide a global picture of the contents of the system catalog (tables, columns, etc) and the volatile state of the system (sessions, cache utilization, etc).&lt;br /&gt;
* [[LucidDbPerformanceTuning | Performance Tuning]]&lt;br /&gt;
** [[LucidDbPerformanceCounters | Performance Counters]]&lt;br /&gt;
** [[LucidDbMonitor | Monitor]] Active monitoring&lt;br /&gt;
* [[LucidDbTracing | Tracing]] Debug Logs in LucidDB&lt;br /&gt;
* [[LucidDbBackupRestore | Performing Backups and Restores]]&lt;br /&gt;
* [[LucidDbUpgrade | How to upgrade to each new release.]]&lt;br /&gt;
* [[LucidDbAsDaemonService | Running LucidDB as a Service / Daemon]]&lt;br /&gt;
* [[LucidDbAsManagedBean | Running LucidDB as a Managed Java Bean]]&lt;br /&gt;
* [[LucidDbMoveCatalog | Moving the LucidDB Database Catalog]]&lt;br /&gt;
* [[LucidDbScriptingLucidUsingBASH | Scripting LucidDB using BASH shell scripts]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Function and SQL Language Reference Guides ==&lt;br /&gt;
* [[AppLib]] - Description of the utility function library in LucidDB&lt;br /&gt;
* [[LucidDbDataTypes | Supported Data Types]]&lt;br /&gt;
* [[LucidDbSqlConformance | SQL Standard Conformance]]&lt;br /&gt;
* [[LucidDbSqlReference | SQL Language Reference]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Connectors to External Data Sources (SQL/MED) ([http://farrago.sourceforge.net/design/sqlmed.html Management of External Data])==&lt;br /&gt;
[[Image:Connectors.jpg|thumb|200px|right|See more general information about connectors here [[http://www.dynamobi.com/c/products/luciddb/connectors http://www.dynamobi.com]].]]&lt;br /&gt;
These connectors wrap up external datasources and allow them to present their data as foreign tables inside of LucidDB.  Connectors are an adapters that generally allow normal SQL queries to be run against datasources that may not support the SQL language directly.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbFlatFileWrapper | Flat File Wrapper]] - Connector enabling read-only SQL accesses to text files&lt;br /&gt;
* [[FarragoMedJdbcPlugin | JDBC Data Wrapper]] - Connector enabling presentation of external database tables in LucidDB&lt;br /&gt;
* [[FarragoMedSalesforcePlugin|Salesforce Data Wrapper]] - Connector for presenting Salesforce tables in LucidDB&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Benchmark Studies ==&lt;br /&gt;
* [[LucidDbTpch|TPCH Benchmarks]]&lt;br /&gt;
* [[LucidDbSqbm | SQBM]]&lt;br /&gt;
* [[LucidDbOtp| OTP Benchmark using Bureau of Transportation Statistics]], [http://www.mysqlperformanceblog.com/2010/01/07/star-schema-bechmark-infobright-infinidb-and-luciddb SSB Benchmark]&lt;br /&gt;
* [[LucidDbBenchmarkCandidates| Benchmark Candidates]] - Published benchmarks and applications which could serve as good showcases for LucidDB's architecture&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
== Commercial Support ==&lt;br /&gt;
&lt;br /&gt;
[[Image:Dynamobi logo large2.png|right|200px]]&lt;br /&gt;
Quick, reliable service and support is available to you from DynamoBI, the commercial sponsor of LucidDB.&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''DynamoBI Global Headquarters'''&amp;lt;br&amp;gt;&lt;br /&gt;
42nd Floor&amp;lt;br&amp;gt;&lt;br /&gt;
601 Union Street&amp;lt;br&amp;gt;&lt;br /&gt;
Two Union Square&amp;lt;br&amp;gt;&lt;br /&gt;
Seattle, WA 98101 USA&amp;lt;br&amp;gt;&lt;br /&gt;
Tel. +1 888 LucidDB (582-4332)&amp;lt;br&amp;gt;&lt;br /&gt;
Time Zone: PDT&amp;lt;br&amp;gt;&lt;br /&gt;
Business Hours: 8-6 PDT&amp;lt;br&amp;gt;&lt;br /&gt;
[[http://www.dynamobi.com/c/company/contact-us Contact us!]]&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
== Community Involvement ==&lt;br /&gt;
LucidDB is one of the best databases in the world because of the people, not just the technology.&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Community Support Forum'''&lt;br /&gt;
: Please visit, ask questions and help others &lt;br /&gt;
: [[http://www.luciddb.org/forums/ http://www.luciddb.org/forums/]]&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Chat with us online'''&lt;br /&gt;
: Many LucidDB users hang out on an Internet Relay Chat channel (IRC) called ##luciddb, using Freenode's [http://freenode.net/irc_servers.shtml] servers.&lt;br /&gt;
: We would love to answer your questions and help you get up and going using LucidDB.&lt;br /&gt;
: When you connect to '''chat.us.freenode.net''' or other freenode server near your country, be sure to use the command '''/join ##luciddb''' to actually join the chat channel for LucidDB.&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
:{| {{table}}&lt;br /&gt;
| align=&amp;quot;Left&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Software Name'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Platform'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Download Location'''&lt;br /&gt;
|-&lt;br /&gt;
| qwebirc||Web-based client||http://webchat.freenode.net/&lt;br /&gt;
|-&lt;br /&gt;
| ChatZilla||Firefox Add-on||https://addons.mozilla.org/en-US/firefox/addon/chatzilla/&lt;br /&gt;
|-&lt;br /&gt;
| mIRC||MS Windows||http://www.mirc.com/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||MS Windows||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||Linux||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat Aqua||Mac OS||http://sourceforge.net/projects/xchataqua/&lt;br /&gt;
|-&lt;br /&gt;
| Colloquy||Apple iPad &amp;amp; iPhone||http://colloquy.info/&lt;br /&gt;
|-&lt;br /&gt;
| Android - Internet Relay Chat||Google Android||https://market.android.com/details?id=com.countercultured.irc&amp;amp;hl=en&lt;br /&gt;
|}&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
* '''Bug and Feature Tracking&lt;br /&gt;
: Make a feature request or report a problem you have experienced.&lt;br /&gt;
: [[http://jira.eigenbase.org/secure/Dashboard.jspa http://jira.eigenbase.org/secure/Dashboard.jspa]]&lt;br /&gt;
&lt;br /&gt;
== Presentations / Blogs ==&lt;br /&gt;
* [[Media:PerconaLucidDB.ppt|Percona LucidDB PowerPoint Slides]]&lt;br /&gt;
* [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive]&lt;br /&gt;
: Demonstrates loading data, defining an OLAP cube, and browsing the cube with Pentaho, Jaspersoft, SpagoBI and Saiku which all use Mondrian to drive their OLAP functionality.&lt;br /&gt;
* [http://wiki.pentaho.com/display/COM/January+20,+2010+-+Nick+Goodman+-+LucidDB,+DynamoBI+and+Mondrian Pentaho - January 20, 2010 - Nick Goodman - LucidDB, DynamoBI and Mondrian]&lt;br /&gt;
: Webex Presentation and PDF of slides presenting benefits and features of LucidDB 0.9.3 in conjunction with Pentaho's BI Suite.&lt;br /&gt;
* [http://www.nicholasgoodman.com/bt/blog/2011/06/08/a-different-vision-for-the-value-of-big-data/ A different vision for the value of Big Data]&lt;br /&gt;
: DynamoBI (Commercial Sponsor of LucidDB) - CEO Nick Goodman - shares vision about how LucidDB forms an information hub from which many different data sources can be presented and queried through normal SQL.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Tutorial Videos and Screencasts ==&lt;br /&gt;
&lt;br /&gt;
* [http://www.dynamobi.com/c/support/tutorial-videos/ DynamoBI - Getting started online videos.]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/installation.swf Installing LucidDB]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/sqllineclient.swf Connecting to LucidDB and using the Command Line Interface, sqllineClient]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/stopping_server.swf Stopping the server, with and without users connected]&lt;br /&gt;
* [http://youtu.be/sSYsVoVrp24 Installing and Loading LucidDB backed sample OLAP]&lt;br /&gt;
** Video from this blog: [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive] - By Slawomir Chodnicki, on March 12th, 2011&lt;br /&gt;
* [http://youtu.be/ZnY223u6q_Y Installing and running LucidDB as a daemon in Linux using a Java Service Wrapper]&lt;br /&gt;
: This is an approach that may also work well on Windows.  There is another approach, which is shorter and easier using the BASH shell under Linux. Documentation for both approaches can be found at [[LucidDbAsDaemonService]].&lt;br /&gt;
* Moving tables from one database to LucidDB&lt;br /&gt;
:[http://pub.eigenbase.org/wiki/LucidDbUpgrade#Downloads_-_Using_Pentaho_Data_Integration_to_generate_a_SQL_script_for_moving_tables Using Pentaho Data Integration to generate SQL for moving tables from an external database to LucidDB]&lt;br /&gt;
: This link is actually to a document about upgrading version to version of LucidDB, but because a PDI transformation file is used to generate SQL for the transition, the process can be generalized as moving from an external database to LucidDB with only minor modifications to the transformation.&lt;br /&gt;
&lt;br /&gt;
== Experimental ==&lt;br /&gt;
&lt;br /&gt;
*[http://kettle.pentaho.com/ Pentaho Data Integration (PDI)] - Bulk Loading Plugins&lt;br /&gt;
** [[LucidDbPDIStreamingLoader| Streaming Loader Step]] - Bulk load data the easy way. '''[RECOMMENDED]''' &lt;br /&gt;
**  [[LucidDbPdiBulkLoad | Bulk Load Step]] - '''[DEPRECATED after LucidDB 0.9.3]'''&lt;br /&gt;
**  [[LucidDbStreamingLoad |Streaming Loader]] : A good example for building bulk loaders from non-Java tools. '''[INFORMATIONAL]'''&lt;br /&gt;
* [[LucidDbHorizontalPartitioning | Horizontal Partitioning]]&lt;br /&gt;
: LucidDB does not currently support DDL for automatic [http://en.wikipedia.org/wiki/Partition_%28database%29 horizontal partitioning] of tables.  Although LucidDB's column-store architecture implements automatic vertical partitioning, horizontal partitioning is still a useful technique for scaling up to very large data volumes, so this page describes some manual approaches which can be used for very simple schemas.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbNonJavaClients | Using Non-Java Clients with LucidDB]]&lt;br /&gt;
: The main client API for LucidDB is JDBC.  This page discusses some options for overcoming the obstacle of developing an application in a language other than Java.&lt;br /&gt;
* [[LucidDbSqlDiffTesting | SQL Diff Testing]]&lt;br /&gt;
: Description of how to make use of some of the diff-based testing frameworks built into LucidDB for the purpose of test-driven ETL script development.&lt;br /&gt;
* [[LucidDbHive | Hive]]&lt;br /&gt;
: Walk-through document showing how to combine LucidDB with [http://hadoop.apache.org/hive/ Apache Hadoop's Hive].&lt;br /&gt;
&lt;br /&gt;
= LucidDB Developer Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbBuildFromSourceDistribution | Building LucidDB from source code]]&lt;br /&gt;
* [[LucidDbBuildFromPerforce | Building LucidDB from Perforce (version control software, VCS)]]&lt;br /&gt;
* [[Main_Page#Collaboration | Main Developer Collaboration Section ]]&lt;br /&gt;
* [[DesignMeetings | Design Meetings - Feature Ideas and Roadmaps]]&lt;br /&gt;
&lt;br /&gt;
= LucidDB Design Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbEfficientUpdates | Efficient Updates]]&lt;br /&gt;
* [[LucidDbCommonRelationalSubExpressionMaterialization | Common Relational Sub-Expression Materialization]]&lt;br /&gt;
&lt;br /&gt;
= Trademark Notice =&lt;br /&gt;
&lt;br /&gt;
&amp;lt;sub&amp;gt;LucidDB and the LucidDB logo are trademarks of DynamoBI Corporation.&amp;lt;/sub&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/File:Dynamobi_logo_large2.png</id>
		<title>File:Dynamobi logo large2.png</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/File:Dynamobi_logo_large2.png"/>
				<updated>2011-11-04T20:04:54Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: DynamoBI Logo - Large Size&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;DynamoBI Logo - Large Size&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbDocs</id>
		<title>LucidDbDocs</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbDocs"/>
				<updated>2011-11-04T20:00:28Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: &lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;This is the main index page for documentation about the [[LucidDB]] open-source project, a DBMS optimized for business intelligence.  LucidDB is part of [http://www.eigenbase.org The Eigenbase Project].&amp;lt;br&amp;gt;&lt;br /&gt;
[[Image:Lucid db logo PMS 2010.png|400px|right]] __TOC__&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
= LucidDB User Documentation =&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Getting Started ==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''LucidDB Server''' [[Image:AdminUI 11-4-2011 1-07-28 PM.jpg|[[http://pub.eigenbase.org/wiki/DynamoBIAdminUI AdminUI v1.0]]|thumb|200px]]&lt;br /&gt;
* [[LucidDbGettingStarted | Getting Started - An Installation Guide]]&lt;br /&gt;
* [[LucidDbUserFaq | Frequently Asked Questions]]&lt;br /&gt;
* [[DynamoBIAdminUI | LucidDB AdminUI - Web Based Server Management Tool]] &lt;br /&gt;
: A graphical browser-based frontend from DynamoBI specifically built for LucidDB&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''External Software'''[[Image:Squirrel SQL 11-4-2011 1-24-26 PM.jpg|Squirrel SQL client running on Windows 7|thumb|200px]]&lt;br /&gt;
* [[LucidDbSquirrel | Squirrel SQL Client]] &lt;br /&gt;
: A graphical SQL client for accessing many database platforms, including LucidDB&lt;br /&gt;
* [[LucidDbPowerArchitect | Power Architect]]&lt;br /&gt;
: A data modeling tool&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== User Guides ==&lt;br /&gt;
* [[LucidDbUdfHowto | User Defined Functions (UDF) Howto]]&lt;br /&gt;
* [[LucidDbUdfJavaHowto | User Defined Functions (UDF) Java Howto]]&lt;br /&gt;
* [[LucidDbUdxJavaHowto | User Defined Transformation (UDX) Java Howto]]&lt;br /&gt;
* [[LucidDbEtlTutorial | Extract, Transform and Load (ETL) Tutorial]]&lt;br /&gt;
* [[LucidDbOlap| Online Analytical Processing (OLAP)]]&lt;br /&gt;
** [[LucidDbMondrianReplication | Using Pentaho Mondrian Replication]]&lt;br /&gt;
** [[LucidDbAggregateDesigner | Using Pentaho Aggregate Designer for Mondrian]]&lt;br /&gt;
* [[LucidDbConcurrencyControl | Concurrency Control]]&lt;br /&gt;
* [[LucidDbDataStorageAndAccess | Data Storage And Access]]&lt;br /&gt;
* [[LucidDbErrorHandling | Error Handling]]&lt;br /&gt;
* [[LucidDbIndexAccess | Index Access]]&lt;br /&gt;
* [[LucidDbJoinOptimization | Join Optimization]]&lt;br /&gt;
* [[LucidDbJoinImplementation | Join Implementation]]&lt;br /&gt;
* [[LucidDbSlowQueryDiagnosis | Slow Query Diagnosis]]:  Diagnosing slow queries using EXPLAIN PLAN and other tools&lt;br /&gt;
* [[LucidDbSubqueries | Subqueries]]&lt;br /&gt;
* [[LucidDbWarehouseLabels | Warehouse Labels]]&lt;br /&gt;
:  Labels allow users to have read-only query access to a snapshot of the database at an earlier point in time. Snapshots are accessible regardless of  concurrent activities on other connections, like ETL, preparing new data.&lt;br /&gt;
* [[LucidDbQueryExecution | Query Execution]]&lt;br /&gt;
* [[LucidDbServerContainer | Server Container]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Administrator Guides ==&lt;br /&gt;
&lt;br /&gt;
LucidDB is designed to require as little administration as possible, so we hope this section can remain short :)&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbMemoryManagement | Memory Management]]&lt;br /&gt;
** [[LucidDbBufferPoolSizing | Buffer Pool Sizing]]&lt;br /&gt;
* [[LucidDbSystemProcedures | System Procedures]]&lt;br /&gt;
: Useful for: Backup/Restore, Generating DDL for tables and other objects, managing sessions.&lt;br /&gt;
* [[LucidDbSystemParameters | System Parameters]]&lt;br /&gt;
: Useful information about tweaking: Memory usage, network settings, execution, and storage functionality.&lt;br /&gt;
* [[LucidDbSessionParameters| Session Parameters]]&lt;br /&gt;
* [[LucidDbSystemViews | System Views]]&lt;br /&gt;
: The DBA views defined by LucidDB provide a global picture of the contents of the system catalog (tables, columns, etc) and the volatile state of the system (sessions, cache utilization, etc).&lt;br /&gt;
* [[LucidDbPerformanceTuning | Performance Tuning]]&lt;br /&gt;
** [[LucidDbPerformanceCounters | Performance Counters]]&lt;br /&gt;
** [[LucidDbMonitor | Monitor]] Active monitoring&lt;br /&gt;
* [[LucidDbTracing | Tracing]] Debug Logs in LucidDB&lt;br /&gt;
* [[LucidDbBackupRestore | Performing Backups and Restores]]&lt;br /&gt;
* [[LucidDbUpgrade | How to upgrade to each new release.]]&lt;br /&gt;
* [[LucidDbAsDaemonService | Running LucidDB as a Service / Daemon]]&lt;br /&gt;
* [[LucidDbAsManagedBean | Running LucidDB as a Managed Java Bean]]&lt;br /&gt;
* [[LucidDbMoveCatalog | Moving the LucidDB Database Catalog]]&lt;br /&gt;
* [[LucidDbScriptingLucidUsingBASH | Scripting LucidDB using BASH shell scripts]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Function and SQL Language Reference Guides ==&lt;br /&gt;
* [[AppLib]] - Description of the utility function library in LucidDB&lt;br /&gt;
* [[LucidDbDataTypes | Supported Data Types]]&lt;br /&gt;
* [[LucidDbSqlConformance | SQL Standard Conformance]]&lt;br /&gt;
* [[LucidDbSqlReference | SQL Language Reference]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Connectors to External Data Sources (SQL/MED) ([http://farrago.sourceforge.net/design/sqlmed.html Management of External Data])==&lt;br /&gt;
[[Image:Connectors.jpg|thumb|200px|right|See more general information about connectors here [[http://www.dynamobi.com/c/products/luciddb/connectors http://www.dynamobi.com]].]]&lt;br /&gt;
These connectors wrap up external datasources and allow them to present their data as foreign tables inside of LucidDB.  Connectors are an adapters that generally allow normal SQL queries to be run against datasources that may not support the SQL language directly.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbFlatFileWrapper | Flat File Wrapper]] - Connector enabling read-only SQL accesses to text files&lt;br /&gt;
* [[FarragoMedJdbcPlugin | JDBC Data Wrapper]] - Connector enabling presentation of external database tables in LucidDB&lt;br /&gt;
* [[FarragoMedSalesforcePlugin|Salesforce Data Wrapper]] - Connector for presenting Salesforce tables in LucidDB&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Benchmark Studies ==&lt;br /&gt;
* [[LucidDbTpch|TPCH Benchmarks]]&lt;br /&gt;
* [[LucidDbSqbm | SQBM]]&lt;br /&gt;
* [[LucidDbOtp| OTP Benchmark using Bureau of Transportation Statistics]], [http://www.mysqlperformanceblog.com/2010/01/07/star-schema-bechmark-infobright-infinidb-and-luciddb SSB Benchmark]&lt;br /&gt;
* [[LucidDbBenchmarkCandidates| Benchmark Candidates]] - Published benchmarks and applications which could serve as good showcases for LucidDB's architecture&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Community Involvement ==&lt;br /&gt;
LucidDB is one of the best databases in the world because of the people, not just the technology.&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Community Support Forum'''&lt;br /&gt;
: Please visit, ask questions and help others &lt;br /&gt;
: [[http://www.luciddb.org/forums/ http://www.luciddb.org/forums/]]&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Chat with us online'''&lt;br /&gt;
: Many LucidDB users hang out on an Internet Relay Chat channel (IRC) called ##luciddb, using Freenode's [http://freenode.net/irc_servers.shtml] servers.&lt;br /&gt;
: We would love to answer your questions and help you get up and going using LucidDB.&lt;br /&gt;
: When you connect to '''chat.us.freenode.net''' or other freenode server near your country, be sure to use the command '''/join ##luciddb''' to actually join the chat channel for LucidDB.&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
:{| {{table}}&lt;br /&gt;
| align=&amp;quot;Left&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Software Name'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Platform'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Download Location'''&lt;br /&gt;
|-&lt;br /&gt;
| qwebirc||Web-based client||http://webchat.freenode.net/&lt;br /&gt;
|-&lt;br /&gt;
| ChatZilla||Firefox Add-on||https://addons.mozilla.org/en-US/firefox/addon/chatzilla/&lt;br /&gt;
|-&lt;br /&gt;
| mIRC||MS Windows||http://www.mirc.com/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||MS Windows||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||Linux||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat Aqua||Mac OS||http://sourceforge.net/projects/xchataqua/&lt;br /&gt;
|-&lt;br /&gt;
| Colloquy||Apple iPad &amp;amp; iPhone||http://colloquy.info/&lt;br /&gt;
|-&lt;br /&gt;
| Android - Internet Relay Chat||Google Android||https://market.android.com/details?id=com.countercultured.irc&amp;amp;hl=en&lt;br /&gt;
|}&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
* '''Bug and Feature Tracking&lt;br /&gt;
: Make a feature request or report a problem you have experienced.&lt;br /&gt;
: [[http://jira.eigenbase.org/secure/Dashboard.jspa http://jira.eigenbase.org/secure/Dashboard.jspa]]&lt;br /&gt;
&lt;br /&gt;
== Presentations / Blogs ==&lt;br /&gt;
* [[Media:PerconaLucidDB.ppt|Percona LucidDB PowerPoint Slides]]&lt;br /&gt;
* [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive]&lt;br /&gt;
: Demonstrates loading data, defining an OLAP cube, and browsing the cube with Pentaho, Jaspersoft, SpagoBI and Saiku which all use Mondrian to drive their OLAP functionality.&lt;br /&gt;
* [http://wiki.pentaho.com/display/COM/January+20,+2010+-+Nick+Goodman+-+LucidDB,+DynamoBI+and+Mondrian Pentaho - January 20, 2010 - Nick Goodman - LucidDB, DynamoBI and Mondrian]&lt;br /&gt;
: Webex Presentation and PDF of slides presenting benefits and features of LucidDB 0.9.3 in conjunction with Pentaho's BI Suite.&lt;br /&gt;
* [http://www.nicholasgoodman.com/bt/blog/2011/06/08/a-different-vision-for-the-value-of-big-data/ A different vision for the value of Big Data]&lt;br /&gt;
: DynamoBI (Commercial Sponsor of LucidDB) - CEO Nick Goodman - shares vision about how LucidDB forms an information hub from which many different data sources can be presented and queried through normal SQL.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Tutorial Videos and Screencasts ==&lt;br /&gt;
&lt;br /&gt;
* [http://www.dynamobi.com/c/support/tutorial-videos/ DynamoBI - Getting started online videos.]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/installation.swf Installing LucidDB]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/sqllineclient.swf Connecting to LucidDB and using the Command Line Interface, sqllineClient]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/stopping_server.swf Stopping the server, with and without users connected]&lt;br /&gt;
* [http://youtu.be/sSYsVoVrp24 Installing and Loading LucidDB backed sample OLAP]&lt;br /&gt;
** Video from this blog: [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive] - By Slawomir Chodnicki, on March 12th, 2011&lt;br /&gt;
* [http://youtu.be/ZnY223u6q_Y Installing and running LucidDB as a daemon in Linux using a Java Service Wrapper]&lt;br /&gt;
: This is an approach that may also work well on Windows.  There is another approach, which is shorter and easier using the BASH shell under Linux. Documentation for both approaches can be found at [[LucidDbAsDaemonService]].&lt;br /&gt;
* Moving tables from one database to LucidDB&lt;br /&gt;
:[http://pub.eigenbase.org/wiki/LucidDbUpgrade#Downloads_-_Using_Pentaho_Data_Integration_to_generate_a_SQL_script_for_moving_tables Using Pentaho Data Integration to generate SQL for moving tables from an external database to LucidDB]&lt;br /&gt;
: This link is actually to a document about upgrading version to version of LucidDB, but because a PDI transformation file is used to generate SQL for the transition, the process can be generalized as moving from an external database to LucidDB with only minor modifications to the transformation.&lt;br /&gt;
&lt;br /&gt;
== Experimental ==&lt;br /&gt;
&lt;br /&gt;
*[http://kettle.pentaho.com/ Pentaho Data Integration (PDI)] - Bulk Loading Plugins&lt;br /&gt;
** [[LucidDbPDIStreamingLoader| Streaming Loader Step]] - Bulk load data the easy way. '''[RECOMMENDED]''' &lt;br /&gt;
**  [[LucidDbPdiBulkLoad | Bulk Load Step]] - '''[DEPRECATED after LucidDB 0.9.3]'''&lt;br /&gt;
**  [[LucidDbStreamingLoad |Streaming Loader]] : A good example for building bulk loaders from non-Java tools. '''[INFORMATIONAL]'''&lt;br /&gt;
* [[LucidDbHorizontalPartitioning | Horizontal Partitioning]]&lt;br /&gt;
: LucidDB does not currently support DDL for automatic [http://en.wikipedia.org/wiki/Partition_%28database%29 horizontal partitioning] of tables.  Although LucidDB's column-store architecture implements automatic vertical partitioning, horizontal partitioning is still a useful technique for scaling up to very large data volumes, so this page describes some manual approaches which can be used for very simple schemas.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbNonJavaClients | Using Non-Java Clients with LucidDB]]&lt;br /&gt;
: The main client API for LucidDB is JDBC.  This page discusses some options for overcoming the obstacle of developing an application in a language other than Java.&lt;br /&gt;
* [[LucidDbSqlDiffTesting | SQL Diff Testing]]&lt;br /&gt;
: Description of how to make use of some of the diff-based testing frameworks built into LucidDB for the purpose of test-driven ETL script development.&lt;br /&gt;
* [[LucidDbHive | Hive]]&lt;br /&gt;
: Walk-through document showing how to combine LucidDB with [http://hadoop.apache.org/hive/ Apache Hadoop's Hive].&lt;br /&gt;
&lt;br /&gt;
= LucidDB Developer Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbBuildFromSourceDistribution | Building LucidDB from source code]]&lt;br /&gt;
* [[LucidDbBuildFromPerforce | Building LucidDB from Perforce (version control software, VCS)]]&lt;br /&gt;
* [[Main_Page#Collaboration | Main Developer Collaboration Section ]]&lt;br /&gt;
* [[DesignMeetings | Design Meetings - Feature Ideas and Roadmaps]]&lt;br /&gt;
&lt;br /&gt;
= LucidDB Design Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbEfficientUpdates | Efficient Updates]]&lt;br /&gt;
* [[LucidDbCommonRelationalSubExpressionMaterialization | Common Relational Sub-Expression Materialization]]&lt;br /&gt;
&lt;br /&gt;
= Trademark Notice =&lt;br /&gt;
&lt;br /&gt;
&amp;lt;sub&amp;gt;LucidDB and the LucidDB logo are trademarks of DynamoBI Corporation.&amp;lt;/sub&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbDocs</id>
		<title>LucidDbDocs</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbDocs"/>
				<updated>2011-11-04T19:58:31Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* Getting Started */&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;This is the main index page for documentation about the [[LucidDB]] open-source project, a DBMS optimized for business intelligence.  LucidDB is part of [http://www.eigenbase.org The Eigenbase Project].&amp;lt;br&amp;gt;&lt;br /&gt;
[[Image:Lucid db logo PMS 2010.png|400px|right]] __TOC__ &lt;br /&gt;
&lt;br /&gt;
= LucidDB User Documentation =&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Getting Started ==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''LucidDB Server''' [[Image:AdminUI 11-4-2011 1-07-28 PM.jpg|[[http://pub.eigenbase.org/wiki/DynamoBIAdminUI AdminUI v1.0]]|thumb|200px]]&lt;br /&gt;
* [[LucidDbGettingStarted | Getting Started - An Installation Guide]]&lt;br /&gt;
* [[LucidDbUserFaq | Frequently Asked Questions]]&lt;br /&gt;
* [[DynamoBIAdminUI | LucidDB AdminUI - Web Based Server Management Tool]] &lt;br /&gt;
: A graphical browser-based frontend from DynamoBI specifically built for LucidDB&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''External Software'''[[Image:Squirrel SQL 11-4-2011 1-24-26 PM.jpg|Squirrel SQL client running on Windows 7|thumb|200px]]&lt;br /&gt;
* [[LucidDbSquirrel | Squirrel SQL Client]] &lt;br /&gt;
: A graphical SQL client for accessing many database platforms, including LucidDB&lt;br /&gt;
* [[LucidDbPowerArchitect | Power Architect]]&lt;br /&gt;
: A data modeling tool&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== User Guides ==&lt;br /&gt;
* [[LucidDbUdfHowto | User Defined Functions (UDF) Howto]]&lt;br /&gt;
* [[LucidDbUdfJavaHowto | User Defined Functions (UDF) Java Howto]]&lt;br /&gt;
* [[LucidDbUdxJavaHowto | User Defined Transformation (UDX) Java Howto]]&lt;br /&gt;
* [[LucidDbEtlTutorial | Extract, Transform and Load (ETL) Tutorial]]&lt;br /&gt;
* [[LucidDbOlap| Online Analytical Processing (OLAP)]]&lt;br /&gt;
** [[LucidDbMondrianReplication | Using Pentaho Mondrian Replication]]&lt;br /&gt;
** [[LucidDbAggregateDesigner | Using Pentaho Aggregate Designer for Mondrian]]&lt;br /&gt;
* [[LucidDbConcurrencyControl | Concurrency Control]]&lt;br /&gt;
* [[LucidDbDataStorageAndAccess | Data Storage And Access]]&lt;br /&gt;
* [[LucidDbErrorHandling | Error Handling]]&lt;br /&gt;
* [[LucidDbIndexAccess | Index Access]]&lt;br /&gt;
* [[LucidDbJoinOptimization | Join Optimization]]&lt;br /&gt;
* [[LucidDbJoinImplementation | Join Implementation]]&lt;br /&gt;
* [[LucidDbSlowQueryDiagnosis | Slow Query Diagnosis]]:  Diagnosing slow queries using EXPLAIN PLAN and other tools&lt;br /&gt;
* [[LucidDbSubqueries | Subqueries]]&lt;br /&gt;
* [[LucidDbWarehouseLabels | Warehouse Labels]]&lt;br /&gt;
:  Labels allow users to have read-only query access to a snapshot of the database at an earlier point in time. Snapshots are accessible regardless of  concurrent activities on other connections, like ETL, preparing new data.&lt;br /&gt;
* [[LucidDbQueryExecution | Query Execution]]&lt;br /&gt;
* [[LucidDbServerContainer | Server Container]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Administrator Guides ==&lt;br /&gt;
&lt;br /&gt;
LucidDB is designed to require as little administration as possible, so we hope this section can remain short :)&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbMemoryManagement | Memory Management]]&lt;br /&gt;
** [[LucidDbBufferPoolSizing | Buffer Pool Sizing]]&lt;br /&gt;
* [[LucidDbSystemProcedures | System Procedures]]&lt;br /&gt;
: Useful for: Backup/Restore, Generating DDL for tables and other objects, managing sessions.&lt;br /&gt;
* [[LucidDbSystemParameters | System Parameters]]&lt;br /&gt;
: Useful information about tweaking: Memory usage, network settings, execution, and storage functionality.&lt;br /&gt;
* [[LucidDbSessionParameters| Session Parameters]]&lt;br /&gt;
* [[LucidDbSystemViews | System Views]]&lt;br /&gt;
: The DBA views defined by LucidDB provide a global picture of the contents of the system catalog (tables, columns, etc) and the volatile state of the system (sessions, cache utilization, etc).&lt;br /&gt;
* [[LucidDbPerformanceTuning | Performance Tuning]]&lt;br /&gt;
** [[LucidDbPerformanceCounters | Performance Counters]]&lt;br /&gt;
** [[LucidDbMonitor | Monitor]] Active monitoring&lt;br /&gt;
* [[LucidDbTracing | Tracing]] Debug Logs in LucidDB&lt;br /&gt;
* [[LucidDbBackupRestore | Performing Backups and Restores]]&lt;br /&gt;
* [[LucidDbUpgrade | How to upgrade to each new release.]]&lt;br /&gt;
* [[LucidDbAsDaemonService | Running LucidDB as a Service / Daemon]]&lt;br /&gt;
* [[LucidDbAsManagedBean | Running LucidDB as a Managed Java Bean]]&lt;br /&gt;
* [[LucidDbMoveCatalog | Moving the LucidDB Database Catalog]]&lt;br /&gt;
* [[LucidDbScriptingLucidUsingBASH | Scripting LucidDB using BASH shell scripts]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Function and SQL Language Reference Guides ==&lt;br /&gt;
* [[AppLib]] - Description of the utility function library in LucidDB&lt;br /&gt;
* [[LucidDbDataTypes | Supported Data Types]]&lt;br /&gt;
* [[LucidDbSqlConformance | SQL Standard Conformance]]&lt;br /&gt;
* [[LucidDbSqlReference | SQL Language Reference]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Connectors to External Data Sources (SQL/MED) ([http://farrago.sourceforge.net/design/sqlmed.html Management of External Data])==&lt;br /&gt;
[[Image:Connectors.jpg|thumb|200px|right|See more general information about connectors here [[http://www.dynamobi.com/c/products/luciddb/connectors http://www.dynamobi.com]].]]&lt;br /&gt;
These connectors wrap up external datasources and allow them to present their data as foreign tables inside of LucidDB.  Connectors are an adapters that generally allow normal SQL queries to be run against datasources that may not support the SQL language directly.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbFlatFileWrapper | Flat File Wrapper]] - Connector enabling read-only SQL accesses to text files&lt;br /&gt;
* [[FarragoMedJdbcPlugin | JDBC Data Wrapper]] - Connector enabling presentation of external database tables in LucidDB&lt;br /&gt;
* [[FarragoMedSalesforcePlugin|Salesforce Data Wrapper]] - Connector for presenting Salesforce tables in LucidDB&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Benchmark Studies ==&lt;br /&gt;
* [[LucidDbTpch|TPCH Benchmarks]]&lt;br /&gt;
* [[LucidDbSqbm | SQBM]]&lt;br /&gt;
* [[LucidDbOtp| OTP Benchmark using Bureau of Transportation Statistics]], [http://www.mysqlperformanceblog.com/2010/01/07/star-schema-bechmark-infobright-infinidb-and-luciddb SSB Benchmark]&lt;br /&gt;
* [[LucidDbBenchmarkCandidates| Benchmark Candidates]] - Published benchmarks and applications which could serve as good showcases for LucidDB's architecture&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Community Involvement ==&lt;br /&gt;
LucidDB is one of the best databases in the world because of the people, not just the technology.&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Community Support Forum'''&lt;br /&gt;
: Please visit, ask questions and help others &lt;br /&gt;
: [[http://www.luciddb.org/forums/ http://www.luciddb.org/forums/]]&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Chat with us online'''&lt;br /&gt;
: Many LucidDB users hang out on an Internet Relay Chat channel (IRC) called ##luciddb, using Freenode's [http://freenode.net/irc_servers.shtml] servers.&lt;br /&gt;
: We would love to answer your questions and help you get up and going using LucidDB.&lt;br /&gt;
: When you connect to '''chat.us.freenode.net''' or other freenode server near your country, be sure to use the command '''/join ##luciddb''' to actually join the chat channel for LucidDB.&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
:{| {{table}}&lt;br /&gt;
| align=&amp;quot;Left&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Software Name'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Platform'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Download Location'''&lt;br /&gt;
|-&lt;br /&gt;
| qwebirc||Web-based client||http://webchat.freenode.net/&lt;br /&gt;
|-&lt;br /&gt;
| ChatZilla||Firefox Add-on||https://addons.mozilla.org/en-US/firefox/addon/chatzilla/&lt;br /&gt;
|-&lt;br /&gt;
| mIRC||MS Windows||http://www.mirc.com/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||MS Windows||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||Linux||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat Aqua||Mac OS||http://sourceforge.net/projects/xchataqua/&lt;br /&gt;
|-&lt;br /&gt;
| Colloquy||Apple iPad &amp;amp; iPhone||http://colloquy.info/&lt;br /&gt;
|-&lt;br /&gt;
| Android - Internet Relay Chat||Google Android||https://market.android.com/details?id=com.countercultured.irc&amp;amp;hl=en&lt;br /&gt;
|}&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
* '''Bug and Feature Tracking&lt;br /&gt;
: Make a feature request or report a problem you have experienced.&lt;br /&gt;
: [[http://jira.eigenbase.org/secure/Dashboard.jspa http://jira.eigenbase.org/secure/Dashboard.jspa]]&lt;br /&gt;
&lt;br /&gt;
== Presentations / Blogs ==&lt;br /&gt;
* [[Media:PerconaLucidDB.ppt|Percona LucidDB PowerPoint Slides]]&lt;br /&gt;
* [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive]&lt;br /&gt;
: Demonstrates loading data, defining an OLAP cube, and browsing the cube with Pentaho, Jaspersoft, SpagoBI and Saiku which all use Mondrian to drive their OLAP functionality.&lt;br /&gt;
* [http://wiki.pentaho.com/display/COM/January+20,+2010+-+Nick+Goodman+-+LucidDB,+DynamoBI+and+Mondrian Pentaho - January 20, 2010 - Nick Goodman - LucidDB, DynamoBI and Mondrian]&lt;br /&gt;
: Webex Presentation and PDF of slides presenting benefits and features of LucidDB 0.9.3 in conjunction with Pentaho's BI Suite.&lt;br /&gt;
* [http://www.nicholasgoodman.com/bt/blog/2011/06/08/a-different-vision-for-the-value-of-big-data/ A different vision for the value of Big Data]&lt;br /&gt;
: DynamoBI (Commercial Sponsor of LucidDB) - CEO Nick Goodman - shares vision about how LucidDB forms an information hub from which many different data sources can be presented and queried through normal SQL.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Tutorial Videos and Screencasts ==&lt;br /&gt;
&lt;br /&gt;
* [http://www.dynamobi.com/c/support/tutorial-videos/ DynamoBI - Getting started online videos.]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/installation.swf Installing LucidDB]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/sqllineclient.swf Connecting to LucidDB and using the Command Line Interface, sqllineClient]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/stopping_server.swf Stopping the server, with and without users connected]&lt;br /&gt;
* [http://youtu.be/sSYsVoVrp24 Installing and Loading LucidDB backed sample OLAP]&lt;br /&gt;
** Video from this blog: [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive] - By Slawomir Chodnicki, on March 12th, 2011&lt;br /&gt;
* [http://youtu.be/ZnY223u6q_Y Installing and running LucidDB as a daemon in Linux using a Java Service Wrapper]&lt;br /&gt;
: This is an approach that may also work well on Windows.  There is another approach, which is shorter and easier using the BASH shell under Linux. Documentation for both approaches can be found at [[LucidDbAsDaemonService]].&lt;br /&gt;
* Moving tables from one database to LucidDB&lt;br /&gt;
:[http://pub.eigenbase.org/wiki/LucidDbUpgrade#Downloads_-_Using_Pentaho_Data_Integration_to_generate_a_SQL_script_for_moving_tables Using Pentaho Data Integration to generate SQL for moving tables from an external database to LucidDB]&lt;br /&gt;
: This link is actually to a document about upgrading version to version of LucidDB, but because a PDI transformation file is used to generate SQL for the transition, the process can be generalized as moving from an external database to LucidDB with only minor modifications to the transformation.&lt;br /&gt;
&lt;br /&gt;
== Experimental ==&lt;br /&gt;
&lt;br /&gt;
*[http://kettle.pentaho.com/ Pentaho Data Integration (PDI)] - Bulk Loading Plugins&lt;br /&gt;
** [[LucidDbPDIStreamingLoader| Streaming Loader Step]] - Bulk load data the easy way. '''[RECOMMENDED]''' &lt;br /&gt;
**  [[LucidDbPdiBulkLoad | Bulk Load Step]] - '''[DEPRECATED after LucidDB 0.9.3]'''&lt;br /&gt;
**  [[LucidDbStreamingLoad |Streaming Loader]] : A good example for building bulk loaders from non-Java tools. '''[INFORMATIONAL]'''&lt;br /&gt;
* [[LucidDbHorizontalPartitioning | Horizontal Partitioning]]&lt;br /&gt;
: LucidDB does not currently support DDL for automatic [http://en.wikipedia.org/wiki/Partition_%28database%29 horizontal partitioning] of tables.  Although LucidDB's column-store architecture implements automatic vertical partitioning, horizontal partitioning is still a useful technique for scaling up to very large data volumes, so this page describes some manual approaches which can be used for very simple schemas.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbNonJavaClients | Using Non-Java Clients with LucidDB]]&lt;br /&gt;
: The main client API for LucidDB is JDBC.  This page discusses some options for overcoming the obstacle of developing an application in a language other than Java.&lt;br /&gt;
* [[LucidDbSqlDiffTesting | SQL Diff Testing]]&lt;br /&gt;
: Description of how to make use of some of the diff-based testing frameworks built into LucidDB for the purpose of test-driven ETL script development.&lt;br /&gt;
* [[LucidDbHive | Hive]]&lt;br /&gt;
: Walk-through document showing how to combine LucidDB with [http://hadoop.apache.org/hive/ Apache Hadoop's Hive].&lt;br /&gt;
&lt;br /&gt;
= LucidDB Developer Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbBuildFromSourceDistribution | Building LucidDB from source code]]&lt;br /&gt;
* [[LucidDbBuildFromPerforce | Building LucidDB from Perforce (version control software, VCS)]]&lt;br /&gt;
* [[Main_Page#Collaboration | Main Developer Collaboration Section ]]&lt;br /&gt;
* [[DesignMeetings | Design Meetings - Feature Ideas and Roadmaps]]&lt;br /&gt;
&lt;br /&gt;
= LucidDB Design Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbEfficientUpdates | Efficient Updates]]&lt;br /&gt;
* [[LucidDbCommonRelationalSubExpressionMaterialization | Common Relational Sub-Expression Materialization]]&lt;br /&gt;
&lt;br /&gt;
= Trademark Notice =&lt;br /&gt;
&lt;br /&gt;
&amp;lt;sub&amp;gt;LucidDB and the LucidDB logo are trademarks of DynamoBI Corporation.&amp;lt;/sub&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbDocs</id>
		<title>LucidDbDocs</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbDocs"/>
				<updated>2011-11-04T19:57:02Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: Add LucidDB Logo to dress up the documentation pages.&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;This is the main index page for documentation about the [[LucidDB]] open-source project, a DBMS optimized for business intelligence.  LucidDB is part of [http://www.eigenbase.org The Eigenbase Project].&amp;lt;br&amp;gt;&lt;br /&gt;
[[Image:Lucid db logo PMS 2010.png|400px|right]] __TOC__ &lt;br /&gt;
&lt;br /&gt;
= LucidDB User Documentation =&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Getting Started ==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''LucidDB Server''' [[Image:AdminUI 11-4-2011 1-07-28 PM.jpg|AdminUI v1.0|thumb|200px]]&lt;br /&gt;
* [[LucidDbGettingStarted | Getting Started - An Installation Guide]]&lt;br /&gt;
* [[LucidDbUserFaq | Frequently Asked Questions]]&lt;br /&gt;
* [[DynamoBIAdminUI | LucidDB AdminUI - Web Based Server Management Tool]] &lt;br /&gt;
: A graphical browser-based frontend from DynamoBI specifically built for LucidDB&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''External Software'''[[Image:Squirrel SQL 11-4-2011 1-24-26 PM.jpg|Squirrel SQL client running on Windows 7|thumb|200px]]&lt;br /&gt;
* [[LucidDbSquirrel | Squirrel SQL Client]] &lt;br /&gt;
: A graphical SQL client for accessing many database platforms, including LucidDB&lt;br /&gt;
* [[LucidDbPowerArchitect | Power Architect]]&lt;br /&gt;
: A data modeling tool&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== User Guides ==&lt;br /&gt;
* [[LucidDbUdfHowto | User Defined Functions (UDF) Howto]]&lt;br /&gt;
* [[LucidDbUdfJavaHowto | User Defined Functions (UDF) Java Howto]]&lt;br /&gt;
* [[LucidDbUdxJavaHowto | User Defined Transformation (UDX) Java Howto]]&lt;br /&gt;
* [[LucidDbEtlTutorial | Extract, Transform and Load (ETL) Tutorial]]&lt;br /&gt;
* [[LucidDbOlap| Online Analytical Processing (OLAP)]]&lt;br /&gt;
** [[LucidDbMondrianReplication | Using Pentaho Mondrian Replication]]&lt;br /&gt;
** [[LucidDbAggregateDesigner | Using Pentaho Aggregate Designer for Mondrian]]&lt;br /&gt;
* [[LucidDbConcurrencyControl | Concurrency Control]]&lt;br /&gt;
* [[LucidDbDataStorageAndAccess | Data Storage And Access]]&lt;br /&gt;
* [[LucidDbErrorHandling | Error Handling]]&lt;br /&gt;
* [[LucidDbIndexAccess | Index Access]]&lt;br /&gt;
* [[LucidDbJoinOptimization | Join Optimization]]&lt;br /&gt;
* [[LucidDbJoinImplementation | Join Implementation]]&lt;br /&gt;
* [[LucidDbSlowQueryDiagnosis | Slow Query Diagnosis]]:  Diagnosing slow queries using EXPLAIN PLAN and other tools&lt;br /&gt;
* [[LucidDbSubqueries | Subqueries]]&lt;br /&gt;
* [[LucidDbWarehouseLabels | Warehouse Labels]]&lt;br /&gt;
:  Labels allow users to have read-only query access to a snapshot of the database at an earlier point in time. Snapshots are accessible regardless of  concurrent activities on other connections, like ETL, preparing new data.&lt;br /&gt;
* [[LucidDbQueryExecution | Query Execution]]&lt;br /&gt;
* [[LucidDbServerContainer | Server Container]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Administrator Guides ==&lt;br /&gt;
&lt;br /&gt;
LucidDB is designed to require as little administration as possible, so we hope this section can remain short :)&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbMemoryManagement | Memory Management]]&lt;br /&gt;
** [[LucidDbBufferPoolSizing | Buffer Pool Sizing]]&lt;br /&gt;
* [[LucidDbSystemProcedures | System Procedures]]&lt;br /&gt;
: Useful for: Backup/Restore, Generating DDL for tables and other objects, managing sessions.&lt;br /&gt;
* [[LucidDbSystemParameters | System Parameters]]&lt;br /&gt;
: Useful information about tweaking: Memory usage, network settings, execution, and storage functionality.&lt;br /&gt;
* [[LucidDbSessionParameters| Session Parameters]]&lt;br /&gt;
* [[LucidDbSystemViews | System Views]]&lt;br /&gt;
: The DBA views defined by LucidDB provide a global picture of the contents of the system catalog (tables, columns, etc) and the volatile state of the system (sessions, cache utilization, etc).&lt;br /&gt;
* [[LucidDbPerformanceTuning | Performance Tuning]]&lt;br /&gt;
** [[LucidDbPerformanceCounters | Performance Counters]]&lt;br /&gt;
** [[LucidDbMonitor | Monitor]] Active monitoring&lt;br /&gt;
* [[LucidDbTracing | Tracing]] Debug Logs in LucidDB&lt;br /&gt;
* [[LucidDbBackupRestore | Performing Backups and Restores]]&lt;br /&gt;
* [[LucidDbUpgrade | How to upgrade to each new release.]]&lt;br /&gt;
* [[LucidDbAsDaemonService | Running LucidDB as a Service / Daemon]]&lt;br /&gt;
* [[LucidDbAsManagedBean | Running LucidDB as a Managed Java Bean]]&lt;br /&gt;
* [[LucidDbMoveCatalog | Moving the LucidDB Database Catalog]]&lt;br /&gt;
* [[LucidDbScriptingLucidUsingBASH | Scripting LucidDB using BASH shell scripts]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Function and SQL Language Reference Guides ==&lt;br /&gt;
* [[AppLib]] - Description of the utility function library in LucidDB&lt;br /&gt;
* [[LucidDbDataTypes | Supported Data Types]]&lt;br /&gt;
* [[LucidDbSqlConformance | SQL Standard Conformance]]&lt;br /&gt;
* [[LucidDbSqlReference | SQL Language Reference]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Connectors to External Data Sources (SQL/MED) ([http://farrago.sourceforge.net/design/sqlmed.html Management of External Data])==&lt;br /&gt;
[[Image:Connectors.jpg|thumb|200px|right|See more general information about connectors here [[http://www.dynamobi.com/c/products/luciddb/connectors http://www.dynamobi.com]].]]&lt;br /&gt;
These connectors wrap up external datasources and allow them to present their data as foreign tables inside of LucidDB.  Connectors are an adapters that generally allow normal SQL queries to be run against datasources that may not support the SQL language directly.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbFlatFileWrapper | Flat File Wrapper]] - Connector enabling read-only SQL accesses to text files&lt;br /&gt;
* [[FarragoMedJdbcPlugin | JDBC Data Wrapper]] - Connector enabling presentation of external database tables in LucidDB&lt;br /&gt;
* [[FarragoMedSalesforcePlugin|Salesforce Data Wrapper]] - Connector for presenting Salesforce tables in LucidDB&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Benchmark Studies ==&lt;br /&gt;
* [[LucidDbTpch|TPCH Benchmarks]]&lt;br /&gt;
* [[LucidDbSqbm | SQBM]]&lt;br /&gt;
* [[LucidDbOtp| OTP Benchmark using Bureau of Transportation Statistics]], [http://www.mysqlperformanceblog.com/2010/01/07/star-schema-bechmark-infobright-infinidb-and-luciddb SSB Benchmark]&lt;br /&gt;
* [[LucidDbBenchmarkCandidates| Benchmark Candidates]] - Published benchmarks and applications which could serve as good showcases for LucidDB's architecture&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Community Involvement ==&lt;br /&gt;
LucidDB is one of the best databases in the world because of the people, not just the technology.&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Community Support Forum'''&lt;br /&gt;
: Please visit, ask questions and help others &lt;br /&gt;
: [[http://www.luciddb.org/forums/ http://www.luciddb.org/forums/]]&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Chat with us online'''&lt;br /&gt;
: Many LucidDB users hang out on an Internet Relay Chat channel (IRC) called ##luciddb, using Freenode's [http://freenode.net/irc_servers.shtml] servers.&lt;br /&gt;
: We would love to answer your questions and help you get up and going using LucidDB.&lt;br /&gt;
: When you connect to '''chat.us.freenode.net''' or other freenode server near your country, be sure to use the command '''/join ##luciddb''' to actually join the chat channel for LucidDB.&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
:{| {{table}}&lt;br /&gt;
| align=&amp;quot;Left&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Software Name'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Platform'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Download Location'''&lt;br /&gt;
|-&lt;br /&gt;
| qwebirc||Web-based client||http://webchat.freenode.net/&lt;br /&gt;
|-&lt;br /&gt;
| ChatZilla||Firefox Add-on||https://addons.mozilla.org/en-US/firefox/addon/chatzilla/&lt;br /&gt;
|-&lt;br /&gt;
| mIRC||MS Windows||http://www.mirc.com/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||MS Windows||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||Linux||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat Aqua||Mac OS||http://sourceforge.net/projects/xchataqua/&lt;br /&gt;
|-&lt;br /&gt;
| Colloquy||Apple iPad &amp;amp; iPhone||http://colloquy.info/&lt;br /&gt;
|-&lt;br /&gt;
| Android - Internet Relay Chat||Google Android||https://market.android.com/details?id=com.countercultured.irc&amp;amp;hl=en&lt;br /&gt;
|}&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
* '''Bug and Feature Tracking&lt;br /&gt;
: Make a feature request or report a problem you have experienced.&lt;br /&gt;
: [[http://jira.eigenbase.org/secure/Dashboard.jspa http://jira.eigenbase.org/secure/Dashboard.jspa]]&lt;br /&gt;
&lt;br /&gt;
== Presentations / Blogs ==&lt;br /&gt;
* [[Media:PerconaLucidDB.ppt|Percona LucidDB PowerPoint Slides]]&lt;br /&gt;
* [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive]&lt;br /&gt;
: Demonstrates loading data, defining an OLAP cube, and browsing the cube with Pentaho, Jaspersoft, SpagoBI and Saiku which all use Mondrian to drive their OLAP functionality.&lt;br /&gt;
* [http://wiki.pentaho.com/display/COM/January+20,+2010+-+Nick+Goodman+-+LucidDB,+DynamoBI+and+Mondrian Pentaho - January 20, 2010 - Nick Goodman - LucidDB, DynamoBI and Mondrian]&lt;br /&gt;
: Webex Presentation and PDF of slides presenting benefits and features of LucidDB 0.9.3 in conjunction with Pentaho's BI Suite.&lt;br /&gt;
* [http://www.nicholasgoodman.com/bt/blog/2011/06/08/a-different-vision-for-the-value-of-big-data/ A different vision for the value of Big Data]&lt;br /&gt;
: DynamoBI (Commercial Sponsor of LucidDB) - CEO Nick Goodman - shares vision about how LucidDB forms an information hub from which many different data sources can be presented and queried through normal SQL.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Tutorial Videos and Screencasts ==&lt;br /&gt;
&lt;br /&gt;
* [http://www.dynamobi.com/c/support/tutorial-videos/ DynamoBI - Getting started online videos.]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/installation.swf Installing LucidDB]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/sqllineclient.swf Connecting to LucidDB and using the Command Line Interface, sqllineClient]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/stopping_server.swf Stopping the server, with and without users connected]&lt;br /&gt;
* [http://youtu.be/sSYsVoVrp24 Installing and Loading LucidDB backed sample OLAP]&lt;br /&gt;
** Video from this blog: [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive] - By Slawomir Chodnicki, on March 12th, 2011&lt;br /&gt;
* [http://youtu.be/ZnY223u6q_Y Installing and running LucidDB as a daemon in Linux using a Java Service Wrapper]&lt;br /&gt;
: This is an approach that may also work well on Windows.  There is another approach, which is shorter and easier using the BASH shell under Linux. Documentation for both approaches can be found at [[LucidDbAsDaemonService]].&lt;br /&gt;
* Moving tables from one database to LucidDB&lt;br /&gt;
:[http://pub.eigenbase.org/wiki/LucidDbUpgrade#Downloads_-_Using_Pentaho_Data_Integration_to_generate_a_SQL_script_for_moving_tables Using Pentaho Data Integration to generate SQL for moving tables from an external database to LucidDB]&lt;br /&gt;
: This link is actually to a document about upgrading version to version of LucidDB, but because a PDI transformation file is used to generate SQL for the transition, the process can be generalized as moving from an external database to LucidDB with only minor modifications to the transformation.&lt;br /&gt;
&lt;br /&gt;
== Experimental ==&lt;br /&gt;
&lt;br /&gt;
*[http://kettle.pentaho.com/ Pentaho Data Integration (PDI)] - Bulk Loading Plugins&lt;br /&gt;
** [[LucidDbPDIStreamingLoader| Streaming Loader Step]] - Bulk load data the easy way. '''[RECOMMENDED]''' &lt;br /&gt;
**  [[LucidDbPdiBulkLoad | Bulk Load Step]] - '''[DEPRECATED after LucidDB 0.9.3]'''&lt;br /&gt;
**  [[LucidDbStreamingLoad |Streaming Loader]] : A good example for building bulk loaders from non-Java tools. '''[INFORMATIONAL]'''&lt;br /&gt;
* [[LucidDbHorizontalPartitioning | Horizontal Partitioning]]&lt;br /&gt;
: LucidDB does not currently support DDL for automatic [http://en.wikipedia.org/wiki/Partition_%28database%29 horizontal partitioning] of tables.  Although LucidDB's column-store architecture implements automatic vertical partitioning, horizontal partitioning is still a useful technique for scaling up to very large data volumes, so this page describes some manual approaches which can be used for very simple schemas.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbNonJavaClients | Using Non-Java Clients with LucidDB]]&lt;br /&gt;
: The main client API for LucidDB is JDBC.  This page discusses some options for overcoming the obstacle of developing an application in a language other than Java.&lt;br /&gt;
* [[LucidDbSqlDiffTesting | SQL Diff Testing]]&lt;br /&gt;
: Description of how to make use of some of the diff-based testing frameworks built into LucidDB for the purpose of test-driven ETL script development.&lt;br /&gt;
* [[LucidDbHive | Hive]]&lt;br /&gt;
: Walk-through document showing how to combine LucidDB with [http://hadoop.apache.org/hive/ Apache Hadoop's Hive].&lt;br /&gt;
&lt;br /&gt;
= LucidDB Developer Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbBuildFromSourceDistribution | Building LucidDB from source code]]&lt;br /&gt;
* [[LucidDbBuildFromPerforce | Building LucidDB from Perforce (version control software, VCS)]]&lt;br /&gt;
* [[Main_Page#Collaboration | Main Developer Collaboration Section ]]&lt;br /&gt;
* [[DesignMeetings | Design Meetings - Feature Ideas and Roadmaps]]&lt;br /&gt;
&lt;br /&gt;
= LucidDB Design Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbEfficientUpdates | Efficient Updates]]&lt;br /&gt;
* [[LucidDbCommonRelationalSubExpressionMaterialization | Common Relational Sub-Expression Materialization]]&lt;br /&gt;
&lt;br /&gt;
= Trademark Notice =&lt;br /&gt;
&lt;br /&gt;
&amp;lt;sub&amp;gt;LucidDB and the LucidDB logo are trademarks of DynamoBI Corporation.&amp;lt;/sub&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/File:Lucid_db_logo_PMS_2010.png</id>
		<title>File:Lucid db logo PMS 2010.png</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/File:Lucid_db_logo_PMS_2010.png"/>
				<updated>2011-11-04T19:54:30Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: LucidDB Logo&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;LucidDB Logo&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbDocs</id>
		<title>LucidDbDocs</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbDocs"/>
				<updated>2011-11-04T19:50:32Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* Connectors to External Data Sources (SQL/MED) ([http://farrago.sourceforge.net/design/sqlmed.html Management of External Data]) */&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;This is the main index page for documentation about the [[LucidDB]] open-source project, a DBMS optimized for business intelligence.  LucidDB is part of [http://www.eigenbase.org The Eigenbase Project].  &lt;br /&gt;
&lt;br /&gt;
= LucidDB User Documentation =&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Getting Started ==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''LucidDB Server''' [[Image:AdminUI 11-4-2011 1-07-28 PM.jpg|AdminUI v1.0|thumb|200px]]&lt;br /&gt;
* [[LucidDbGettingStarted | Getting Started - An Installation Guide]]&lt;br /&gt;
* [[LucidDbUserFaq | Frequently Asked Questions]]&lt;br /&gt;
* [[DynamoBIAdminUI | LucidDB AdminUI - Web Based Server Management Tool]] &lt;br /&gt;
: A graphical browser-based frontend from DynamoBI specifically built for LucidDB&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''External Software'''[[Image:Squirrel SQL 11-4-2011 1-24-26 PM.jpg|Squirrel SQL client running on Windows 7|thumb|200px]]&lt;br /&gt;
* [[LucidDbSquirrel | Squirrel SQL Client]] &lt;br /&gt;
: A graphical SQL client for accessing many database platforms, including LucidDB&lt;br /&gt;
* [[LucidDbPowerArchitect | Power Architect]]&lt;br /&gt;
: A data modeling tool&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== User Guides ==&lt;br /&gt;
* [[LucidDbUdfHowto | User Defined Functions (UDF) Howto]]&lt;br /&gt;
* [[LucidDbUdfJavaHowto | User Defined Functions (UDF) Java Howto]]&lt;br /&gt;
* [[LucidDbUdxJavaHowto | User Defined Transformation (UDX) Java Howto]]&lt;br /&gt;
* [[LucidDbEtlTutorial | Extract, Transform and Load (ETL) Tutorial]]&lt;br /&gt;
* [[LucidDbOlap| Online Analytical Processing (OLAP)]]&lt;br /&gt;
** [[LucidDbMondrianReplication | Using Pentaho Mondrian Replication]]&lt;br /&gt;
** [[LucidDbAggregateDesigner | Using Pentaho Aggregate Designer for Mondrian]]&lt;br /&gt;
* [[LucidDbConcurrencyControl | Concurrency Control]]&lt;br /&gt;
* [[LucidDbDataStorageAndAccess | Data Storage And Access]]&lt;br /&gt;
* [[LucidDbErrorHandling | Error Handling]]&lt;br /&gt;
* [[LucidDbIndexAccess | Index Access]]&lt;br /&gt;
* [[LucidDbJoinOptimization | Join Optimization]]&lt;br /&gt;
* [[LucidDbJoinImplementation | Join Implementation]]&lt;br /&gt;
* [[LucidDbSlowQueryDiagnosis | Slow Query Diagnosis]]:  Diagnosing slow queries using EXPLAIN PLAN and other tools&lt;br /&gt;
* [[LucidDbSubqueries | Subqueries]]&lt;br /&gt;
* [[LucidDbWarehouseLabels | Warehouse Labels]]&lt;br /&gt;
:  Labels allow users to have read-only query access to a snapshot of the database at an earlier point in time. Snapshots are accessible regardless of  concurrent activities on other connections, like ETL, preparing new data.&lt;br /&gt;
* [[LucidDbQueryExecution | Query Execution]]&lt;br /&gt;
* [[LucidDbServerContainer | Server Container]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Administrator Guides ==&lt;br /&gt;
&lt;br /&gt;
LucidDB is designed to require as little administration as possible, so we hope this section can remain short :)&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbMemoryManagement | Memory Management]]&lt;br /&gt;
** [[LucidDbBufferPoolSizing | Buffer Pool Sizing]]&lt;br /&gt;
* [[LucidDbSystemProcedures | System Procedures]]&lt;br /&gt;
: Useful for: Backup/Restore, Generating DDL for tables and other objects, managing sessions.&lt;br /&gt;
* [[LucidDbSystemParameters | System Parameters]]&lt;br /&gt;
: Useful information about tweaking: Memory usage, network settings, execution, and storage functionality.&lt;br /&gt;
* [[LucidDbSessionParameters| Session Parameters]]&lt;br /&gt;
* [[LucidDbSystemViews | System Views]]&lt;br /&gt;
: The DBA views defined by LucidDB provide a global picture of the contents of the system catalog (tables, columns, etc) and the volatile state of the system (sessions, cache utilization, etc).&lt;br /&gt;
* [[LucidDbPerformanceTuning | Performance Tuning]]&lt;br /&gt;
** [[LucidDbPerformanceCounters | Performance Counters]]&lt;br /&gt;
** [[LucidDbMonitor | Monitor]] Active monitoring&lt;br /&gt;
* [[LucidDbTracing | Tracing]] Debug Logs in LucidDB&lt;br /&gt;
* [[LucidDbBackupRestore | Performing Backups and Restores]]&lt;br /&gt;
* [[LucidDbUpgrade | How to upgrade to each new release.]]&lt;br /&gt;
* [[LucidDbAsDaemonService | Running LucidDB as a Service / Daemon]]&lt;br /&gt;
* [[LucidDbAsManagedBean | Running LucidDB as a Managed Java Bean]]&lt;br /&gt;
* [[LucidDbMoveCatalog | Moving the LucidDB Database Catalog]]&lt;br /&gt;
* [[LucidDbScriptingLucidUsingBASH | Scripting LucidDB using BASH shell scripts]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Function and SQL Language Reference Guides ==&lt;br /&gt;
* [[AppLib]] - Description of the utility function library in LucidDB&lt;br /&gt;
* [[LucidDbDataTypes | Supported Data Types]]&lt;br /&gt;
* [[LucidDbSqlConformance | SQL Standard Conformance]]&lt;br /&gt;
* [[LucidDbSqlReference | SQL Language Reference]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Connectors to External Data Sources (SQL/MED) ([http://farrago.sourceforge.net/design/sqlmed.html Management of External Data])==&lt;br /&gt;
[[Image:Connectors.jpg|thumb|200px|right|See more general information about connectors here [[http://www.dynamobi.com/c/products/luciddb/connectors http://www.dynamobi.com]].]]&lt;br /&gt;
These connectors wrap up external datasources and allow them to present their data as foreign tables inside of LucidDB.  Connectors are an adapters that generally allow normal SQL queries to be run against datasources that may not support the SQL language directly.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbFlatFileWrapper | Flat File Wrapper]] - Connector enabling read-only SQL accesses to text files&lt;br /&gt;
* [[FarragoMedJdbcPlugin | JDBC Data Wrapper]] - Connector enabling presentation of external database tables in LucidDB&lt;br /&gt;
* [[FarragoMedSalesforcePlugin|Salesforce Data Wrapper]] - Connector for presenting Salesforce tables in LucidDB&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Benchmark Studies ==&lt;br /&gt;
* [[LucidDbTpch|TPCH Benchmarks]]&lt;br /&gt;
* [[LucidDbSqbm | SQBM]]&lt;br /&gt;
* [[LucidDbOtp| OTP Benchmark using Bureau of Transportation Statistics]], [http://www.mysqlperformanceblog.com/2010/01/07/star-schema-bechmark-infobright-infinidb-and-luciddb SSB Benchmark]&lt;br /&gt;
* [[LucidDbBenchmarkCandidates| Benchmark Candidates]] - Published benchmarks and applications which could serve as good showcases for LucidDB's architecture&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Community Involvement ==&lt;br /&gt;
LucidDB is one of the best databases in the world because of the people, not just the technology.&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Community Support Forum'''&lt;br /&gt;
: Please visit, ask questions and help others &lt;br /&gt;
: [[http://www.luciddb.org/forums/ http://www.luciddb.org/forums/]]&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Chat with us online'''&lt;br /&gt;
: Many LucidDB users hang out on an Internet Relay Chat channel (IRC) called ##luciddb, using Freenode's [http://freenode.net/irc_servers.shtml] servers.&lt;br /&gt;
: We would love to answer your questions and help you get up and going using LucidDB.&lt;br /&gt;
: When you connect to '''chat.us.freenode.net''' or other freenode server near your country, be sure to use the command '''/join ##luciddb''' to actually join the chat channel for LucidDB.&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
:{| {{table}}&lt;br /&gt;
| align=&amp;quot;Left&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Software Name'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Platform'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Download Location'''&lt;br /&gt;
|-&lt;br /&gt;
| qwebirc||Web-based client||http://webchat.freenode.net/&lt;br /&gt;
|-&lt;br /&gt;
| ChatZilla||Firefox Add-on||https://addons.mozilla.org/en-US/firefox/addon/chatzilla/&lt;br /&gt;
|-&lt;br /&gt;
| mIRC||MS Windows||http://www.mirc.com/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||MS Windows||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||Linux||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat Aqua||Mac OS||http://sourceforge.net/projects/xchataqua/&lt;br /&gt;
|-&lt;br /&gt;
| Colloquy||Apple iPad &amp;amp; iPhone||http://colloquy.info/&lt;br /&gt;
|-&lt;br /&gt;
| Android - Internet Relay Chat||Google Android||https://market.android.com/details?id=com.countercultured.irc&amp;amp;hl=en&lt;br /&gt;
|}&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
* '''Bug and Feature Tracking&lt;br /&gt;
: Make a feature request or report a problem you have experienced.&lt;br /&gt;
: [[http://jira.eigenbase.org/secure/Dashboard.jspa http://jira.eigenbase.org/secure/Dashboard.jspa]]&lt;br /&gt;
&lt;br /&gt;
== Presentations / Blogs ==&lt;br /&gt;
* [[Media:PerconaLucidDB.ppt|Percona LucidDB PowerPoint Slides]]&lt;br /&gt;
* [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive]&lt;br /&gt;
: Demonstrates loading data, defining an OLAP cube, and browsing the cube with Pentaho, Jaspersoft, SpagoBI and Saiku which all use Mondrian to drive their OLAP functionality.&lt;br /&gt;
* [http://wiki.pentaho.com/display/COM/January+20,+2010+-+Nick+Goodman+-+LucidDB,+DynamoBI+and+Mondrian Pentaho - January 20, 2010 - Nick Goodman - LucidDB, DynamoBI and Mondrian]&lt;br /&gt;
: Webex Presentation and PDF of slides presenting benefits and features of LucidDB 0.9.3 in conjunction with Pentaho's BI Suite.&lt;br /&gt;
* [http://www.nicholasgoodman.com/bt/blog/2011/06/08/a-different-vision-for-the-value-of-big-data/ A different vision for the value of Big Data]&lt;br /&gt;
: DynamoBI (Commercial Sponsor of LucidDB) - CEO Nick Goodman - shares vision about how LucidDB forms an information hub from which many different data sources can be presented and queried through normal SQL.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Tutorial Videos and Screencasts ==&lt;br /&gt;
&lt;br /&gt;
* [http://www.dynamobi.com/c/support/tutorial-videos/ DynamoBI - Getting started online videos.]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/installation.swf Installing LucidDB]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/sqllineclient.swf Connecting to LucidDB and using the Command Line Interface, sqllineClient]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/stopping_server.swf Stopping the server, with and without users connected]&lt;br /&gt;
* [http://youtu.be/sSYsVoVrp24 Installing and Loading LucidDB backed sample OLAP]&lt;br /&gt;
** Video from this blog: [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive] - By Slawomir Chodnicki, on March 12th, 2011&lt;br /&gt;
* [http://youtu.be/ZnY223u6q_Y Installing and running LucidDB as a daemon in Linux using a Java Service Wrapper]&lt;br /&gt;
: This is an approach that may also work well on Windows.  There is another approach, which is shorter and easier using the BASH shell under Linux. Documentation for both approaches can be found at [[LucidDbAsDaemonService]].&lt;br /&gt;
* Moving tables from one database to LucidDB&lt;br /&gt;
:[http://pub.eigenbase.org/wiki/LucidDbUpgrade#Downloads_-_Using_Pentaho_Data_Integration_to_generate_a_SQL_script_for_moving_tables Using Pentaho Data Integration to generate SQL for moving tables from an external database to LucidDB]&lt;br /&gt;
: This link is actually to a document about upgrading version to version of LucidDB, but because a PDI transformation file is used to generate SQL for the transition, the process can be generalized as moving from an external database to LucidDB with only minor modifications to the transformation.&lt;br /&gt;
&lt;br /&gt;
== Experimental ==&lt;br /&gt;
&lt;br /&gt;
*[http://kettle.pentaho.com/ Pentaho Data Integration (PDI)] - Bulk Loading Plugins&lt;br /&gt;
** [[LucidDbPDIStreamingLoader| Streaming Loader Step]] - Bulk load data the easy way. '''[RECOMMENDED]''' &lt;br /&gt;
**  [[LucidDbPdiBulkLoad | Bulk Load Step]] - '''[DEPRECATED after LucidDB 0.9.3]'''&lt;br /&gt;
**  [[LucidDbStreamingLoad |Streaming Loader]] : A good example for building bulk loaders from non-Java tools. '''[INFORMATIONAL]'''&lt;br /&gt;
* [[LucidDbHorizontalPartitioning | Horizontal Partitioning]]&lt;br /&gt;
: LucidDB does not currently support DDL for automatic [http://en.wikipedia.org/wiki/Partition_%28database%29 horizontal partitioning] of tables.  Although LucidDB's column-store architecture implements automatic vertical partitioning, horizontal partitioning is still a useful technique for scaling up to very large data volumes, so this page describes some manual approaches which can be used for very simple schemas.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbNonJavaClients | Using Non-Java Clients with LucidDB]]&lt;br /&gt;
: The main client API for LucidDB is JDBC.  This page discusses some options for overcoming the obstacle of developing an application in a language other than Java.&lt;br /&gt;
* [[LucidDbSqlDiffTesting | SQL Diff Testing]]&lt;br /&gt;
: Description of how to make use of some of the diff-based testing frameworks built into LucidDB for the purpose of test-driven ETL script development.&lt;br /&gt;
* [[LucidDbHive | Hive]]&lt;br /&gt;
: Walk-through document showing how to combine LucidDB with [http://hadoop.apache.org/hive/ Apache Hadoop's Hive].&lt;br /&gt;
&lt;br /&gt;
= LucidDB Developer Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbBuildFromSourceDistribution | Building LucidDB from source code]]&lt;br /&gt;
* [[LucidDbBuildFromPerforce | Building LucidDB from Perforce (version control software, VCS)]]&lt;br /&gt;
* [[Main_Page#Collaboration | Main Developer Collaboration Section ]]&lt;br /&gt;
* [[DesignMeetings | Design Meetings - Feature Ideas and Roadmaps]]&lt;br /&gt;
&lt;br /&gt;
= LucidDB Design Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbEfficientUpdates | Efficient Updates]]&lt;br /&gt;
* [[LucidDbCommonRelationalSubExpressionMaterialization | Common Relational Sub-Expression Materialization]]&lt;br /&gt;
&lt;br /&gt;
= Trademark Notice =&lt;br /&gt;
&lt;br /&gt;
&amp;lt;sub&amp;gt;LucidDB and the LucidDB logo are trademarks of DynamoBI Corporation.&amp;lt;/sub&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbDocs</id>
		<title>LucidDbDocs</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbDocs"/>
				<updated>2011-11-04T19:48:08Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* Connectors to External Data Sources (SQL/MED) ([http://farrago.sourceforge.net/design/sqlmed.html Management of External Data]) */&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;This is the main index page for documentation about the [[LucidDB]] open-source project, a DBMS optimized for business intelligence.  LucidDB is part of [http://www.eigenbase.org The Eigenbase Project].  &lt;br /&gt;
&lt;br /&gt;
= LucidDB User Documentation =&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Getting Started ==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''LucidDB Server''' [[Image:AdminUI 11-4-2011 1-07-28 PM.jpg|AdminUI v1.0|thumb|200px]]&lt;br /&gt;
* [[LucidDbGettingStarted | Getting Started - An Installation Guide]]&lt;br /&gt;
* [[LucidDbUserFaq | Frequently Asked Questions]]&lt;br /&gt;
* [[DynamoBIAdminUI | LucidDB AdminUI - Web Based Server Management Tool]] &lt;br /&gt;
: A graphical browser-based frontend from DynamoBI specifically built for LucidDB&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''External Software'''[[Image:Squirrel SQL 11-4-2011 1-24-26 PM.jpg|Squirrel SQL client running on Windows 7|thumb|200px]]&lt;br /&gt;
* [[LucidDbSquirrel | Squirrel SQL Client]] &lt;br /&gt;
: A graphical SQL client for accessing many database platforms, including LucidDB&lt;br /&gt;
* [[LucidDbPowerArchitect | Power Architect]]&lt;br /&gt;
: A data modeling tool&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== User Guides ==&lt;br /&gt;
* [[LucidDbUdfHowto | User Defined Functions (UDF) Howto]]&lt;br /&gt;
* [[LucidDbUdfJavaHowto | User Defined Functions (UDF) Java Howto]]&lt;br /&gt;
* [[LucidDbUdxJavaHowto | User Defined Transformation (UDX) Java Howto]]&lt;br /&gt;
* [[LucidDbEtlTutorial | Extract, Transform and Load (ETL) Tutorial]]&lt;br /&gt;
* [[LucidDbOlap| Online Analytical Processing (OLAP)]]&lt;br /&gt;
** [[LucidDbMondrianReplication | Using Pentaho Mondrian Replication]]&lt;br /&gt;
** [[LucidDbAggregateDesigner | Using Pentaho Aggregate Designer for Mondrian]]&lt;br /&gt;
* [[LucidDbConcurrencyControl | Concurrency Control]]&lt;br /&gt;
* [[LucidDbDataStorageAndAccess | Data Storage And Access]]&lt;br /&gt;
* [[LucidDbErrorHandling | Error Handling]]&lt;br /&gt;
* [[LucidDbIndexAccess | Index Access]]&lt;br /&gt;
* [[LucidDbJoinOptimization | Join Optimization]]&lt;br /&gt;
* [[LucidDbJoinImplementation | Join Implementation]]&lt;br /&gt;
* [[LucidDbSlowQueryDiagnosis | Slow Query Diagnosis]]:  Diagnosing slow queries using EXPLAIN PLAN and other tools&lt;br /&gt;
* [[LucidDbSubqueries | Subqueries]]&lt;br /&gt;
* [[LucidDbWarehouseLabels | Warehouse Labels]]&lt;br /&gt;
:  Labels allow users to have read-only query access to a snapshot of the database at an earlier point in time. Snapshots are accessible regardless of  concurrent activities on other connections, like ETL, preparing new data.&lt;br /&gt;
* [[LucidDbQueryExecution | Query Execution]]&lt;br /&gt;
* [[LucidDbServerContainer | Server Container]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Administrator Guides ==&lt;br /&gt;
&lt;br /&gt;
LucidDB is designed to require as little administration as possible, so we hope this section can remain short :)&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbMemoryManagement | Memory Management]]&lt;br /&gt;
** [[LucidDbBufferPoolSizing | Buffer Pool Sizing]]&lt;br /&gt;
* [[LucidDbSystemProcedures | System Procedures]]&lt;br /&gt;
: Useful for: Backup/Restore, Generating DDL for tables and other objects, managing sessions.&lt;br /&gt;
* [[LucidDbSystemParameters | System Parameters]]&lt;br /&gt;
: Useful information about tweaking: Memory usage, network settings, execution, and storage functionality.&lt;br /&gt;
* [[LucidDbSessionParameters| Session Parameters]]&lt;br /&gt;
* [[LucidDbSystemViews | System Views]]&lt;br /&gt;
: The DBA views defined by LucidDB provide a global picture of the contents of the system catalog (tables, columns, etc) and the volatile state of the system (sessions, cache utilization, etc).&lt;br /&gt;
* [[LucidDbPerformanceTuning | Performance Tuning]]&lt;br /&gt;
** [[LucidDbPerformanceCounters | Performance Counters]]&lt;br /&gt;
** [[LucidDbMonitor | Monitor]] Active monitoring&lt;br /&gt;
* [[LucidDbTracing | Tracing]] Debug Logs in LucidDB&lt;br /&gt;
* [[LucidDbBackupRestore | Performing Backups and Restores]]&lt;br /&gt;
* [[LucidDbUpgrade | How to upgrade to each new release.]]&lt;br /&gt;
* [[LucidDbAsDaemonService | Running LucidDB as a Service / Daemon]]&lt;br /&gt;
* [[LucidDbAsManagedBean | Running LucidDB as a Managed Java Bean]]&lt;br /&gt;
* [[LucidDbMoveCatalog | Moving the LucidDB Database Catalog]]&lt;br /&gt;
* [[LucidDbScriptingLucidUsingBASH | Scripting LucidDB using BASH shell scripts]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Function and SQL Language Reference Guides ==&lt;br /&gt;
* [[AppLib]] - Description of the utility function library in LucidDB&lt;br /&gt;
* [[LucidDbDataTypes | Supported Data Types]]&lt;br /&gt;
* [[LucidDbSqlConformance | SQL Standard Conformance]]&lt;br /&gt;
* [[LucidDbSqlReference | SQL Language Reference]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Connectors to External Data Sources (SQL/MED) ([http://farrago.sourceforge.net/design/sqlmed.html Management of External Data])==&lt;br /&gt;
[[Image:Connectors.jpg|thumb|200px|right|http://www.dynamobi.com/c/products/luciddb/connectors]]&lt;br /&gt;
These connectors wrap up external datasources and allow them to present their data as foreign tables inside of LucidDB.  Connectors are an adapters that generally allow normal SQL queries to be run against datasources that may not support the SQL language directly.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbFlatFileWrapper | Flat File Wrapper]] - Connector enabling read-only SQL accesses to text files&lt;br /&gt;
* [[FarragoMedJdbcPlugin | JDBC Data Wrapper]] - Connector enabling presentation of external database tables in LucidDB&lt;br /&gt;
* [[FarragoMedSalesforcePlugin|Salesforce Data Wrapper]] - Connector for presenting Salesforce tables in LucidDB&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== Benchmark Studies ==&lt;br /&gt;
* [[LucidDbTpch|TPCH Benchmarks]]&lt;br /&gt;
* [[LucidDbSqbm | SQBM]]&lt;br /&gt;
* [[LucidDbOtp| OTP Benchmark using Bureau of Transportation Statistics]], [http://www.mysqlperformanceblog.com/2010/01/07/star-schema-bechmark-infobright-infinidb-and-luciddb SSB Benchmark]&lt;br /&gt;
* [[LucidDbBenchmarkCandidates| Benchmark Candidates]] - Published benchmarks and applications which could serve as good showcases for LucidDB's architecture&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Community Involvement ==&lt;br /&gt;
LucidDB is one of the best databases in the world because of the people, not just the technology.&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Community Support Forum'''&lt;br /&gt;
: Please visit, ask questions and help others &lt;br /&gt;
: [[http://www.luciddb.org/forums/ http://www.luciddb.org/forums/]]&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Chat with us online'''&lt;br /&gt;
: Many LucidDB users hang out on an Internet Relay Chat channel (IRC) called ##luciddb, using Freenode's [http://freenode.net/irc_servers.shtml] servers.&lt;br /&gt;
: We would love to answer your questions and help you get up and going using LucidDB.&lt;br /&gt;
: When you connect to '''chat.us.freenode.net''' or other freenode server near your country, be sure to use the command '''/join ##luciddb''' to actually join the chat channel for LucidDB.&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
:{| {{table}}&lt;br /&gt;
| align=&amp;quot;Left&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Software Name'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Platform'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Download Location'''&lt;br /&gt;
|-&lt;br /&gt;
| qwebirc||Web-based client||http://webchat.freenode.net/&lt;br /&gt;
|-&lt;br /&gt;
| ChatZilla||Firefox Add-on||https://addons.mozilla.org/en-US/firefox/addon/chatzilla/&lt;br /&gt;
|-&lt;br /&gt;
| mIRC||MS Windows||http://www.mirc.com/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||MS Windows||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||Linux||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat Aqua||Mac OS||http://sourceforge.net/projects/xchataqua/&lt;br /&gt;
|-&lt;br /&gt;
| Colloquy||Apple iPad &amp;amp; iPhone||http://colloquy.info/&lt;br /&gt;
|-&lt;br /&gt;
| Android - Internet Relay Chat||Google Android||https://market.android.com/details?id=com.countercultured.irc&amp;amp;hl=en&lt;br /&gt;
|}&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
* '''Bug and Feature Tracking&lt;br /&gt;
: Make a feature request or report a problem you have experienced.&lt;br /&gt;
: [[http://jira.eigenbase.org/secure/Dashboard.jspa http://jira.eigenbase.org/secure/Dashboard.jspa]]&lt;br /&gt;
&lt;br /&gt;
== Presentations / Blogs ==&lt;br /&gt;
* [[Media:PerconaLucidDB.ppt|Percona LucidDB PowerPoint Slides]]&lt;br /&gt;
* [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive]&lt;br /&gt;
: Demonstrates loading data, defining an OLAP cube, and browsing the cube with Pentaho, Jaspersoft, SpagoBI and Saiku which all use Mondrian to drive their OLAP functionality.&lt;br /&gt;
* [http://wiki.pentaho.com/display/COM/January+20,+2010+-+Nick+Goodman+-+LucidDB,+DynamoBI+and+Mondrian Pentaho - January 20, 2010 - Nick Goodman - LucidDB, DynamoBI and Mondrian]&lt;br /&gt;
: Webex Presentation and PDF of slides presenting benefits and features of LucidDB 0.9.3 in conjunction with Pentaho's BI Suite.&lt;br /&gt;
* [http://www.nicholasgoodman.com/bt/blog/2011/06/08/a-different-vision-for-the-value-of-big-data/ A different vision for the value of Big Data]&lt;br /&gt;
: DynamoBI (Commercial Sponsor of LucidDB) - CEO Nick Goodman - shares vision about how LucidDB forms an information hub from which many different data sources can be presented and queried through normal SQL.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Tutorial Videos and Screencasts ==&lt;br /&gt;
&lt;br /&gt;
* [http://www.dynamobi.com/c/support/tutorial-videos/ DynamoBI - Getting started online videos.]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/installation.swf Installing LucidDB]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/sqllineclient.swf Connecting to LucidDB and using the Command Line Interface, sqllineClient]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/stopping_server.swf Stopping the server, with and without users connected]&lt;br /&gt;
* [http://youtu.be/sSYsVoVrp24 Installing and Loading LucidDB backed sample OLAP]&lt;br /&gt;
** Video from this blog: [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive] - By Slawomir Chodnicki, on March 12th, 2011&lt;br /&gt;
* [http://youtu.be/ZnY223u6q_Y Installing and running LucidDB as a daemon in Linux using a Java Service Wrapper]&lt;br /&gt;
: This is an approach that may also work well on Windows.  There is another approach, which is shorter and easier using the BASH shell under Linux. Documentation for both approaches can be found at [[LucidDbAsDaemonService]].&lt;br /&gt;
* Moving tables from one database to LucidDB&lt;br /&gt;
:[http://pub.eigenbase.org/wiki/LucidDbUpgrade#Downloads_-_Using_Pentaho_Data_Integration_to_generate_a_SQL_script_for_moving_tables Using Pentaho Data Integration to generate SQL for moving tables from an external database to LucidDB]&lt;br /&gt;
: This link is actually to a document about upgrading version to version of LucidDB, but because a PDI transformation file is used to generate SQL for the transition, the process can be generalized as moving from an external database to LucidDB with only minor modifications to the transformation.&lt;br /&gt;
&lt;br /&gt;
== Experimental ==&lt;br /&gt;
&lt;br /&gt;
*[http://kettle.pentaho.com/ Pentaho Data Integration (PDI)] - Bulk Loading Plugins&lt;br /&gt;
** [[LucidDbPDIStreamingLoader| Streaming Loader Step]] - Bulk load data the easy way. '''[RECOMMENDED]''' &lt;br /&gt;
**  [[LucidDbPdiBulkLoad | Bulk Load Step]] - '''[DEPRECATED after LucidDB 0.9.3]'''&lt;br /&gt;
**  [[LucidDbStreamingLoad |Streaming Loader]] : A good example for building bulk loaders from non-Java tools. '''[INFORMATIONAL]'''&lt;br /&gt;
* [[LucidDbHorizontalPartitioning | Horizontal Partitioning]]&lt;br /&gt;
: LucidDB does not currently support DDL for automatic [http://en.wikipedia.org/wiki/Partition_%28database%29 horizontal partitioning] of tables.  Although LucidDB's column-store architecture implements automatic vertical partitioning, horizontal partitioning is still a useful technique for scaling up to very large data volumes, so this page describes some manual approaches which can be used for very simple schemas.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbNonJavaClients | Using Non-Java Clients with LucidDB]]&lt;br /&gt;
: The main client API for LucidDB is JDBC.  This page discusses some options for overcoming the obstacle of developing an application in a language other than Java.&lt;br /&gt;
* [[LucidDbSqlDiffTesting | SQL Diff Testing]]&lt;br /&gt;
: Description of how to make use of some of the diff-based testing frameworks built into LucidDB for the purpose of test-driven ETL script development.&lt;br /&gt;
* [[LucidDbHive | Hive]]&lt;br /&gt;
: Walk-through document showing how to combine LucidDB with [http://hadoop.apache.org/hive/ Apache Hadoop's Hive].&lt;br /&gt;
&lt;br /&gt;
= LucidDB Developer Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbBuildFromSourceDistribution | Building LucidDB from source code]]&lt;br /&gt;
* [[LucidDbBuildFromPerforce | Building LucidDB from Perforce (version control software, VCS)]]&lt;br /&gt;
* [[Main_Page#Collaboration | Main Developer Collaboration Section ]]&lt;br /&gt;
* [[DesignMeetings | Design Meetings - Feature Ideas and Roadmaps]]&lt;br /&gt;
&lt;br /&gt;
= LucidDB Design Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbEfficientUpdates | Efficient Updates]]&lt;br /&gt;
* [[LucidDbCommonRelationalSubExpressionMaterialization | Common Relational Sub-Expression Materialization]]&lt;br /&gt;
&lt;br /&gt;
= Trademark Notice =&lt;br /&gt;
&lt;br /&gt;
&amp;lt;sub&amp;gt;LucidDB and the LucidDB logo are trademarks of DynamoBI Corporation.&amp;lt;/sub&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbDocs</id>
		<title>LucidDbDocs</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbDocs"/>
				<updated>2011-11-04T19:41:14Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* Connectors to External Data Sources (SQL/MED) ([http://farrago.sourceforge.net/design/sqlmed.html Management of External Data]) */&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;This is the main index page for documentation about the [[LucidDB]] open-source project, a DBMS optimized for business intelligence.  LucidDB is part of [http://www.eigenbase.org The Eigenbase Project].  &lt;br /&gt;
&lt;br /&gt;
= LucidDB User Documentation =&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Getting Started ==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''LucidDB Server''' [[Image:AdminUI 11-4-2011 1-07-28 PM.jpg|AdminUI v1.0|thumb|200px]]&lt;br /&gt;
* [[LucidDbGettingStarted | Getting Started - An Installation Guide]]&lt;br /&gt;
* [[LucidDbUserFaq | Frequently Asked Questions]]&lt;br /&gt;
* [[DynamoBIAdminUI | LucidDB AdminUI - Web Based Server Management Tool]] &lt;br /&gt;
: A graphical browser-based frontend from DynamoBI specifically built for LucidDB&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''External Software'''[[Image:Squirrel SQL 11-4-2011 1-24-26 PM.jpg|Squirrel SQL client running on Windows 7|thumb|200px]]&lt;br /&gt;
* [[LucidDbSquirrel | Squirrel SQL Client]] &lt;br /&gt;
: A graphical SQL client for accessing many database platforms, including LucidDB&lt;br /&gt;
* [[LucidDbPowerArchitect | Power Architect]]&lt;br /&gt;
: A data modeling tool&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== User Guides ==&lt;br /&gt;
* [[LucidDbUdfHowto | User Defined Functions (UDF) Howto]]&lt;br /&gt;
* [[LucidDbUdfJavaHowto | User Defined Functions (UDF) Java Howto]]&lt;br /&gt;
* [[LucidDbUdxJavaHowto | User Defined Transformation (UDX) Java Howto]]&lt;br /&gt;
* [[LucidDbEtlTutorial | Extract, Transform and Load (ETL) Tutorial]]&lt;br /&gt;
* [[LucidDbOlap| Online Analytical Processing (OLAP)]]&lt;br /&gt;
** [[LucidDbMondrianReplication | Using Pentaho Mondrian Replication]]&lt;br /&gt;
** [[LucidDbAggregateDesigner | Using Pentaho Aggregate Designer for Mondrian]]&lt;br /&gt;
* [[LucidDbConcurrencyControl | Concurrency Control]]&lt;br /&gt;
* [[LucidDbDataStorageAndAccess | Data Storage And Access]]&lt;br /&gt;
* [[LucidDbErrorHandling | Error Handling]]&lt;br /&gt;
* [[LucidDbIndexAccess | Index Access]]&lt;br /&gt;
* [[LucidDbJoinOptimization | Join Optimization]]&lt;br /&gt;
* [[LucidDbJoinImplementation | Join Implementation]]&lt;br /&gt;
* [[LucidDbSlowQueryDiagnosis | Slow Query Diagnosis]]:  Diagnosing slow queries using EXPLAIN PLAN and other tools&lt;br /&gt;
* [[LucidDbSubqueries | Subqueries]]&lt;br /&gt;
* [[LucidDbWarehouseLabels | Warehouse Labels]]&lt;br /&gt;
:  Labels allow users to have read-only query access to a snapshot of the database at an earlier point in time. Snapshots are accessible regardless of  concurrent activities on other connections, like ETL, preparing new data.&lt;br /&gt;
* [[LucidDbQueryExecution | Query Execution]]&lt;br /&gt;
* [[LucidDbServerContainer | Server Container]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Administrator Guides ==&lt;br /&gt;
&lt;br /&gt;
LucidDB is designed to require as little administration as possible, so we hope this section can remain short :)&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbMemoryManagement | Memory Management]]&lt;br /&gt;
** [[LucidDbBufferPoolSizing | Buffer Pool Sizing]]&lt;br /&gt;
* [[LucidDbSystemProcedures | System Procedures]]&lt;br /&gt;
: Useful for: Backup/Restore, Generating DDL for tables and other objects, managing sessions.&lt;br /&gt;
* [[LucidDbSystemParameters | System Parameters]]&lt;br /&gt;
: Useful information about tweaking: Memory usage, network settings, execution, and storage functionality.&lt;br /&gt;
* [[LucidDbSessionParameters| Session Parameters]]&lt;br /&gt;
* [[LucidDbSystemViews | System Views]]&lt;br /&gt;
: The DBA views defined by LucidDB provide a global picture of the contents of the system catalog (tables, columns, etc) and the volatile state of the system (sessions, cache utilization, etc).&lt;br /&gt;
* [[LucidDbPerformanceTuning | Performance Tuning]]&lt;br /&gt;
** [[LucidDbPerformanceCounters | Performance Counters]]&lt;br /&gt;
** [[LucidDbMonitor | Monitor]] Active monitoring&lt;br /&gt;
* [[LucidDbTracing | Tracing]] Debug Logs in LucidDB&lt;br /&gt;
* [[LucidDbBackupRestore | Performing Backups and Restores]]&lt;br /&gt;
* [[LucidDbUpgrade | How to upgrade to each new release.]]&lt;br /&gt;
* [[LucidDbAsDaemonService | Running LucidDB as a Service / Daemon]]&lt;br /&gt;
* [[LucidDbAsManagedBean | Running LucidDB as a Managed Java Bean]]&lt;br /&gt;
* [[LucidDbMoveCatalog | Moving the LucidDB Database Catalog]]&lt;br /&gt;
* [[LucidDbScriptingLucidUsingBASH | Scripting LucidDB using BASH shell scripts]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Function and SQL Language Reference Guides ==&lt;br /&gt;
* [[AppLib]] - Description of the utility function library in LucidDB&lt;br /&gt;
* [[LucidDbDataTypes | Supported Data Types]]&lt;br /&gt;
* [[LucidDbSqlConformance | SQL Standard Conformance]]&lt;br /&gt;
* [[LucidDbSqlReference | SQL Language Reference]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Connectors to External Data Sources (SQL/MED) ([http://farrago.sourceforge.net/design/sqlmed.html Management of External Data])==&lt;br /&gt;
[[Image:Connectors.jpg|link=&amp;quot;http://www.dynamobi.com/c/products/luciddb/connectors/&amp;quot;|200px|right]]&lt;br /&gt;
These connectors wrap up external datasources and allow them to present their data as foreign tables inside of LucidDB.  Connectors are an adapters that generally allow normal SQL queries to be run against datasources that may not support the SQL language directly.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbFlatFileWrapper | Flat File Wrapper]] - Connector enabling read-only SQL accesses to text files&lt;br /&gt;
* [[FarragoMedJdbcPlugin | JDBC Data Wrapper]] - Connector enabling presentation of external database tables in LucidDB&lt;br /&gt;
* [[FarragoMedSalesforcePlugin|Salesforce Data Wrapper]] - Connector for presenting Salesforce tables in LucidDB&lt;br /&gt;
&lt;br /&gt;
== Benchmark Studies ==&lt;br /&gt;
* [[LucidDbTpch|TPCH Benchmarks]]&lt;br /&gt;
* [[LucidDbSqbm | SQBM]]&lt;br /&gt;
* [[LucidDbOtp| OTP Benchmark using Bureau of Transportation Statistics]], [http://www.mysqlperformanceblog.com/2010/01/07/star-schema-bechmark-infobright-infinidb-and-luciddb SSB Benchmark]&lt;br /&gt;
* [[LucidDbBenchmarkCandidates| Benchmark Candidates]] - Published benchmarks and applications which could serve as good showcases for LucidDB's architecture&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Community Involvement ==&lt;br /&gt;
LucidDB is one of the best databases in the world because of the people, not just the technology.&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Community Support Forum'''&lt;br /&gt;
: Please visit, ask questions and help others &lt;br /&gt;
: [[http://www.luciddb.org/forums/ http://www.luciddb.org/forums/]]&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Chat with us online'''&lt;br /&gt;
: Many LucidDB users hang out on an Internet Relay Chat channel (IRC) called ##luciddb, using Freenode's [http://freenode.net/irc_servers.shtml] servers.&lt;br /&gt;
: We would love to answer your questions and help you get up and going using LucidDB.&lt;br /&gt;
: When you connect to '''chat.us.freenode.net''' or other freenode server near your country, be sure to use the command '''/join ##luciddb''' to actually join the chat channel for LucidDB.&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
:{| {{table}}&lt;br /&gt;
| align=&amp;quot;Left&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Software Name'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Platform'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Download Location'''&lt;br /&gt;
|-&lt;br /&gt;
| qwebirc||Web-based client||http://webchat.freenode.net/&lt;br /&gt;
|-&lt;br /&gt;
| ChatZilla||Firefox Add-on||https://addons.mozilla.org/en-US/firefox/addon/chatzilla/&lt;br /&gt;
|-&lt;br /&gt;
| mIRC||MS Windows||http://www.mirc.com/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||MS Windows||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||Linux||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat Aqua||Mac OS||http://sourceforge.net/projects/xchataqua/&lt;br /&gt;
|-&lt;br /&gt;
| Colloquy||Apple iPad &amp;amp; iPhone||http://colloquy.info/&lt;br /&gt;
|-&lt;br /&gt;
| Android - Internet Relay Chat||Google Android||https://market.android.com/details?id=com.countercultured.irc&amp;amp;hl=en&lt;br /&gt;
|}&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
* '''Bug and Feature Tracking&lt;br /&gt;
: Make a feature request or report a problem you have experienced.&lt;br /&gt;
: [[http://jira.eigenbase.org/secure/Dashboard.jspa http://jira.eigenbase.org/secure/Dashboard.jspa]]&lt;br /&gt;
&lt;br /&gt;
== Presentations / Blogs ==&lt;br /&gt;
* [[Media:PerconaLucidDB.ppt|Percona LucidDB PowerPoint Slides]]&lt;br /&gt;
* [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive]&lt;br /&gt;
: Demonstrates loading data, defining an OLAP cube, and browsing the cube with Pentaho, Jaspersoft, SpagoBI and Saiku which all use Mondrian to drive their OLAP functionality.&lt;br /&gt;
* [http://wiki.pentaho.com/display/COM/January+20,+2010+-+Nick+Goodman+-+LucidDB,+DynamoBI+and+Mondrian Pentaho - January 20, 2010 - Nick Goodman - LucidDB, DynamoBI and Mondrian]&lt;br /&gt;
: Webex Presentation and PDF of slides presenting benefits and features of LucidDB 0.9.3 in conjunction with Pentaho's BI Suite.&lt;br /&gt;
* [http://www.nicholasgoodman.com/bt/blog/2011/06/08/a-different-vision-for-the-value-of-big-data/ A different vision for the value of Big Data]&lt;br /&gt;
: DynamoBI (Commercial Sponsor of LucidDB) - CEO Nick Goodman - shares vision about how LucidDB forms an information hub from which many different data sources can be presented and queried through normal SQL.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Tutorial Videos and Screencasts ==&lt;br /&gt;
&lt;br /&gt;
* [http://www.dynamobi.com/c/support/tutorial-videos/ DynamoBI - Getting started online videos.]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/installation.swf Installing LucidDB]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/sqllineclient.swf Connecting to LucidDB and using the Command Line Interface, sqllineClient]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/stopping_server.swf Stopping the server, with and without users connected]&lt;br /&gt;
* [http://youtu.be/sSYsVoVrp24 Installing and Loading LucidDB backed sample OLAP]&lt;br /&gt;
** Video from this blog: [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive] - By Slawomir Chodnicki, on March 12th, 2011&lt;br /&gt;
* [http://youtu.be/ZnY223u6q_Y Installing and running LucidDB as a daemon in Linux using a Java Service Wrapper]&lt;br /&gt;
: This is an approach that may also work well on Windows.  There is another approach, which is shorter and easier using the BASH shell under Linux. Documentation for both approaches can be found at [[LucidDbAsDaemonService]].&lt;br /&gt;
* Moving tables from one database to LucidDB&lt;br /&gt;
:[http://pub.eigenbase.org/wiki/LucidDbUpgrade#Downloads_-_Using_Pentaho_Data_Integration_to_generate_a_SQL_script_for_moving_tables Using Pentaho Data Integration to generate SQL for moving tables from an external database to LucidDB]&lt;br /&gt;
: This link is actually to a document about upgrading version to version of LucidDB, but because a PDI transformation file is used to generate SQL for the transition, the process can be generalized as moving from an external database to LucidDB with only minor modifications to the transformation.&lt;br /&gt;
&lt;br /&gt;
== Experimental ==&lt;br /&gt;
&lt;br /&gt;
*[http://kettle.pentaho.com/ Pentaho Data Integration (PDI)] - Bulk Loading Plugins&lt;br /&gt;
** [[LucidDbPDIStreamingLoader| Streaming Loader Step]] - Bulk load data the easy way. '''[RECOMMENDED]''' &lt;br /&gt;
**  [[LucidDbPdiBulkLoad | Bulk Load Step]] - '''[DEPRECATED after LucidDB 0.9.3]'''&lt;br /&gt;
**  [[LucidDbStreamingLoad |Streaming Loader]] : A good example for building bulk loaders from non-Java tools. '''[INFORMATIONAL]'''&lt;br /&gt;
* [[LucidDbHorizontalPartitioning | Horizontal Partitioning]]&lt;br /&gt;
: LucidDB does not currently support DDL for automatic [http://en.wikipedia.org/wiki/Partition_%28database%29 horizontal partitioning] of tables.  Although LucidDB's column-store architecture implements automatic vertical partitioning, horizontal partitioning is still a useful technique for scaling up to very large data volumes, so this page describes some manual approaches which can be used for very simple schemas.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbNonJavaClients | Using Non-Java Clients with LucidDB]]&lt;br /&gt;
: The main client API for LucidDB is JDBC.  This page discusses some options for overcoming the obstacle of developing an application in a language other than Java.&lt;br /&gt;
* [[LucidDbSqlDiffTesting | SQL Diff Testing]]&lt;br /&gt;
: Description of how to make use of some of the diff-based testing frameworks built into LucidDB for the purpose of test-driven ETL script development.&lt;br /&gt;
* [[LucidDbHive | Hive]]&lt;br /&gt;
: Walk-through document showing how to combine LucidDB with [http://hadoop.apache.org/hive/ Apache Hadoop's Hive].&lt;br /&gt;
&lt;br /&gt;
= LucidDB Developer Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbBuildFromSourceDistribution | Building LucidDB from source code]]&lt;br /&gt;
* [[LucidDbBuildFromPerforce | Building LucidDB from Perforce (version control software, VCS)]]&lt;br /&gt;
* [[Main_Page#Collaboration | Main Developer Collaboration Section ]]&lt;br /&gt;
* [[DesignMeetings | Design Meetings - Feature Ideas and Roadmaps]]&lt;br /&gt;
&lt;br /&gt;
= LucidDB Design Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbEfficientUpdates | Efficient Updates]]&lt;br /&gt;
* [[LucidDbCommonRelationalSubExpressionMaterialization | Common Relational Sub-Expression Materialization]]&lt;br /&gt;
&lt;br /&gt;
= Trademark Notice =&lt;br /&gt;
&lt;br /&gt;
&amp;lt;sub&amp;gt;LucidDB and the LucidDB logo are trademarks of DynamoBI Corporation.&amp;lt;/sub&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/File:Connectors.jpg</id>
		<title>File:Connectors.jpg</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/File:Connectors.jpg"/>
				<updated>2011-11-04T19:37:10Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: Connectors Graphic from DynamoBI website.&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;Connectors Graphic from DynamoBI website.&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbDocs</id>
		<title>LucidDbDocs</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbDocs"/>
				<updated>2011-11-04T18:33:39Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* Getting Started */ repositioned images&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;This is the main index page for documentation about the [[LucidDB]] open-source project, a DBMS optimized for business intelligence.  LucidDB is part of [http://www.eigenbase.org The Eigenbase Project].  &lt;br /&gt;
&lt;br /&gt;
= LucidDB User Documentation =&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Getting Started ==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''LucidDB Server''' [[Image:AdminUI 11-4-2011 1-07-28 PM.jpg|AdminUI v1.0|thumb|200px]]&lt;br /&gt;
* [[LucidDbGettingStarted | Getting Started - An Installation Guide]]&lt;br /&gt;
* [[LucidDbUserFaq | Frequently Asked Questions]]&lt;br /&gt;
* [[DynamoBIAdminUI | LucidDB AdminUI - Web Based Server Management Tool]] &lt;br /&gt;
: A graphical browser-based frontend from DynamoBI specifically built for LucidDB&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''External Software'''[[Image:Squirrel SQL 11-4-2011 1-24-26 PM.jpg|Squirrel SQL client running on Windows 7|thumb|200px]]&lt;br /&gt;
* [[LucidDbSquirrel | Squirrel SQL Client]] &lt;br /&gt;
: A graphical SQL client for accessing many database platforms, including LucidDB&lt;br /&gt;
* [[LucidDbPowerArchitect | Power Architect]]&lt;br /&gt;
: A data modeling tool&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
== User Guides ==&lt;br /&gt;
* [[LucidDbUdfHowto | User Defined Functions (UDF) Howto]]&lt;br /&gt;
* [[LucidDbUdfJavaHowto | User Defined Functions (UDF) Java Howto]]&lt;br /&gt;
* [[LucidDbUdxJavaHowto | User Defined Transformation (UDX) Java Howto]]&lt;br /&gt;
* [[LucidDbEtlTutorial | Extract, Transform and Load (ETL) Tutorial]]&lt;br /&gt;
* [[LucidDbOlap| Online Analytical Processing (OLAP)]]&lt;br /&gt;
** [[LucidDbMondrianReplication | Using Pentaho Mondrian Replication]]&lt;br /&gt;
** [[LucidDbAggregateDesigner | Using Pentaho Aggregate Designer for Mondrian]]&lt;br /&gt;
* [[LucidDbConcurrencyControl | Concurrency Control]]&lt;br /&gt;
* [[LucidDbDataStorageAndAccess | Data Storage And Access]]&lt;br /&gt;
* [[LucidDbErrorHandling | Error Handling]]&lt;br /&gt;
* [[LucidDbIndexAccess | Index Access]]&lt;br /&gt;
* [[LucidDbJoinOptimization | Join Optimization]]&lt;br /&gt;
* [[LucidDbJoinImplementation | Join Implementation]]&lt;br /&gt;
* [[LucidDbSlowQueryDiagnosis | Slow Query Diagnosis]]:  Diagnosing slow queries using EXPLAIN PLAN and other tools&lt;br /&gt;
* [[LucidDbSubqueries | Subqueries]]&lt;br /&gt;
* [[LucidDbWarehouseLabels | Warehouse Labels]]&lt;br /&gt;
:  Labels allow users to have read-only query access to a snapshot of the database at an earlier point in time. Snapshots are accessible regardless of  concurrent activities on other connections, like ETL, preparing new data.&lt;br /&gt;
* [[LucidDbQueryExecution | Query Execution]]&lt;br /&gt;
* [[LucidDbServerContainer | Server Container]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Administrator Guides ==&lt;br /&gt;
&lt;br /&gt;
LucidDB is designed to require as little administration as possible, so we hope this section can remain short :)&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbMemoryManagement | Memory Management]]&lt;br /&gt;
** [[LucidDbBufferPoolSizing | Buffer Pool Sizing]]&lt;br /&gt;
* [[LucidDbSystemProcedures | System Procedures]]&lt;br /&gt;
: Useful for: Backup/Restore, Generating DDL for tables and other objects, managing sessions.&lt;br /&gt;
* [[LucidDbSystemParameters | System Parameters]]&lt;br /&gt;
: Useful information about tweaking: Memory usage, network settings, execution, and storage functionality.&lt;br /&gt;
* [[LucidDbSessionParameters| Session Parameters]]&lt;br /&gt;
* [[LucidDbSystemViews | System Views]]&lt;br /&gt;
: The DBA views defined by LucidDB provide a global picture of the contents of the system catalog (tables, columns, etc) and the volatile state of the system (sessions, cache utilization, etc).&lt;br /&gt;
* [[LucidDbPerformanceTuning | Performance Tuning]]&lt;br /&gt;
** [[LucidDbPerformanceCounters | Performance Counters]]&lt;br /&gt;
** [[LucidDbMonitor | Monitor]] Active monitoring&lt;br /&gt;
* [[LucidDbTracing | Tracing]] Debug Logs in LucidDB&lt;br /&gt;
* [[LucidDbBackupRestore | Performing Backups and Restores]]&lt;br /&gt;
* [[LucidDbUpgrade | How to upgrade to each new release.]]&lt;br /&gt;
* [[LucidDbAsDaemonService | Running LucidDB as a Service / Daemon]]&lt;br /&gt;
* [[LucidDbAsManagedBean | Running LucidDB as a Managed Java Bean]]&lt;br /&gt;
* [[LucidDbMoveCatalog | Moving the LucidDB Database Catalog]]&lt;br /&gt;
* [[LucidDbScriptingLucidUsingBASH | Scripting LucidDB using BASH shell scripts]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Function and SQL Language Reference Guides ==&lt;br /&gt;
* [[AppLib]] - Description of the utility function library in LucidDB&lt;br /&gt;
* [[LucidDbDataTypes | Supported Data Types]]&lt;br /&gt;
* [[LucidDbSqlConformance | SQL Standard Conformance]]&lt;br /&gt;
* [[LucidDbSqlReference | SQL Language Reference]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Connectors to External Data Sources (SQL/MED) ([http://farrago.sourceforge.net/design/sqlmed.html Management of External Data])==&lt;br /&gt;
These connectors wrap up external datasources and allow them to present their data as foreign tables inside of LucidDB.  Connectors are an adapters that generally allow normal SQL queries to be run against datasources that may not support the SQL language directly.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbFlatFileWrapper | Flat File Wrapper]] - Connector enabling read-only SQL accesses to text files&lt;br /&gt;
* [[FarragoMedJdbcPlugin | JDBC Data Wrapper]] - Connector enabling presentation of external database tables in LucidDB&lt;br /&gt;
* [[FarragoMedSalesforcePlugin|Salesforce Data Wrapper]] - Connector for presenting Salesforce tables in LucidDB&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Benchmark Studies ==&lt;br /&gt;
* [[LucidDbTpch|TPCH Benchmarks]]&lt;br /&gt;
* [[LucidDbSqbm | SQBM]]&lt;br /&gt;
* [[LucidDbOtp| OTP Benchmark using Bureau of Transportation Statistics]], [http://www.mysqlperformanceblog.com/2010/01/07/star-schema-bechmark-infobright-infinidb-and-luciddb SSB Benchmark]&lt;br /&gt;
* [[LucidDbBenchmarkCandidates| Benchmark Candidates]] - Published benchmarks and applications which could serve as good showcases for LucidDB's architecture&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Community Involvement ==&lt;br /&gt;
LucidDB is one of the best databases in the world because of the people, not just the technology.&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Community Support Forum'''&lt;br /&gt;
: Please visit, ask questions and help others &lt;br /&gt;
: [[http://www.luciddb.org/forums/ http://www.luciddb.org/forums/]]&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Chat with us online'''&lt;br /&gt;
: Many LucidDB users hang out on an Internet Relay Chat channel (IRC) called ##luciddb, using Freenode's [http://freenode.net/irc_servers.shtml] servers.&lt;br /&gt;
: We would love to answer your questions and help you get up and going using LucidDB.&lt;br /&gt;
: When you connect to '''chat.us.freenode.net''' or other freenode server near your country, be sure to use the command '''/join ##luciddb''' to actually join the chat channel for LucidDB.&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
:{| {{table}}&lt;br /&gt;
| align=&amp;quot;Left&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Software Name'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Platform'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Download Location'''&lt;br /&gt;
|-&lt;br /&gt;
| qwebirc||Web-based client||http://webchat.freenode.net/&lt;br /&gt;
|-&lt;br /&gt;
| ChatZilla||Firefox Add-on||https://addons.mozilla.org/en-US/firefox/addon/chatzilla/&lt;br /&gt;
|-&lt;br /&gt;
| mIRC||MS Windows||http://www.mirc.com/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||MS Windows||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||Linux||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat Aqua||Mac OS||http://sourceforge.net/projects/xchataqua/&lt;br /&gt;
|-&lt;br /&gt;
| Colloquy||Apple iPad &amp;amp; iPhone||http://colloquy.info/&lt;br /&gt;
|-&lt;br /&gt;
| Android - Internet Relay Chat||Google Android||https://market.android.com/details?id=com.countercultured.irc&amp;amp;hl=en&lt;br /&gt;
|}&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
* '''Bug and Feature Tracking&lt;br /&gt;
: Make a feature request or report a problem you have experienced.&lt;br /&gt;
: [[http://jira.eigenbase.org/secure/Dashboard.jspa http://jira.eigenbase.org/secure/Dashboard.jspa]]&lt;br /&gt;
&lt;br /&gt;
== Presentations / Blogs ==&lt;br /&gt;
* [[Media:PerconaLucidDB.ppt|Percona LucidDB PowerPoint Slides]]&lt;br /&gt;
* [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive]&lt;br /&gt;
: Demonstrates loading data, defining an OLAP cube, and browsing the cube with Pentaho, Jaspersoft, SpagoBI and Saiku which all use Mondrian to drive their OLAP functionality.&lt;br /&gt;
* [http://wiki.pentaho.com/display/COM/January+20,+2010+-+Nick+Goodman+-+LucidDB,+DynamoBI+and+Mondrian Pentaho - January 20, 2010 - Nick Goodman - LucidDB, DynamoBI and Mondrian]&lt;br /&gt;
: Webex Presentation and PDF of slides presenting benefits and features of LucidDB 0.9.3 in conjunction with Pentaho's BI Suite.&lt;br /&gt;
* [http://www.nicholasgoodman.com/bt/blog/2011/06/08/a-different-vision-for-the-value-of-big-data/ A different vision for the value of Big Data]&lt;br /&gt;
: DynamoBI (Commercial Sponsor of LucidDB) - CEO Nick Goodman - shares vision about how LucidDB forms an information hub from which many different data sources can be presented and queried through normal SQL.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Tutorial Videos and Screencasts ==&lt;br /&gt;
&lt;br /&gt;
* [http://www.dynamobi.com/c/support/tutorial-videos/ DynamoBI - Getting started online videos.]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/installation.swf Installing LucidDB]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/sqllineclient.swf Connecting to LucidDB and using the Command Line Interface, sqllineClient]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/stopping_server.swf Stopping the server, with and without users connected]&lt;br /&gt;
* [http://youtu.be/sSYsVoVrp24 Installing and Loading LucidDB backed sample OLAP]&lt;br /&gt;
** Video from this blog: [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive] - By Slawomir Chodnicki, on March 12th, 2011&lt;br /&gt;
* [http://youtu.be/ZnY223u6q_Y Installing and running LucidDB as a daemon in Linux using a Java Service Wrapper]&lt;br /&gt;
: This is an approach that may also work well on Windows.  There is another approach, which is shorter and easier using the BASH shell under Linux. Documentation for both approaches can be found at [[LucidDbAsDaemonService]].&lt;br /&gt;
* Moving tables from one database to LucidDB&lt;br /&gt;
:[http://pub.eigenbase.org/wiki/LucidDbUpgrade#Downloads_-_Using_Pentaho_Data_Integration_to_generate_a_SQL_script_for_moving_tables Using Pentaho Data Integration to generate SQL for moving tables from an external database to LucidDB]&lt;br /&gt;
: This link is actually to a document about upgrading version to version of LucidDB, but because a PDI transformation file is used to generate SQL for the transition, the process can be generalized as moving from an external database to LucidDB with only minor modifications to the transformation.&lt;br /&gt;
&lt;br /&gt;
== Experimental ==&lt;br /&gt;
&lt;br /&gt;
*[http://kettle.pentaho.com/ Pentaho Data Integration (PDI)] - Bulk Loading Plugins&lt;br /&gt;
** [[LucidDbPDIStreamingLoader| Streaming Loader Step]] - Bulk load data the easy way. '''[RECOMMENDED]''' &lt;br /&gt;
**  [[LucidDbPdiBulkLoad | Bulk Load Step]] - '''[DEPRECATED after LucidDB 0.9.3]'''&lt;br /&gt;
**  [[LucidDbStreamingLoad |Streaming Loader]] : A good example for building bulk loaders from non-Java tools. '''[INFORMATIONAL]'''&lt;br /&gt;
* [[LucidDbHorizontalPartitioning | Horizontal Partitioning]]&lt;br /&gt;
: LucidDB does not currently support DDL for automatic [http://en.wikipedia.org/wiki/Partition_%28database%29 horizontal partitioning] of tables.  Although LucidDB's column-store architecture implements automatic vertical partitioning, horizontal partitioning is still a useful technique for scaling up to very large data volumes, so this page describes some manual approaches which can be used for very simple schemas.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbNonJavaClients | Using Non-Java Clients with LucidDB]]&lt;br /&gt;
: The main client API for LucidDB is JDBC.  This page discusses some options for overcoming the obstacle of developing an application in a language other than Java.&lt;br /&gt;
* [[LucidDbSqlDiffTesting | SQL Diff Testing]]&lt;br /&gt;
: Description of how to make use of some of the diff-based testing frameworks built into LucidDB for the purpose of test-driven ETL script development.&lt;br /&gt;
* [[LucidDbHive | Hive]]&lt;br /&gt;
: Walk-through document showing how to combine LucidDB with [http://hadoop.apache.org/hive/ Apache Hadoop's Hive].&lt;br /&gt;
&lt;br /&gt;
= LucidDB Developer Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbBuildFromSourceDistribution | Building LucidDB from source code]]&lt;br /&gt;
* [[LucidDbBuildFromPerforce | Building LucidDB from Perforce (version control software, VCS)]]&lt;br /&gt;
* [[Main_Page#Collaboration | Main Developer Collaboration Section ]]&lt;br /&gt;
* [[DesignMeetings | Design Meetings - Feature Ideas and Roadmaps]]&lt;br /&gt;
&lt;br /&gt;
= LucidDB Design Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbEfficientUpdates | Efficient Updates]]&lt;br /&gt;
* [[LucidDbCommonRelationalSubExpressionMaterialization | Common Relational Sub-Expression Materialization]]&lt;br /&gt;
&lt;br /&gt;
= Trademark Notice =&lt;br /&gt;
&lt;br /&gt;
&amp;lt;sub&amp;gt;LucidDB and the LucidDB logo are trademarks of DynamoBI Corporation.&amp;lt;/sub&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbDocs</id>
		<title>LucidDbDocs</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbDocs"/>
				<updated>2011-11-04T18:30:38Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* Getting Started */ Added Squirrel SQL client picture&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;This is the main index page for documentation about the [[LucidDB]] open-source project, a DBMS optimized for business intelligence.  LucidDB is part of [http://www.eigenbase.org The Eigenbase Project].  &lt;br /&gt;
&lt;br /&gt;
= LucidDB User Documentation =&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Getting Started ==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''LucidDB Server'''&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
* [[LucidDbGettingStarted | Getting Started - An Installation Guide]]&lt;br /&gt;
* [[LucidDbUserFaq | Frequently Asked Questions]]&lt;br /&gt;
* [[DynamoBIAdminUI | LucidDB AdminUI - Web Based Server Management Tool]] [[Image:AdminUI 11-4-2011 1-07-28 PM.jpg|AdminUI v1.0|thumb|200px]]&lt;br /&gt;
: A graphical browser-based frontend from DynamoBI specifically built for LucidDB&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''External Software'''&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
* [[LucidDbSquirrel | Squirrel SQL Client]] [[Image:Squirrel SQL 11-4-2011 1-24-26 PM.jpg|Squirrel SQL client running on Windows 7|thumb|200px]]&lt;br /&gt;
: A graphical SQL client for accessing many database platforms, including LucidDB&lt;br /&gt;
* [[LucidDbPowerArchitect | Power Architect]]&lt;br /&gt;
: A data modeling tool&lt;br /&gt;
&lt;br /&gt;
== User Guides ==&lt;br /&gt;
* [[LucidDbUdfHowto | User Defined Functions (UDF) Howto]]&lt;br /&gt;
* [[LucidDbUdfJavaHowto | User Defined Functions (UDF) Java Howto]]&lt;br /&gt;
* [[LucidDbUdxJavaHowto | User Defined Transformation (UDX) Java Howto]]&lt;br /&gt;
* [[LucidDbEtlTutorial | Extract, Transform and Load (ETL) Tutorial]]&lt;br /&gt;
* [[LucidDbOlap| Online Analytical Processing (OLAP)]]&lt;br /&gt;
** [[LucidDbMondrianReplication | Using Pentaho Mondrian Replication]]&lt;br /&gt;
** [[LucidDbAggregateDesigner | Using Pentaho Aggregate Designer for Mondrian]]&lt;br /&gt;
* [[LucidDbConcurrencyControl | Concurrency Control]]&lt;br /&gt;
* [[LucidDbDataStorageAndAccess | Data Storage And Access]]&lt;br /&gt;
* [[LucidDbErrorHandling | Error Handling]]&lt;br /&gt;
* [[LucidDbIndexAccess | Index Access]]&lt;br /&gt;
* [[LucidDbJoinOptimization | Join Optimization]]&lt;br /&gt;
* [[LucidDbJoinImplementation | Join Implementation]]&lt;br /&gt;
* [[LucidDbSlowQueryDiagnosis | Slow Query Diagnosis]]:  Diagnosing slow queries using EXPLAIN PLAN and other tools&lt;br /&gt;
* [[LucidDbSubqueries | Subqueries]]&lt;br /&gt;
* [[LucidDbWarehouseLabels | Warehouse Labels]]&lt;br /&gt;
:  Labels allow users to have read-only query access to a snapshot of the database at an earlier point in time. Snapshots are accessible regardless of  concurrent activities on other connections, like ETL, preparing new data.&lt;br /&gt;
* [[LucidDbQueryExecution | Query Execution]]&lt;br /&gt;
* [[LucidDbServerContainer | Server Container]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Administrator Guides ==&lt;br /&gt;
&lt;br /&gt;
LucidDB is designed to require as little administration as possible, so we hope this section can remain short :)&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbMemoryManagement | Memory Management]]&lt;br /&gt;
** [[LucidDbBufferPoolSizing | Buffer Pool Sizing]]&lt;br /&gt;
* [[LucidDbSystemProcedures | System Procedures]]&lt;br /&gt;
: Useful for: Backup/Restore, Generating DDL for tables and other objects, managing sessions.&lt;br /&gt;
* [[LucidDbSystemParameters | System Parameters]]&lt;br /&gt;
: Useful information about tweaking: Memory usage, network settings, execution, and storage functionality.&lt;br /&gt;
* [[LucidDbSessionParameters| Session Parameters]]&lt;br /&gt;
* [[LucidDbSystemViews | System Views]]&lt;br /&gt;
: The DBA views defined by LucidDB provide a global picture of the contents of the system catalog (tables, columns, etc) and the volatile state of the system (sessions, cache utilization, etc).&lt;br /&gt;
* [[LucidDbPerformanceTuning | Performance Tuning]]&lt;br /&gt;
** [[LucidDbPerformanceCounters | Performance Counters]]&lt;br /&gt;
** [[LucidDbMonitor | Monitor]] Active monitoring&lt;br /&gt;
* [[LucidDbTracing | Tracing]] Debug Logs in LucidDB&lt;br /&gt;
* [[LucidDbBackupRestore | Performing Backups and Restores]]&lt;br /&gt;
* [[LucidDbUpgrade | How to upgrade to each new release.]]&lt;br /&gt;
* [[LucidDbAsDaemonService | Running LucidDB as a Service / Daemon]]&lt;br /&gt;
* [[LucidDbAsManagedBean | Running LucidDB as a Managed Java Bean]]&lt;br /&gt;
* [[LucidDbMoveCatalog | Moving the LucidDB Database Catalog]]&lt;br /&gt;
* [[LucidDbScriptingLucidUsingBASH | Scripting LucidDB using BASH shell scripts]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Function and SQL Language Reference Guides ==&lt;br /&gt;
* [[AppLib]] - Description of the utility function library in LucidDB&lt;br /&gt;
* [[LucidDbDataTypes | Supported Data Types]]&lt;br /&gt;
* [[LucidDbSqlConformance | SQL Standard Conformance]]&lt;br /&gt;
* [[LucidDbSqlReference | SQL Language Reference]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Connectors to External Data Sources (SQL/MED) ([http://farrago.sourceforge.net/design/sqlmed.html Management of External Data])==&lt;br /&gt;
These connectors wrap up external datasources and allow them to present their data as foreign tables inside of LucidDB.  Connectors are an adapters that generally allow normal SQL queries to be run against datasources that may not support the SQL language directly.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbFlatFileWrapper | Flat File Wrapper]] - Connector enabling read-only SQL accesses to text files&lt;br /&gt;
* [[FarragoMedJdbcPlugin | JDBC Data Wrapper]] - Connector enabling presentation of external database tables in LucidDB&lt;br /&gt;
* [[FarragoMedSalesforcePlugin|Salesforce Data Wrapper]] - Connector for presenting Salesforce tables in LucidDB&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Benchmark Studies ==&lt;br /&gt;
* [[LucidDbTpch|TPCH Benchmarks]]&lt;br /&gt;
* [[LucidDbSqbm | SQBM]]&lt;br /&gt;
* [[LucidDbOtp| OTP Benchmark using Bureau of Transportation Statistics]], [http://www.mysqlperformanceblog.com/2010/01/07/star-schema-bechmark-infobright-infinidb-and-luciddb SSB Benchmark]&lt;br /&gt;
* [[LucidDbBenchmarkCandidates| Benchmark Candidates]] - Published benchmarks and applications which could serve as good showcases for LucidDB's architecture&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Community Involvement ==&lt;br /&gt;
LucidDB is one of the best databases in the world because of the people, not just the technology.&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Community Support Forum'''&lt;br /&gt;
: Please visit, ask questions and help others &lt;br /&gt;
: [[http://www.luciddb.org/forums/ http://www.luciddb.org/forums/]]&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Chat with us online'''&lt;br /&gt;
: Many LucidDB users hang out on an Internet Relay Chat channel (IRC) called ##luciddb, using Freenode's [http://freenode.net/irc_servers.shtml] servers.&lt;br /&gt;
: We would love to answer your questions and help you get up and going using LucidDB.&lt;br /&gt;
: When you connect to '''chat.us.freenode.net''' or other freenode server near your country, be sure to use the command '''/join ##luciddb''' to actually join the chat channel for LucidDB.&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
:{| {{table}}&lt;br /&gt;
| align=&amp;quot;Left&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Software Name'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Platform'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Download Location'''&lt;br /&gt;
|-&lt;br /&gt;
| qwebirc||Web-based client||http://webchat.freenode.net/&lt;br /&gt;
|-&lt;br /&gt;
| ChatZilla||Firefox Add-on||https://addons.mozilla.org/en-US/firefox/addon/chatzilla/&lt;br /&gt;
|-&lt;br /&gt;
| mIRC||MS Windows||http://www.mirc.com/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||MS Windows||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||Linux||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat Aqua||Mac OS||http://sourceforge.net/projects/xchataqua/&lt;br /&gt;
|-&lt;br /&gt;
| Colloquy||Apple iPad &amp;amp; iPhone||http://colloquy.info/&lt;br /&gt;
|-&lt;br /&gt;
| Android - Internet Relay Chat||Google Android||https://market.android.com/details?id=com.countercultured.irc&amp;amp;hl=en&lt;br /&gt;
|}&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
* '''Bug and Feature Tracking&lt;br /&gt;
: Make a feature request or report a problem you have experienced.&lt;br /&gt;
: [[http://jira.eigenbase.org/secure/Dashboard.jspa http://jira.eigenbase.org/secure/Dashboard.jspa]]&lt;br /&gt;
&lt;br /&gt;
== Presentations / Blogs ==&lt;br /&gt;
* [[Media:PerconaLucidDB.ppt|Percona LucidDB PowerPoint Slides]]&lt;br /&gt;
* [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive]&lt;br /&gt;
: Demonstrates loading data, defining an OLAP cube, and browsing the cube with Pentaho, Jaspersoft, SpagoBI and Saiku which all use Mondrian to drive their OLAP functionality.&lt;br /&gt;
* [http://wiki.pentaho.com/display/COM/January+20,+2010+-+Nick+Goodman+-+LucidDB,+DynamoBI+and+Mondrian Pentaho - January 20, 2010 - Nick Goodman - LucidDB, DynamoBI and Mondrian]&lt;br /&gt;
: Webex Presentation and PDF of slides presenting benefits and features of LucidDB 0.9.3 in conjunction with Pentaho's BI Suite.&lt;br /&gt;
* [http://www.nicholasgoodman.com/bt/blog/2011/06/08/a-different-vision-for-the-value-of-big-data/ A different vision for the value of Big Data]&lt;br /&gt;
: DynamoBI (Commercial Sponsor of LucidDB) - CEO Nick Goodman - shares vision about how LucidDB forms an information hub from which many different data sources can be presented and queried through normal SQL.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Tutorial Videos and Screencasts ==&lt;br /&gt;
&lt;br /&gt;
* [http://www.dynamobi.com/c/support/tutorial-videos/ DynamoBI - Getting started online videos.]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/installation.swf Installing LucidDB]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/sqllineclient.swf Connecting to LucidDB and using the Command Line Interface, sqllineClient]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/stopping_server.swf Stopping the server, with and without users connected]&lt;br /&gt;
* [http://youtu.be/sSYsVoVrp24 Installing and Loading LucidDB backed sample OLAP]&lt;br /&gt;
** Video from this blog: [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive] - By Slawomir Chodnicki, on March 12th, 2011&lt;br /&gt;
* [http://youtu.be/ZnY223u6q_Y Installing and running LucidDB as a daemon in Linux using a Java Service Wrapper]&lt;br /&gt;
: This is an approach that may also work well on Windows.  There is another approach, which is shorter and easier using the BASH shell under Linux. Documentation for both approaches can be found at [[LucidDbAsDaemonService]].&lt;br /&gt;
* Moving tables from one database to LucidDB&lt;br /&gt;
:[http://pub.eigenbase.org/wiki/LucidDbUpgrade#Downloads_-_Using_Pentaho_Data_Integration_to_generate_a_SQL_script_for_moving_tables Using Pentaho Data Integration to generate SQL for moving tables from an external database to LucidDB]&lt;br /&gt;
: This link is actually to a document about upgrading version to version of LucidDB, but because a PDI transformation file is used to generate SQL for the transition, the process can be generalized as moving from an external database to LucidDB with only minor modifications to the transformation.&lt;br /&gt;
&lt;br /&gt;
== Experimental ==&lt;br /&gt;
&lt;br /&gt;
*[http://kettle.pentaho.com/ Pentaho Data Integration (PDI)] - Bulk Loading Plugins&lt;br /&gt;
** [[LucidDbPDIStreamingLoader| Streaming Loader Step]] - Bulk load data the easy way. '''[RECOMMENDED]''' &lt;br /&gt;
**  [[LucidDbPdiBulkLoad | Bulk Load Step]] - '''[DEPRECATED after LucidDB 0.9.3]'''&lt;br /&gt;
**  [[LucidDbStreamingLoad |Streaming Loader]] : A good example for building bulk loaders from non-Java tools. '''[INFORMATIONAL]'''&lt;br /&gt;
* [[LucidDbHorizontalPartitioning | Horizontal Partitioning]]&lt;br /&gt;
: LucidDB does not currently support DDL for automatic [http://en.wikipedia.org/wiki/Partition_%28database%29 horizontal partitioning] of tables.  Although LucidDB's column-store architecture implements automatic vertical partitioning, horizontal partitioning is still a useful technique for scaling up to very large data volumes, so this page describes some manual approaches which can be used for very simple schemas.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbNonJavaClients | Using Non-Java Clients with LucidDB]]&lt;br /&gt;
: The main client API for LucidDB is JDBC.  This page discusses some options for overcoming the obstacle of developing an application in a language other than Java.&lt;br /&gt;
* [[LucidDbSqlDiffTesting | SQL Diff Testing]]&lt;br /&gt;
: Description of how to make use of some of the diff-based testing frameworks built into LucidDB for the purpose of test-driven ETL script development.&lt;br /&gt;
* [[LucidDbHive | Hive]]&lt;br /&gt;
: Walk-through document showing how to combine LucidDB with [http://hadoop.apache.org/hive/ Apache Hadoop's Hive].&lt;br /&gt;
&lt;br /&gt;
= LucidDB Developer Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbBuildFromSourceDistribution | Building LucidDB from source code]]&lt;br /&gt;
* [[LucidDbBuildFromPerforce | Building LucidDB from Perforce (version control software, VCS)]]&lt;br /&gt;
* [[Main_Page#Collaboration | Main Developer Collaboration Section ]]&lt;br /&gt;
* [[DesignMeetings | Design Meetings - Feature Ideas and Roadmaps]]&lt;br /&gt;
&lt;br /&gt;
= LucidDB Design Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbEfficientUpdates | Efficient Updates]]&lt;br /&gt;
* [[LucidDbCommonRelationalSubExpressionMaterialization | Common Relational Sub-Expression Materialization]]&lt;br /&gt;
&lt;br /&gt;
= Trademark Notice =&lt;br /&gt;
&lt;br /&gt;
&amp;lt;sub&amp;gt;LucidDB and the LucidDB logo are trademarks of DynamoBI Corporation.&amp;lt;/sub&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/File:Squirrel_SQL_11-4-2011_1-24-26_PM.jpg</id>
		<title>File:Squirrel SQL 11-4-2011 1-24-26 PM.jpg</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/File:Squirrel_SQL_11-4-2011_1-24-26_PM.jpg"/>
				<updated>2011-11-04T18:28:07Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: Picture of the Squirrel SQL client running in Windows 7 64bit.&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;Picture of the Squirrel SQL client running in Windows 7 64bit.&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/DynamoBIAdminUI</id>
		<title>DynamoBIAdminUI</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/DynamoBIAdminUI"/>
				<updated>2011-11-04T18:23:17Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* About */&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;= About =&lt;br /&gt;
[[Image:AdminUI 11-4-2011 1-07-28 PM.jpg|AdminUI v1.0|thumb|400px]]&lt;br /&gt;
The AdminUI is a graphical front-end for any web browser to LucidDB which makes database administrating simpler and does not require a great knowledge of SQL. Even SQL pros can benefit from the AdminUI and speed up a variety of tasks normally done from a command line.&lt;br /&gt;
&lt;br /&gt;
For full feature details, see the [[AdminUI Features Page|DynamoBIAdminUI_Features]].&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&lt;br /&gt;
= Prerequisites =&lt;br /&gt;
&lt;br /&gt;
If you have not downloaded a copy of LucidDB, please see the instructions for that at the [[LucidDbGettingStarted | LucidDB Installation Page]]. An instance of the LucidDB Server must be running in order to connect with the AdminUI.&lt;br /&gt;
&lt;br /&gt;
In order to use the AdminUI, you must have a web browser with a recent version of Flash Player installed and a recent version of the Java Runtime Environment installed on your operating system.&lt;br /&gt;
&lt;br /&gt;
= Downloading =&lt;br /&gt;
&lt;br /&gt;
Go download [[http://www.dynamobi.com/c/downloads/stable/ our latest stable build]] of Dynamo AdminUI and related services. To keep up with the latest development builds, you may instead choose to download the zip from our http://build.dynamobi.com/job/dynamo_services/  location.  The link to the development builds currently is down.&lt;br /&gt;
&lt;br /&gt;
= Extracting and Running =&lt;br /&gt;
&lt;br /&gt;
Once the zip file has downloaded, extract the ''dynamodb-services'' directory to a location of your choice. If you are on Windows, you may be able to double-click the file '''bin\startup.bat''' to start the program, otherwise launch ''cmd.exe'' and navigate to the extraction directory to run the batch file. If you are running Linux or Mac, you will have to use the command window to navigate to the extraction directory, navigate to the bin directory inside, make the .sh files inside have executable privileges, and execute '''bin/startup.sh'''. For example, if you extracted to ''/home/me/dynamodb-services'', you would run these commands:&lt;br /&gt;
&lt;br /&gt;
{code:xml}&lt;br /&gt;
$ cd /home/me/dynamodb-services&lt;br /&gt;
$ for x in `find . -name '*.sh'`; do chmod +x $x; done&lt;br /&gt;
$ ./start-dynamoservices.sh&lt;br /&gt;
{code}&lt;br /&gt;
&lt;br /&gt;
Control of the terminal should be returned, and the AdminUI should now be accessible from your web browser. Please allow up to a minute for the services to load. Once everything is ready, navigate to http://localhost:8077 and after a redirect you should be greeted with this page:&lt;br /&gt;
&lt;br /&gt;
!adminui_welcome.png!&lt;br /&gt;
&lt;br /&gt;
If you have a LucidDB server running on your localhost as well, you may now login. The default username is '''sa''' with an empty password. If you have successfully logged in, you should see the list of available schemas in the left navigation menu populate.&lt;br /&gt;
&lt;br /&gt;
!adminui_loggedin.png!&lt;br /&gt;
&lt;br /&gt;
You can now see what sorts of things you can do with the AdminUI at the [[DynamoBIAdminUI_Features|AdminUI Features Page]].&lt;br /&gt;
&lt;br /&gt;
= Alternate Configurations =&lt;br /&gt;
&lt;br /&gt;
== What if I want to change the root's password or the password isn't blank? ==&lt;br /&gt;
&lt;br /&gt;
== What if I want LucidDB to run remotely? ==&lt;br /&gt;
&lt;br /&gt;
== What if LucidDB's port isn't the standard 8034? ==&lt;br /&gt;
&lt;br /&gt;
For all of these questions, each of these options are determined by a single configuration file. The web services read a file found in '''dynamodb-services/webapps/adminws/WEB-INF/classes''' called '''luciddb-jdbc-default.properties'''. You can simply edit this file directly, though the suggested alternative is to create a file called '''luciddb-jdbc.properties''' in the same directory with the same options. The services will favor this new file.&lt;br /&gt;
&lt;br /&gt;
First, to change &amp;quot;sa&amp;quot;'s default password (you can run this in SqlLine or in the AdminUI's query window):&lt;br /&gt;
&lt;br /&gt;
{code:sql}&lt;br /&gt;
create or replace user &amp;quot;sa&amp;quot; identified by 'newpassword';&lt;br /&gt;
{code}&lt;br /&gt;
&lt;br /&gt;
Now edit the luciddb-jdbc.properties file.&lt;br /&gt;
&lt;br /&gt;
{code:xml}&lt;br /&gt;
jdbc.driver=org.luciddb.jdbc.LucidDbClientDriver (1)&lt;br /&gt;
jdbc.url=jdbc:luciddb:http://localhost           (2)&lt;br /&gt;
jdbc.username=sa                                 (3)&lt;br /&gt;
jdbc.password=                                   (4)&lt;br /&gt;
{code}&lt;br /&gt;
&lt;br /&gt;
# Leave this alone.&lt;br /&gt;
# This is where you change the location of your LucidDB server. If it's on a different port, simply append ':XXXX' to the URL string as normal.&lt;br /&gt;
# Unless your root user has changed, this should remain &amp;quot;sa&amp;quot;.&lt;br /&gt;
# Enter your password.&lt;br /&gt;
&lt;br /&gt;
== What if I want a different port than 8077 for the web service? ==&lt;br /&gt;
&lt;br /&gt;
Simply edit the configuration file '''dynamodb-services/conf/server.xml''' and search for 8077 and replace it with your new value. Restart using the ''shutdown.sh'' and ''startup.sh'' scripts in the ''bin'' directory.&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/DynamoBIAdminUI</id>
		<title>DynamoBIAdminUI</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/DynamoBIAdminUI"/>
				<updated>2011-11-04T18:22:31Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* About */&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;= About =&lt;br /&gt;
[[Image:AdminUI 11-4-2011 1-07-28 PM.jpg|AdminUI v1.0|thumb|400px]]&lt;br /&gt;
The AdminUI is a graphical front-end for any web browser to LucidDB which makes database administrating simpler and does not require a great knowledge of SQL. Even SQL pros can benefit from the AdminUI and speed up a variety of tasks normally done from a command line.&lt;br /&gt;
&lt;br /&gt;
For full feature details, see the [[AdminUI Features Page|DynamoBIAdminUI_Features]].&lt;br /&gt;
&lt;br /&gt;
= Prerequisites =&lt;br /&gt;
&lt;br /&gt;
If you have not downloaded a copy of LucidDB, please see the instructions for that at the [[LucidDbGettingStarted | LucidDB Installation Page]]. An instance of the LucidDB Server must be running in order to connect with the AdminUI.&lt;br /&gt;
&lt;br /&gt;
In order to use the AdminUI, you must have a web browser with a recent version of Flash Player installed and a recent version of the Java Runtime Environment installed on your operating system.&lt;br /&gt;
&lt;br /&gt;
= Downloading =&lt;br /&gt;
&lt;br /&gt;
Go download [[http://www.dynamobi.com/c/downloads/stable/ our latest stable build]] of Dynamo AdminUI and related services. To keep up with the latest development builds, you may instead choose to download the zip from our http://build.dynamobi.com/job/dynamo_services/  location.  The link to the development builds currently is down.&lt;br /&gt;
&lt;br /&gt;
= Extracting and Running =&lt;br /&gt;
&lt;br /&gt;
Once the zip file has downloaded, extract the ''dynamodb-services'' directory to a location of your choice. If you are on Windows, you may be able to double-click the file '''bin\startup.bat''' to start the program, otherwise launch ''cmd.exe'' and navigate to the extraction directory to run the batch file. If you are running Linux or Mac, you will have to use the command window to navigate to the extraction directory, navigate to the bin directory inside, make the .sh files inside have executable privileges, and execute '''bin/startup.sh'''. For example, if you extracted to ''/home/me/dynamodb-services'', you would run these commands:&lt;br /&gt;
&lt;br /&gt;
{code:xml}&lt;br /&gt;
$ cd /home/me/dynamodb-services&lt;br /&gt;
$ for x in `find . -name '*.sh'`; do chmod +x $x; done&lt;br /&gt;
$ ./start-dynamoservices.sh&lt;br /&gt;
{code}&lt;br /&gt;
&lt;br /&gt;
Control of the terminal should be returned, and the AdminUI should now be accessible from your web browser. Please allow up to a minute for the services to load. Once everything is ready, navigate to http://localhost:8077 and after a redirect you should be greeted with this page:&lt;br /&gt;
&lt;br /&gt;
!adminui_welcome.png!&lt;br /&gt;
&lt;br /&gt;
If you have a LucidDB server running on your localhost as well, you may now login. The default username is '''sa''' with an empty password. If you have successfully logged in, you should see the list of available schemas in the left navigation menu populate.&lt;br /&gt;
&lt;br /&gt;
!adminui_loggedin.png!&lt;br /&gt;
&lt;br /&gt;
You can now see what sorts of things you can do with the AdminUI at the [[DynamoBIAdminUI_Features|AdminUI Features Page]].&lt;br /&gt;
&lt;br /&gt;
= Alternate Configurations =&lt;br /&gt;
&lt;br /&gt;
== What if I want to change the root's password or the password isn't blank? ==&lt;br /&gt;
&lt;br /&gt;
== What if I want LucidDB to run remotely? ==&lt;br /&gt;
&lt;br /&gt;
== What if LucidDB's port isn't the standard 8034? ==&lt;br /&gt;
&lt;br /&gt;
For all of these questions, each of these options are determined by a single configuration file. The web services read a file found in '''dynamodb-services/webapps/adminws/WEB-INF/classes''' called '''luciddb-jdbc-default.properties'''. You can simply edit this file directly, though the suggested alternative is to create a file called '''luciddb-jdbc.properties''' in the same directory with the same options. The services will favor this new file.&lt;br /&gt;
&lt;br /&gt;
First, to change &amp;quot;sa&amp;quot;'s default password (you can run this in SqlLine or in the AdminUI's query window):&lt;br /&gt;
&lt;br /&gt;
{code:sql}&lt;br /&gt;
create or replace user &amp;quot;sa&amp;quot; identified by 'newpassword';&lt;br /&gt;
{code}&lt;br /&gt;
&lt;br /&gt;
Now edit the luciddb-jdbc.properties file.&lt;br /&gt;
&lt;br /&gt;
{code:xml}&lt;br /&gt;
jdbc.driver=org.luciddb.jdbc.LucidDbClientDriver (1)&lt;br /&gt;
jdbc.url=jdbc:luciddb:http://localhost           (2)&lt;br /&gt;
jdbc.username=sa                                 (3)&lt;br /&gt;
jdbc.password=                                   (4)&lt;br /&gt;
{code}&lt;br /&gt;
&lt;br /&gt;
# Leave this alone.&lt;br /&gt;
# This is where you change the location of your LucidDB server. If it's on a different port, simply append ':XXXX' to the URL string as normal.&lt;br /&gt;
# Unless your root user has changed, this should remain &amp;quot;sa&amp;quot;.&lt;br /&gt;
# Enter your password.&lt;br /&gt;
&lt;br /&gt;
== What if I want a different port than 8077 for the web service? ==&lt;br /&gt;
&lt;br /&gt;
Simply edit the configuration file '''dynamodb-services/conf/server.xml''' and search for 8077 and replace it with your new value. Restart using the ''shutdown.sh'' and ''startup.sh'' scripts in the ''bin'' directory.&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	<entry>
		<id>http://luciddb.org/wiki/LucidDbDocs</id>
		<title>LucidDbDocs</title>
		<link rel="alternate" type="text/html" href="http://luciddb.org/wiki/LucidDbDocs"/>
				<updated>2011-11-04T18:21:14Z</updated>
		
		<summary type="html">&lt;p&gt;Smoodoo: /* Getting Started */ show AdminUI 1.0 thumbnail&lt;/p&gt;
&lt;hr /&gt;
&lt;div&gt;This is the main index page for documentation about the [[LucidDB]] open-source project, a DBMS optimized for business intelligence.  LucidDB is part of [http://www.eigenbase.org The Eigenbase Project].  &lt;br /&gt;
&lt;br /&gt;
= LucidDB User Documentation =&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Getting Started ==&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''LucidDB Server'''&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
* [[LucidDbGettingStarted | Getting Started - An Installation Guide]]&lt;br /&gt;
* [[LucidDbUserFaq | Frequently Asked Questions]]&lt;br /&gt;
* [[DynamoBIAdminUI | LucidDB AdminUI - Web Based Server Management Tool]] [[Image:AdminUI 11-4-2011 1-07-28 PM.jpg|AdminUI v1.0|thumb|200px]]&lt;br /&gt;
: A graphical browser-based frontend from DynamoBI specifically built for LucidDB&lt;br /&gt;
&amp;lt;br style=&amp;quot;clear: both&amp;quot; /&amp;gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
'''External Software'''&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
* [[LucidDbSquirrel | Squirrel SQL Client]] &lt;br /&gt;
: A graphical SQL client for accessing many database platforms, including LucidDB&lt;br /&gt;
* [[LucidDbPowerArchitect | Power Architect]]&lt;br /&gt;
: A data modeling tool&lt;br /&gt;
&lt;br /&gt;
== User Guides ==&lt;br /&gt;
* [[LucidDbUdfHowto | User Defined Functions (UDF) Howto]]&lt;br /&gt;
* [[LucidDbUdfJavaHowto | User Defined Functions (UDF) Java Howto]]&lt;br /&gt;
* [[LucidDbUdxJavaHowto | User Defined Transformation (UDX) Java Howto]]&lt;br /&gt;
* [[LucidDbEtlTutorial | Extract, Transform and Load (ETL) Tutorial]]&lt;br /&gt;
* [[LucidDbOlap| Online Analytical Processing (OLAP)]]&lt;br /&gt;
** [[LucidDbMondrianReplication | Using Pentaho Mondrian Replication]]&lt;br /&gt;
** [[LucidDbAggregateDesigner | Using Pentaho Aggregate Designer for Mondrian]]&lt;br /&gt;
* [[LucidDbConcurrencyControl | Concurrency Control]]&lt;br /&gt;
* [[LucidDbDataStorageAndAccess | Data Storage And Access]]&lt;br /&gt;
* [[LucidDbErrorHandling | Error Handling]]&lt;br /&gt;
* [[LucidDbIndexAccess | Index Access]]&lt;br /&gt;
* [[LucidDbJoinOptimization | Join Optimization]]&lt;br /&gt;
* [[LucidDbJoinImplementation | Join Implementation]]&lt;br /&gt;
* [[LucidDbSlowQueryDiagnosis | Slow Query Diagnosis]]:  Diagnosing slow queries using EXPLAIN PLAN and other tools&lt;br /&gt;
* [[LucidDbSubqueries | Subqueries]]&lt;br /&gt;
* [[LucidDbWarehouseLabels | Warehouse Labels]]&lt;br /&gt;
:  Labels allow users to have read-only query access to a snapshot of the database at an earlier point in time. Snapshots are accessible regardless of  concurrent activities on other connections, like ETL, preparing new data.&lt;br /&gt;
* [[LucidDbQueryExecution | Query Execution]]&lt;br /&gt;
* [[LucidDbServerContainer | Server Container]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Administrator Guides ==&lt;br /&gt;
&lt;br /&gt;
LucidDB is designed to require as little administration as possible, so we hope this section can remain short :)&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbMemoryManagement | Memory Management]]&lt;br /&gt;
** [[LucidDbBufferPoolSizing | Buffer Pool Sizing]]&lt;br /&gt;
* [[LucidDbSystemProcedures | System Procedures]]&lt;br /&gt;
: Useful for: Backup/Restore, Generating DDL for tables and other objects, managing sessions.&lt;br /&gt;
* [[LucidDbSystemParameters | System Parameters]]&lt;br /&gt;
: Useful information about tweaking: Memory usage, network settings, execution, and storage functionality.&lt;br /&gt;
* [[LucidDbSessionParameters| Session Parameters]]&lt;br /&gt;
* [[LucidDbSystemViews | System Views]]&lt;br /&gt;
: The DBA views defined by LucidDB provide a global picture of the contents of the system catalog (tables, columns, etc) and the volatile state of the system (sessions, cache utilization, etc).&lt;br /&gt;
* [[LucidDbPerformanceTuning | Performance Tuning]]&lt;br /&gt;
** [[LucidDbPerformanceCounters | Performance Counters]]&lt;br /&gt;
** [[LucidDbMonitor | Monitor]] Active monitoring&lt;br /&gt;
* [[LucidDbTracing | Tracing]] Debug Logs in LucidDB&lt;br /&gt;
* [[LucidDbBackupRestore | Performing Backups and Restores]]&lt;br /&gt;
* [[LucidDbUpgrade | How to upgrade to each new release.]]&lt;br /&gt;
* [[LucidDbAsDaemonService | Running LucidDB as a Service / Daemon]]&lt;br /&gt;
* [[LucidDbAsManagedBean | Running LucidDB as a Managed Java Bean]]&lt;br /&gt;
* [[LucidDbMoveCatalog | Moving the LucidDB Database Catalog]]&lt;br /&gt;
* [[LucidDbScriptingLucidUsingBASH | Scripting LucidDB using BASH shell scripts]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Function and SQL Language Reference Guides ==&lt;br /&gt;
* [[AppLib]] - Description of the utility function library in LucidDB&lt;br /&gt;
* [[LucidDbDataTypes | Supported Data Types]]&lt;br /&gt;
* [[LucidDbSqlConformance | SQL Standard Conformance]]&lt;br /&gt;
* [[LucidDbSqlReference | SQL Language Reference]]&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Connectors to External Data Sources (SQL/MED) ([http://farrago.sourceforge.net/design/sqlmed.html Management of External Data])==&lt;br /&gt;
These connectors wrap up external datasources and allow them to present their data as foreign tables inside of LucidDB.  Connectors are an adapters that generally allow normal SQL queries to be run against datasources that may not support the SQL language directly.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbFlatFileWrapper | Flat File Wrapper]] - Connector enabling read-only SQL accesses to text files&lt;br /&gt;
* [[FarragoMedJdbcPlugin | JDBC Data Wrapper]] - Connector enabling presentation of external database tables in LucidDB&lt;br /&gt;
* [[FarragoMedSalesforcePlugin|Salesforce Data Wrapper]] - Connector for presenting Salesforce tables in LucidDB&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Benchmark Studies ==&lt;br /&gt;
* [[LucidDbTpch|TPCH Benchmarks]]&lt;br /&gt;
* [[LucidDbSqbm | SQBM]]&lt;br /&gt;
* [[LucidDbOtp| OTP Benchmark using Bureau of Transportation Statistics]], [http://www.mysqlperformanceblog.com/2010/01/07/star-schema-bechmark-infobright-infinidb-and-luciddb SSB Benchmark]&lt;br /&gt;
* [[LucidDbBenchmarkCandidates| Benchmark Candidates]] - Published benchmarks and applications which could serve as good showcases for LucidDB's architecture&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Community Involvement ==&lt;br /&gt;
LucidDB is one of the best databases in the world because of the people, not just the technology.&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Community Support Forum'''&lt;br /&gt;
: Please visit, ask questions and help others &lt;br /&gt;
: [[http://www.luciddb.org/forums/ http://www.luciddb.org/forums/]]&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
&lt;br /&gt;
* '''Chat with us online'''&lt;br /&gt;
: Many LucidDB users hang out on an Internet Relay Chat channel (IRC) called ##luciddb, using Freenode's [http://freenode.net/irc_servers.shtml] servers.&lt;br /&gt;
: We would love to answer your questions and help you get up and going using LucidDB.&lt;br /&gt;
: When you connect to '''chat.us.freenode.net''' or other freenode server near your country, be sure to use the command '''/join ##luciddb''' to actually join the chat channel for LucidDB.&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
:{| {{table}}&lt;br /&gt;
| align=&amp;quot;Left&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Software Name'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Platform'''&lt;br /&gt;
| align=&amp;quot;center&amp;quot; style=&amp;quot;background:#f0f0f0;&amp;quot;|'''Download Location'''&lt;br /&gt;
|-&lt;br /&gt;
| qwebirc||Web-based client||http://webchat.freenode.net/&lt;br /&gt;
|-&lt;br /&gt;
| ChatZilla||Firefox Add-on||https://addons.mozilla.org/en-US/firefox/addon/chatzilla/&lt;br /&gt;
|-&lt;br /&gt;
| mIRC||MS Windows||http://www.mirc.com/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||MS Windows||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat||Linux||http://xchat.org/&lt;br /&gt;
|-&lt;br /&gt;
| X-Chat Aqua||Mac OS||http://sourceforge.net/projects/xchataqua/&lt;br /&gt;
|-&lt;br /&gt;
| Colloquy||Apple iPad &amp;amp; iPhone||http://colloquy.info/&lt;br /&gt;
|-&lt;br /&gt;
| Android - Internet Relay Chat||Google Android||https://market.android.com/details?id=com.countercultured.irc&amp;amp;hl=en&lt;br /&gt;
|}&lt;br /&gt;
&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;br /&gt;
* '''Bug and Feature Tracking&lt;br /&gt;
: Make a feature request or report a problem you have experienced.&lt;br /&gt;
: [[http://jira.eigenbase.org/secure/Dashboard.jspa http://jira.eigenbase.org/secure/Dashboard.jspa]]&lt;br /&gt;
&lt;br /&gt;
== Presentations / Blogs ==&lt;br /&gt;
* [[Media:PerconaLucidDB.ppt|Percona LucidDB PowerPoint Slides]]&lt;br /&gt;
* [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive]&lt;br /&gt;
: Demonstrates loading data, defining an OLAP cube, and browsing the cube with Pentaho, Jaspersoft, SpagoBI and Saiku which all use Mondrian to drive their OLAP functionality.&lt;br /&gt;
* [http://wiki.pentaho.com/display/COM/January+20,+2010+-+Nick+Goodman+-+LucidDB,+DynamoBI+and+Mondrian Pentaho - January 20, 2010 - Nick Goodman - LucidDB, DynamoBI and Mondrian]&lt;br /&gt;
: Webex Presentation and PDF of slides presenting benefits and features of LucidDB 0.9.3 in conjunction with Pentaho's BI Suite.&lt;br /&gt;
* [http://www.nicholasgoodman.com/bt/blog/2011/06/08/a-different-vision-for-the-value-of-big-data/ A different vision for the value of Big Data]&lt;br /&gt;
: DynamoBI (Commercial Sponsor of LucidDB) - CEO Nick Goodman - shares vision about how LucidDB forms an information hub from which many different data sources can be presented and queried through normal SQL.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
== Tutorial Videos and Screencasts ==&lt;br /&gt;
&lt;br /&gt;
* [http://www.dynamobi.com/c/support/tutorial-videos/ DynamoBI - Getting started online videos.]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/installation.swf Installing LucidDB]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/sqllineclient.swf Connecting to LucidDB and using the Command Line Interface, sqllineClient]&lt;br /&gt;
** [http://www.dynamobi.com/c/wp-content/uploads/2011/01/stopping_server.swf Stopping the server, with and without users connected]&lt;br /&gt;
* [http://youtu.be/sSYsVoVrp24 Installing and Loading LucidDB backed sample OLAP]&lt;br /&gt;
** Video from this blog: [http://type-exit.org/adventures-with-open-source-bi/2011/03/taking-luciddb-for-a-test-drive/ Taking LucidDB for an OLAP Test-Drive] - By Slawomir Chodnicki, on March 12th, 2011&lt;br /&gt;
* [http://youtu.be/ZnY223u6q_Y Installing and running LucidDB as a daemon in Linux using a Java Service Wrapper]&lt;br /&gt;
: This is an approach that may also work well on Windows.  There is another approach, which is shorter and easier using the BASH shell under Linux. Documentation for both approaches can be found at [[LucidDbAsDaemonService]].&lt;br /&gt;
* Moving tables from one database to LucidDB&lt;br /&gt;
:[http://pub.eigenbase.org/wiki/LucidDbUpgrade#Downloads_-_Using_Pentaho_Data_Integration_to_generate_a_SQL_script_for_moving_tables Using Pentaho Data Integration to generate SQL for moving tables from an external database to LucidDB]&lt;br /&gt;
: This link is actually to a document about upgrading version to version of LucidDB, but because a PDI transformation file is used to generate SQL for the transition, the process can be generalized as moving from an external database to LucidDB with only minor modifications to the transformation.&lt;br /&gt;
&lt;br /&gt;
== Experimental ==&lt;br /&gt;
&lt;br /&gt;
*[http://kettle.pentaho.com/ Pentaho Data Integration (PDI)] - Bulk Loading Plugins&lt;br /&gt;
** [[LucidDbPDIStreamingLoader| Streaming Loader Step]] - Bulk load data the easy way. '''[RECOMMENDED]''' &lt;br /&gt;
**  [[LucidDbPdiBulkLoad | Bulk Load Step]] - '''[DEPRECATED after LucidDB 0.9.3]'''&lt;br /&gt;
**  [[LucidDbStreamingLoad |Streaming Loader]] : A good example for building bulk loaders from non-Java tools. '''[INFORMATIONAL]'''&lt;br /&gt;
* [[LucidDbHorizontalPartitioning | Horizontal Partitioning]]&lt;br /&gt;
: LucidDB does not currently support DDL for automatic [http://en.wikipedia.org/wiki/Partition_%28database%29 horizontal partitioning] of tables.  Although LucidDB's column-store architecture implements automatic vertical partitioning, horizontal partitioning is still a useful technique for scaling up to very large data volumes, so this page describes some manual approaches which can be used for very simple schemas.&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbNonJavaClients | Using Non-Java Clients with LucidDB]]&lt;br /&gt;
: The main client API for LucidDB is JDBC.  This page discusses some options for overcoming the obstacle of developing an application in a language other than Java.&lt;br /&gt;
* [[LucidDbSqlDiffTesting | SQL Diff Testing]]&lt;br /&gt;
: Description of how to make use of some of the diff-based testing frameworks built into LucidDB for the purpose of test-driven ETL script development.&lt;br /&gt;
* [[LucidDbHive | Hive]]&lt;br /&gt;
: Walk-through document showing how to combine LucidDB with [http://hadoop.apache.org/hive/ Apache Hadoop's Hive].&lt;br /&gt;
&lt;br /&gt;
= LucidDB Developer Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbBuildFromSourceDistribution | Building LucidDB from source code]]&lt;br /&gt;
* [[LucidDbBuildFromPerforce | Building LucidDB from Perforce (version control software, VCS)]]&lt;br /&gt;
* [[Main_Page#Collaboration | Main Developer Collaboration Section ]]&lt;br /&gt;
* [[DesignMeetings | Design Meetings - Feature Ideas and Roadmaps]]&lt;br /&gt;
&lt;br /&gt;
= LucidDB Design Documentation =&lt;br /&gt;
&lt;br /&gt;
* [[LucidDbEfficientUpdates | Efficient Updates]]&lt;br /&gt;
* [[LucidDbCommonRelationalSubExpressionMaterialization | Common Relational Sub-Expression Materialization]]&lt;br /&gt;
&lt;br /&gt;
= Trademark Notice =&lt;br /&gt;
&lt;br /&gt;
&amp;lt;sub&amp;gt;LucidDB and the LucidDB logo are trademarks of DynamoBI Corporation.&amp;lt;/sub&amp;gt;&lt;/div&gt;</summary>
		<author><name>Smoodoo</name></author>	</entry>

	</feed>